<?xml version='1.0' encoding='utf-8'?>

<section xml:id="session25-p4">
    <title>Session 25: Labelings and products of graphs, Part 4</title>

    <p>
         I think I'd like start this week by taking a closer look
         at Exercise 3.
    </p>

    <example>
        <title>Exercise 3: (Part 2/2?)</title>
        <statement>
            <p>
                <em>Tricoloring</em> continued...
            </p>
        </statement>
        <solution>
            <p>
                Part (a) asks us to show that <q>an induced tricoloring 
                is a tricoloring</q>.  Suppose there's a map
                 <m>X_D \xrightarrow{c} \mathbf{3}</m> that tricolors 
                 the dots of graph <m>X</m>.  By definition of tricoloring, 
                 for any arrow <m>A \xrightarrow{a_X} X_A</m> in <m>X</m> 
                 we must have <m>c s a_X \neq c t a_X</m>.
            </p>
            <p>
                Given that our map <m>Y \xrightarrow{f} X</m> is 
                a <m>\mathcal{S}^{\downarrow_\bullet^\bullet \downarrow}</m>-map,
                it must <em>preserve structure</em>.  Namely,
                if <m>s': Y_A \xrightarrow Y_D</m> and <m>t': Y_A \xrightarrow Y_D</m>
                then 
                <m>s f a_Y = f s' a_Y</m> and <m>t f a_Y = f t' a_Y</m>
                for every <m>A \xrightarrow{a_Y} Y_A</m>.
            </p>
            <p>
                It should follow from these that 
                <m>c' = c \circ f</m> is a 
                tricoloring on <m>Y</m>.  
            </p>
            <p>
                Suppose <m>c'</m> is <em>NOT</em> a <q>tricoloring</q>.
                There must exist some arrow <m>a_Y \in Y_A</m>
                with <m>c' s' a_Y = c' t' a_Y</m> such that the source 
                and target have the same color.  Expand using our definition
                of <m>c'</m> to get <m>c f s' a_Y = c f t' a_Y</m>.
                By our structure preservation property, this is 
                equivalent to <m>c s f a_Y = c t f a_Y</m>. However,
                <m>a_X = f a_Y</m> is an arrow in <m>X_A</m>.  The 
                definition of tricoloring states that every
                 <m>c s a_X \neq c f a_X</m> so the statement
                 <m>c s (f a_Y) = c t (f a_Y)</m> generates
                 a contradiction.  Our assumption must be
                 false, establishing that the tricoloring
                 induced by composition <m>c \circ f</m> is 
                 in fact a tricoloring.
        
            </p>
            <p>
                I kind of wish my Python work was reliable
                enough to answer part (b), but for now I
                think I'd like to do some research on 
                references to <q>Fatima</q>  that 
                might yield clues. 
              </p>
            <ul>
                <li> The book is literally
                dedicated to Fatima.</li>
                <li>
                   The name shows up in Session 1, but as a member 
                        of a set. 
                </li>
                <li>  In Session 8, Fatima comments that 
                    maps having the same domain and codomain is a prerequisite
                    condition for being the same map.  </li>
                <li>In Session 9, Fatima is used as an example
                    for someone's congressional representative.  
                    The idea being that the representative is a 
                    fixed point of the endomap.
                </li>
                    <li> In Session 11, Fatima suggests using the 
                        associative property with the structure preservation
                        properties.  This is in the context of a map from 
                        a 3-cycle to a given graph.  </li>
                <li>        In Session 20, Fatima suggests that the 
                    terminal object <m>T</m> translates into
                    <m>1</m> in arithmetic.  Fatimia also
                    points out that this element 
                    corresponds with map to a <q>loop</q> .</li>
                <li>    <p>
                    In Session 22, Fatima asks about the 
                    heavy arrow notation which is defined
                    such that <q>any problem of factoring
                        a map through such a map has exactly
                        one solution</q>.  There is exactly
                    one map <m>\bar{x}</m> such that <m>\bar{x} p = x</m> 
                    in the following diagram:
                </p>
            
            
                <image width="50%">
                    <shortdescription>Picture of epimorphism from Session 22</shortdescription>
                    <latex-image>
                        \begin{tikzpicture}[scale=2]
                            \node (A) at (0,0) {$A$};
                            \node (B) at (1,0) {$B$};
                            \node (X) at (1,-1) {$X$};
                            \path[-{Stealth[scale=2]}]
                                (A) edge node[above] {$p$} (B);
                            \path[-{stealth}]
                                (B) edge node[right] {$\bar{x}$} (X)
                                (A) edge node[below left] {$x$} (X);
        
                        \end{tikzpicture}
                    </latex-image>
                </image> </li>
                <li>Also in Session 22, Fatima points out that the two
                    arrows in the graph of the sum are incident at a dot.
                </li>
            </ul>
            <p>
                Based on this information, I think I can expect
                my solution to have 3 dots to represent the 
                3 colors.  If the number <m>1</m> corresponds to
                a map to the terminal object, perhaps my other 
                dots might be defined by loops of other sizes?
            </p>
            <p>
                Consider the following graph:
            </p>
            <image width="50%">
                <shortdescription>Guess of F</shortdescription>
                <latex-image>
                    \begin{tikzpicture}[scale=2]
                    \node (A) at (0:1cm) {$a$};
                    \node (B) at (120:1cm) {$b$};
                    \node (C) at (240:1cm) {$c$};
                    \path[-{stealth}]
                        (A) edge (B)
                        (B) edge (C)
                        (C) edge (A)
                        (A) edge[loop right] (A)
                        (B) edge[bend left] (A)
                    ;
                    
                    \end{tikzpicture}
                </latex-image>
            </image>
            <p>
                An fixed point shape can only get mapped to <m>a</m>.
                Any 2-cycle shape can only get mapped to <m>a,b</m>.
                Any product-like shape would need to be mapped to <m>b</m>.
                Any sum-like shape would need to be mapped to <m>a</m>.  
                Any cycle-like shape would have points like <m>c</m>.
            </p>
            <p>
                Out of curiousity, let's depict this graph with a matrix also:
                <me>
                    \begin{bmatrix} 1 &amp; 1 &amp; 1 \\
                            1 &amp; 0 &amp; 0 \\
                            0 &amp; 1 &amp; 0 \end{bmatrix} 
                </me>
                
            </p>
            <p>
                Hey! Look! It's a <url href="https://en.wikipedia.org/wiki/Glider_(Conway%27s_Game_of_Life)">glider from Conway's Game of Life</url>!
                I wonder if that's a coincidence?
            </p>
            <p>
                If I'm correct, then my <q>tricoloring</q> map 
                applied to <m>X^{\circlearrowleft \alpha}</m> from
                Session 15 should look something like this:
            </p>
            <image width="90%">
                <latex-image>
                    \begin{tikzpicture}
                        \coordinate (XC) at (-7,0);
                        \node (X1) at ($(XC)+(-1.25,1.75)$) {$x_1$};
                        \node (X2) at ($(XC)+(-0.25,.75)$) {$x_2$};
                        \node (X3) at ($(XC)+(0.5,0)$) {$x_3$};
                        \node (X4) at ($(XC)+(2,1)$) {$x_4$};
                        \node (X5) at ($(XC)+(-2.5,1)$) {$x_5$};
                        \node (X6) at ($(XC)+(-1.5,0)$) {$x_6$};
                        \node (X7) at ($(XC)+(-0.5,-1.5)$) {$x_7$};
                        \node (X8) at ($(XC)+(-2.5,-1)$) {$x_8$};
                        \node (X9) at ($(XC)+(2,-1)$) {$x_9$};
                        \node (XL) at ($(XC)+(0,3.5)$) {$X^{\circlearrowright \alpha}$};
                        \draw (XC) circle [x radius=3.5,y radius=2.5];   
                        \path[-{stealth}]
                            (X1) edge (X5)
                            (X5) edge (X6)
                            (X6) edge (X7)
                            (X7) edge (X8)
                            (X8) edge (X6)
                            (X2) edge (X6)
                            (X3) edge (X7)
                            (X4) edge[bend right] (X9)
                            (X9) edge[bend right] (X4)
                            ;
                        
        
                            \draw (0,0) circle [x radius=2,y radius=2];  
        
                            \node (A) at (0:1cm) {$a$};
                            \node (B) at (120:1cm) {$b$};
                            \node (C) at (240:1cm) {$c$};
        
                            
                            \path[-{stealth}]
                            (A) edge (B)
                            (B) edge (C)
                            (C) edge (A)
                            (A) edge[loop right] (A)
                            (B) edge[bend left] (A)
                            ;    
        
                            \path[-{stealth},bend left,red,dashed]
                                (X1) edge (B)
                                (X5) edge (C)
                                (X6) edge (A)
                                (X7) edge (B)
                                (X8) edge (C)
                                (X2) edge (C)
                                (X3) edge (A)
                                (X4) edge (A)
                                (X9) edge (B)
                            ;
        
                    \end{tikzpicture}
                </latex-image>
            </image>
            <p>
                The part of this that I'm unsure of is how to treat 
                the cycle.  It seems like there's two ways of mapping 
                the 2-cycle to the 2-cycle, which would imply that my
                coloring is not necessarily unique. 
                Maybe there's someway I can <q>step out</q> and refer 
                to the initial object to sort the two out?  Or maybe 
                this is the intended meaning of <q>induced by exactly
                one map</q>? Once you decide how to map the loop, 
                <em>then</em> you have exactly one map? 
            </p>
            <p>
                I think this is as close to an answer as I'm going to
                get for now.
            </p>
        </solution>
    </example>
   

</section>