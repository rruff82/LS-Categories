var ptx_lunr_search_style = "textbook";
var ptx_lunr_docs = [
{
  "id": "colophon-1",
  "level": "1",
  "url": "colophon-1.html",
  "type": "Colophon",
  "number": "",
  "title": "Colophon",
  "body": "  https:\/\/mathstodon.xyz\/@suburbanlion   copyright  "
},
{
  "id": "about",
  "level": "1",
  "url": "about.html",
  "type": "Section",
  "number": "1.1",
  "title": "What is this?",
  "body": " What is this?  I've been trying to work my way though \"Conceptual Mathematics\" by Lawvere and Schanuel (herein \"L&S\") on my own and it's been kind of difficult. Part of the problem is that I don't have any feedback about whether my solutions to exercises are correct or not. In an effort to resolve this, I've decided to publish my solutions as I go through it so I can discuss them on social media.  With that in mind, it seemed like this would be a good opportunity for me to simulaneously learn how to work with PreTeXt . I've done a lot of work using latex for equations before but I'm expecting this content gives me some much needed practice rendering diagrams with the TiKz package.  To start, I went through my old notes on L&S from my first attempted reading. It looks like I made to to around session 11 before I started really getting lost. Furthermore, the erasable ink I had used to solve the exercises originally had faded significantly since I originally worked on this. Since I'm expecting one of my major difficulties with this to be recreating the diagrams, I figured restarting from the very beginning would be the best way forward.  I know myself better than to make promises about the rate I get through this, but part of me thinks it would be fun to do \"cat theory on caturday\". Giving myself a day of the week to finish by might give me the push I need to get it done. Besides, everything is better with cats.  "
},
{
  "id": "session1",
  "level": "1",
  "url": "session1.html",
  "type": "Section",
  "number": "1.2",
  "title": "Session 1",
  "body": " Session 1  Since L&S start Session 1 prior to \"Part 1\", I figured I should do the same. I'm presuming the reader has access to the source material and hope that my abbreviated reproduction of the prompts this way is \"fair use\". After all, calling them \"exercises\" implies they're meant for me to work out, no?   Exercise 1:   \"...other examples of combining two objects to get a third...\"    Since I was already thinking about cats in the context of category theory, my first thought was perhaps might satisfy the pattern here. The way my cats seem to behave is based in part on certain natural instincts to hunt and hide, but they have been brought up in an environment where those tendencies manifest as behaviors that we classify as cute and playful. On closer inspection, however, I became a little less confident in this when I tried to identify the \"maps\".  The diagrams in session 1 had the following structure:   A typical diagram of the examples considered in L&S \"Session 1\"      It didn't really make sense to me to think of \"behavior\" as A in this diagram and nature\/nuture as B\/C because I could think of many situations where a single behavior might make sense in different environments. It seems more natural to think of behavior as function of environment rather than the environment as a function of the behavior. I feel like the qualities I identified might more accurately be arranged like so:   Alternate explanation structure of behavior (A), nature (B), and nurture (C)      I think some of this unease comes from the complexity associated with behavior. I think on some level I'm confusing a \"behavioral genotype\" with a \"behavioral phenotype\". Being a cat creates a behavior profile of the actions they might engage in, but the environment selects for which actions are allowed to manifest.  Let's define as \"the set of animals\". We can consider \"instincts\" as a map that maps each animal to its \"natural behavior profile\" in set B. We can also consider \"selection\" as a map that maps each animal to an \"environmental reward profile\" in set C. Under these definitions, it seems reasonable to think of the composite map (or ) producing an \"observed behavior profile\" in set D.   Full diagram of behavior expression as maps.      As an example of these maps in action, consider the case of my cats \"playing with toys\". Given that they are cats, I know that they have certain hunting related instincts as a result. However, I also restrict their environment so that they have stuffed toys instead of live prey. What we percieve as \"playing\" is really a proxy for murderous insticts with no where else to go created by the combination of their instincts and the environment.  I think I can see how this additional structure helped to clarify what had started as an vague idea. It makes a lot more sense to think of mapping from a specific cat to a behavior profile, than trying to map from a cat's behavior profile to a specific environment.     Exercise 2:   \"...describe an experiment for deciding whether two nearby points are at the same level...\"    I feel there's an obvious answer to this question: a level. By using a bit of water in a clear container, you could convievably build a rudamentary level by comparing the slant of the water against a marked line. The only tricky part is designing it so you could align it with the points you want to compare, but the basic idea is that if the points are level then the water wouldn't tilt. The authors' use of the word \"level\" in the prompt makes me think they were heavily leading the reader towards something like this. A level makes it easy to hang pictures expressly because it removes the need to measure up from the floor.    "
},
{
  "id": "example-1",
  "level": "2",
  "url": "session1.html#example-1",
  "type": "Example",
  "number": "1.2.1",
  "title": "Exercise 1:.",
  "body": " Exercise 1:   \"...other examples of combining two objects to get a third...\"    Since I was already thinking about cats in the context of category theory, my first thought was perhaps might satisfy the pattern here. The way my cats seem to behave is based in part on certain natural instincts to hunt and hide, but they have been brought up in an environment where those tendencies manifest as behaviors that we classify as cute and playful. On closer inspection, however, I became a little less confident in this when I tried to identify the \"maps\".  The diagrams in session 1 had the following structure:   A typical diagram of the examples considered in L&S \"Session 1\"      It didn't really make sense to me to think of \"behavior\" as A in this diagram and nature\/nuture as B\/C because I could think of many situations where a single behavior might make sense in different environments. It seems more natural to think of behavior as function of environment rather than the environment as a function of the behavior. I feel like the qualities I identified might more accurately be arranged like so:   Alternate explanation structure of behavior (A), nature (B), and nurture (C)      I think some of this unease comes from the complexity associated with behavior. I think on some level I'm confusing a \"behavioral genotype\" with a \"behavioral phenotype\". Being a cat creates a behavior profile of the actions they might engage in, but the environment selects for which actions are allowed to manifest.  Let's define as \"the set of animals\". We can consider \"instincts\" as a map that maps each animal to its \"natural behavior profile\" in set B. We can also consider \"selection\" as a map that maps each animal to an \"environmental reward profile\" in set C. Under these definitions, it seems reasonable to think of the composite map (or ) producing an \"observed behavior profile\" in set D.   Full diagram of behavior expression as maps.      As an example of these maps in action, consider the case of my cats \"playing with toys\". Given that they are cats, I know that they have certain hunting related instincts as a result. However, I also restrict their environment so that they have stuffed toys instead of live prey. What we percieve as \"playing\" is really a proxy for murderous insticts with no where else to go created by the combination of their instincts and the environment.  I think I can see how this additional structure helped to clarify what had started as an vague idea. It makes a lot more sense to think of mapping from a specific cat to a behavior profile, than trying to map from a cat's behavior profile to a specific environment.   "
},
{
  "id": "example-2",
  "level": "2",
  "url": "session1.html#example-2",
  "type": "Example",
  "number": "1.2.5",
  "title": "Exercise 2:.",
  "body": " Exercise 2:   \"...describe an experiment for deciding whether two nearby points are at the same level...\"    I feel there's an obvious answer to this question: a level. By using a bit of water in a clear container, you could convievably build a rudamentary level by comparing the slant of the water against a marked line. The only tricky part is designing it so you could align it with the points you want to compare, but the basic idea is that if the points are level then the water wouldn't tilt. The authors' use of the word \"level\" in the prompt makes me think they were heavily leading the reader towards something like this. A level makes it easy to hang pictures expressly because it removes the need to measure up from the floor.   "
},
{
  "id": "article1",
  "level": "1",
  "url": "article1.html",
  "type": "Section",
  "number": "2.1",
  "title": "Article 1: Sets, maps, composition",
  "body": " Article 1: Sets, maps, composition  This is technically my second time through this content and I think I made some errors in my original solutions to exercises 2-5. Rather than ignore my mistakes, I've made the decision to recreate them here and explain why I think I was wrong afterward. I hope this method will give more insight into my thought process. To prevent accidental spoilers, this will be treated as a \"Hidden Exercise 10\".   Exercise 1:   \"...understand how we got diagrams...\"    Okay let's start by recreating diagram (i).   The original associative law diagram (i) from L&S Article 1.      For diagram (iv), we drop set C and connect B directly to D.   Completed associative law diagram (iv) from L&S Article 1.      To get from here to diagram (v), we drop set B and connect A directly to D.   Completed associative law diagram (v) from L&S Article 1.      As expected, this diagram is an exact match of diagram (iii).     Exercise 2   How many different maps are there with domain and codomain ?...    So I approached this like I would an algebraic function like , but instead of feeding in a number I'm feeding in John ( ), Mary ( ) or Sam ( ) and getting out a breakfast order at a diner that only serves eggs ( ) or coffee ( ) and has a 1 item limit per order.  I know that the number of outcomes is going to be the same for each person, so it made sense to focus on one person at a time. I imagined John's breakfast order, , as having 3 possible outcomes.   John orders eggs:  John orders coffee:  John fails to place an order at all: is undefined   Likewise, Mary and Sam have the same 3 possible outcomes: {eggs,coffee,undefined}. Since these events are independent of each other, the total number of possible outcomes is maps in total.     Exercise 3   Same, but for maps     I thought of this function like the \"favorite person\" map example from the reading. Using John as an example, I imagined 4 possible character roles in a hypothetical Hollywood love triangle:   John is in love with Mary.  John is in love with Sam.  John is a narcissist, in love with himself:  John is a psychopath, incapable of love: is undefined   Given an analogous set of 4 outcomes for Mary and Sam, the total number of possible plot outcomes is .     Exercise 4   Same, but for maps     I imagined this one as a \"mystery breakfast order\". I'm the a waiter in a diner delivering one order of eggs and one order of coffee to a table where John, Mary, and Sam are seated. The map tells me who ordered a given dish. Like before, I'll consider one example at a time. There are 4 possible outcomes for the source of the eggs:   John ordered the eggs:  Mary ordered the eggs:  Sam ordered the eggs:  Nobody ordered eggs: is undefined   Since there must likewise be 4 sources for the coffee, the total number of possible outcomes is .     Exercise 5   Same, but for maps     At this point I had observed a pattern and attempted to generalize. Following my reasoning from exercises 2-4, I notice all my answers fit a pattern:   In exercise 5, the size of the domain and codmain would each be 2. Evaluating the expression above gives us possible maps.     Exercise 6   How many maps satisfy ?    This is where I started to notice some problems with my previous reasoning. In order for me to talk about the properties of , it didn't make sense for to be \"undefined\" for an element in my domain. If I didn't get something \"out\", I wouldn't be able to feed it back in. So instead of considering all possible \"love triangles\" I identified earlier, I could narrow my search down to a more limited set of maps by excluding the \"psychopaths\" from my romance movies because they make it impossible to produce a sequel (more on that idea later).  This narrowed my search, but 27 is still too many for me too sort out by hand so I started looking for ways to break it down further. I knew I could satisfy the constraint with the identity map because clearly . I also know I could satisfy with a \"constant function\" such as the following:  Furthermore, there would need to be a total of 3 such \"constant functions\" because you'd need one for each of the 3 possible destinations. At that point it seemed clear I was still missing some. If I could construct a function with 1 arrow to each point and also a function with 3 arrows to a single point, it seemed reasonable to assume there'd be a class of maps with 2 arrows leading to a single point.  Let's consider the case where that point with two arrows leading in to be \"John\". One of the arrows leading to John has to be from himself for to be true, but the other arrow could originate at either Mary or Sam. Given these two possible maps exist for each person, we'd have maps of this type.  Putting everything together, some patterns seem to emerge when I listed these out in a table using binomials.     number of fixed points  number of maps  as binomial    1  3     2  6     3  1      Adding up all of these up gives us total of possible maps.     Exercise 7   How many maps satisfy ?    This was made even easier by the pattern I noticed in the previous example. Given that there are only two elements in the domain, there are maps with 1 fixed point and map with 2 fixed points (namely, ) for total of .     Exercise 8   ... for which ?...    None? B has fewer choices in it than A, so when f maps from A to B it must destroy at least one of them. The map g would not be able to produce 3 outputs from only 2 inputs, so there's no possible way for the composition to cover all elements of A.     Exercise 9   ... for which ?...    I started here by considering a blank diagram that would fit the composition, and start filling it in one point at a time.   Empty diagram for      Since I know each point has to end up back where it started, the only real \"choice\" is which of the 3 middle points the path goes through.   Diagram of potential paths for first point in      Once I fix the first path, the next point only has two possible intermediary points that it can go through.   Diagram of potential paths for second point in      Given that there were 3 choices for the first path and 2 choices for the second, there's a total of paths altogether.  This also makes sense as the binomial , because we have 3 possible intermediary points and we need to choose 2 of them.     Exercise 10   [hidden]    What first clued me in that my answers to exercises 2-5 might be wrong was the hint about \"BOOKKEEPING rules\" at the very end of the section. Looking back, it's seem like my programming background may have clouded my understanding of \"map\".  I was thinking about a \"map\" like I would a \"function\" in a program. In this analogy I had interpreted \"domain\" as my \"input type\" and \"codomain\" as \"output type\". The flaw in this reasoning is that I was allowing \"functions\" to \"error\", which is not true under the definitions of \"map\" and \"domain\" that were presented. If the map produced something \"undefined\", it would be inaccurate to include in the domain of to begin with.  This means that the generalized formula I came up with earlier is \"off by 1\", and the corrected formula should be as follows:   Under these revised definitions, the answers to excercises 2-5 should be as follows:     Excercise  Size of domain  Size of codomain  Expression  Result    2  3  2  2^3  8    3  3  3  3^3  27    4  2  3  3^2  9    5  2  2  2^2  4     I can see why these definitions simplify the process of talking about \"bookkeeping\" for the number maps. It's much easier to count the maps if we limit ourselves to the ones that are well-formed to start with. I'm left wondering if there's a situation where having an \"undefined\" output token like I used might be a useful construct, but the costs seem to far outweigh the benefits.  I can also see some programming parallels here between the \"switch\" statement in C-like languages and the \"match\" statement in Rust. The Rust compiler goes an extra step to verify that every possible outcome has been handled before even attempting to complile the code you give it. This provides an extra level of assurance that these functions will behave as expected.    "
},
{
  "id": "example-3",
  "level": "2",
  "url": "article1.html#example-3",
  "type": "Example",
  "number": "2.1.1",
  "title": "Exercise 1:.",
  "body": " Exercise 1:   \"...understand how we got diagrams...\"    Okay let's start by recreating diagram (i).   The original associative law diagram (i) from L&S Article 1.      For diagram (iv), we drop set C and connect B directly to D.   Completed associative law diagram (iv) from L&S Article 1.      To get from here to diagram (v), we drop set B and connect A directly to D.   Completed associative law diagram (v) from L&S Article 1.      As expected, this diagram is an exact match of diagram (iii).   "
},
{
  "id": "example-4",
  "level": "2",
  "url": "article1.html#example-4",
  "type": "Example",
  "number": "2.1.5",
  "title": "Exercise 2.",
  "body": " Exercise 2   How many different maps are there with domain and codomain ?...    So I approached this like I would an algebraic function like , but instead of feeding in a number I'm feeding in John ( ), Mary ( ) or Sam ( ) and getting out a breakfast order at a diner that only serves eggs ( ) or coffee ( ) and has a 1 item limit per order.  I know that the number of outcomes is going to be the same for each person, so it made sense to focus on one person at a time. I imagined John's breakfast order, , as having 3 possible outcomes.   John orders eggs:  John orders coffee:  John fails to place an order at all: is undefined   Likewise, Mary and Sam have the same 3 possible outcomes: {eggs,coffee,undefined}. Since these events are independent of each other, the total number of possible outcomes is maps in total.   "
},
{
  "id": "example-5",
  "level": "2",
  "url": "article1.html#example-5",
  "type": "Example",
  "number": "2.1.6",
  "title": "Exercise 3.",
  "body": " Exercise 3   Same, but for maps     I thought of this function like the \"favorite person\" map example from the reading. Using John as an example, I imagined 4 possible character roles in a hypothetical Hollywood love triangle:   John is in love with Mary.  John is in love with Sam.  John is a narcissist, in love with himself:  John is a psychopath, incapable of love: is undefined   Given an analogous set of 4 outcomes for Mary and Sam, the total number of possible plot outcomes is .   "
},
{
  "id": "example-6",
  "level": "2",
  "url": "article1.html#example-6",
  "type": "Example",
  "number": "2.1.7",
  "title": "Exercise 4.",
  "body": " Exercise 4   Same, but for maps     I imagined this one as a \"mystery breakfast order\". I'm the a waiter in a diner delivering one order of eggs and one order of coffee to a table where John, Mary, and Sam are seated. The map tells me who ordered a given dish. Like before, I'll consider one example at a time. There are 4 possible outcomes for the source of the eggs:   John ordered the eggs:  Mary ordered the eggs:  Sam ordered the eggs:  Nobody ordered eggs: is undefined   Since there must likewise be 4 sources for the coffee, the total number of possible outcomes is .   "
},
{
  "id": "example-7",
  "level": "2",
  "url": "article1.html#example-7",
  "type": "Example",
  "number": "2.1.8",
  "title": "Exercise 5.",
  "body": " Exercise 5   Same, but for maps     At this point I had observed a pattern and attempted to generalize. Following my reasoning from exercises 2-4, I notice all my answers fit a pattern:   In exercise 5, the size of the domain and codmain would each be 2. Evaluating the expression above gives us possible maps.   "
},
{
  "id": "example-8",
  "level": "2",
  "url": "article1.html#example-8",
  "type": "Example",
  "number": "2.1.9",
  "title": "Exercise 6.",
  "body": " Exercise 6   How many maps satisfy ?    This is where I started to notice some problems with my previous reasoning. In order for me to talk about the properties of , it didn't make sense for to be \"undefined\" for an element in my domain. If I didn't get something \"out\", I wouldn't be able to feed it back in. So instead of considering all possible \"love triangles\" I identified earlier, I could narrow my search down to a more limited set of maps by excluding the \"psychopaths\" from my romance movies because they make it impossible to produce a sequel (more on that idea later).  This narrowed my search, but 27 is still too many for me too sort out by hand so I started looking for ways to break it down further. I knew I could satisfy the constraint with the identity map because clearly . I also know I could satisfy with a \"constant function\" such as the following:  Furthermore, there would need to be a total of 3 such \"constant functions\" because you'd need one for each of the 3 possible destinations. At that point it seemed clear I was still missing some. If I could construct a function with 1 arrow to each point and also a function with 3 arrows to a single point, it seemed reasonable to assume there'd be a class of maps with 2 arrows leading to a single point.  Let's consider the case where that point with two arrows leading in to be \"John\". One of the arrows leading to John has to be from himself for to be true, but the other arrow could originate at either Mary or Sam. Given these two possible maps exist for each person, we'd have maps of this type.  Putting everything together, some patterns seem to emerge when I listed these out in a table using binomials.     number of fixed points  number of maps  as binomial    1  3     2  6     3  1      Adding up all of these up gives us total of possible maps.   "
},
{
  "id": "example-9",
  "level": "2",
  "url": "article1.html#example-9",
  "type": "Example",
  "number": "2.1.11",
  "title": "Exercise 7.",
  "body": " Exercise 7   How many maps satisfy ?    This was made even easier by the pattern I noticed in the previous example. Given that there are only two elements in the domain, there are maps with 1 fixed point and map with 2 fixed points (namely, ) for total of .   "
},
{
  "id": "example-10",
  "level": "2",
  "url": "article1.html#example-10",
  "type": "Example",
  "number": "2.1.12",
  "title": "Exercise 8.",
  "body": " Exercise 8   ... for which ?...    None? B has fewer choices in it than A, so when f maps from A to B it must destroy at least one of them. The map g would not be able to produce 3 outputs from only 2 inputs, so there's no possible way for the composition to cover all elements of A.   "
},
{
  "id": "example-11",
  "level": "2",
  "url": "article1.html#example-11",
  "type": "Example",
  "number": "2.1.13",
  "title": "Exercise 9.",
  "body": " Exercise 9   ... for which ?...    I started here by considering a blank diagram that would fit the composition, and start filling it in one point at a time.   Empty diagram for      Since I know each point has to end up back where it started, the only real \"choice\" is which of the 3 middle points the path goes through.   Diagram of potential paths for first point in      Once I fix the first path, the next point only has two possible intermediary points that it can go through.   Diagram of potential paths for second point in      Given that there were 3 choices for the first path and 2 choices for the second, there's a total of paths altogether.  This also makes sense as the binomial , because we have 3 possible intermediary points and we need to choose 2 of them.   "
},
{
  "id": "example-12",
  "level": "2",
  "url": "article1.html#example-12",
  "type": "Example",
  "number": "2.1.17",
  "title": "Exercise 10.",
  "body": " Exercise 10   [hidden]    What first clued me in that my answers to exercises 2-5 might be wrong was the hint about \"BOOKKEEPING rules\" at the very end of the section. Looking back, it's seem like my programming background may have clouded my understanding of \"map\".  I was thinking about a \"map\" like I would a \"function\" in a program. In this analogy I had interpreted \"domain\" as my \"input type\" and \"codomain\" as \"output type\". The flaw in this reasoning is that I was allowing \"functions\" to \"error\", which is not true under the definitions of \"map\" and \"domain\" that were presented. If the map produced something \"undefined\", it would be inaccurate to include in the domain of to begin with.  This means that the generalized formula I came up with earlier is \"off by 1\", and the corrected formula should be as follows:   Under these revised definitions, the answers to excercises 2-5 should be as follows:     Excercise  Size of domain  Size of codomain  Expression  Result    2  3  2  2^3  8    3  3  3  3^3  27    4  2  3  3^2  9    5  2  2  2^2  4     I can see why these definitions simplify the process of talking about \"bookkeeping\" for the number maps. It's much easier to count the maps if we limit ourselves to the ones that are well-formed to start with. I'm left wondering if there's a situation where having an \"undefined\" output token like I used might be a useful construct, but the costs seem to far outweigh the benefits.  I can also see some programming parallels here between the \"switch\" statement in C-like languages and the \"match\" statement in Rust. The Rust compiler goes an extra step to verify that every possible outcome has been handled before even attempting to complile the code you give it. This provides an extra level of assurance that these functions will behave as expected.   "
},
{
  "id": "sec-session2",
  "level": "1",
  "url": "sec-session2.html",
  "type": "Section",
  "number": "2.2",
  "title": "Session 2",
  "body": " Session 2  It feels kind of silly to post solutions to a problem set that includes the answers already, but this seems like a good opportunity to validate my generalization from last week.   Problems on the number of maps from one set to another   How many maps...    We have answers here, so let's confirm the results of the generalization from Article 1:     #    Expression  Result  Correct    1  4  1   1  YES    2  1  4   4  YES    3  0  4   1  YES    4  4  0   0  YES    5  0  0   \"it depends\"  \"mostly\"     The generalization seems to hold up, provided we define our exponential operator in such a way that . This is a common practice, but I've also seen situations where is left undefined instead. In this context, the answer of 1 to problem 5 makes more sense than than the alternative. In programming terms, it seems perfectly reasonable to think of \"no op\" as a \"function\" so there should be an analogous \"null map\" that maps from nothing to nothing.    "
},
{
  "id": "example-13",
  "level": "2",
  "url": "sec-session2.html#example-13",
  "type": "Example",
  "number": "2.2.1",
  "title": "Problems on the number of maps from one set to another.",
  "body": " Problems on the number of maps from one set to another   How many maps...    We have answers here, so let's confirm the results of the generalization from Article 1:     #    Expression  Result  Correct    1  4  1   1  YES    2  1  4   4  YES    3  0  4   1  YES    4  4  0   0  YES    5  0  0   \"it depends\"  \"mostly\"     The generalization seems to hold up, provided we define our exponential operator in such a way that . This is a common practice, but I've also seen situations where is left undefined instead. In this context, the answer of 1 to problem 5 makes more sense than than the alternative. In programming terms, it seems perfectly reasonable to think of \"no op\" as a \"function\" so there should be an analogous \"null map\" that maps from nothing to nothing.   "
},
{
  "id": "sec-session3",
  "level": "1",
  "url": "sec-session3.html",
  "type": "Section",
  "number": "2.3",
  "title": "Session 3",
  "body": " Session 3  This week's reading basically confirmed my generalization from Article 1. I found it somewhat interesting how I instictively happened to use a \"vector norm\" notation, , for the size of domain and codomain while L&S goes through both \"number sign\", , and \"absolute value\", . It seems so natural to want a symbol for \"number of elements\".  For present, I suppose I'll follow the book's convention and save myself two extra characters. It does leave me wondering what kind of distance metrics might be useful for talking about the \"sameness\" of two maps.   Exercise 1   ...Two of the expressions make sense...    So the trick with the map composition is to evaluate them from \"right to left\". The expression for (a) of could be translated into a sequence of steps as follows:   Apply map  Apply map  Apply map  Apply map   Notice how the codomain of each step matches the domain of the following step. Our composite map follows a path from , so it's domain is the \"source\" and codomain is the \"destination\" . Alternatively written, .  Moving on to (b), something interesting happens when we attempt to list out the steps of :   Apply map  Apply map  Apply map   Notice how the codomain for step 2 of is not the same as the domain of in step 3. This map composition is not well defined because the map will not have a valid input to work with.  Having already identified the one that \"doesn't make sense\", let's move directly onto identifying the domain and codomain of the final composition (c) . Applied from right to left, this gives us:   As expected, the domains and codomains link up correctly at each step. This means that the domain of is (same as the domain of the first map applied, ) and the codomain is (same as the codomain of the last map applied, ).     Exercise 2   ...follow the arrows in the diagram with your finger...    Let's start by recreating the source diagram:   Recreation of diagram used in L&S Session 3 Exercise 2      For composition (a), the path would look like this:   Recreation of finger tracing steps for L&S Session 3 Exercise 2 Part (a)      For composition (b) we can only trace out the first two steps. The final map fails because the arrow is pointing the wrong direction.   Recreation of finger tracing steps for L&S Session 3 Exercise 2 Part (b)      Our final composition is interesting in that takes us through map twice.   Recreation of finger tracing steps for L&S Session 3 Exercise 2 Part (c)        "
},
{
  "id": "example-14",
  "level": "2",
  "url": "sec-session3.html#example-14",
  "type": "Example",
  "number": "2.3.1",
  "title": "Exercise 1.",
  "body": " Exercise 1   ...Two of the expressions make sense...    So the trick with the map composition is to evaluate them from \"right to left\". The expression for (a) of could be translated into a sequence of steps as follows:   Apply map  Apply map  Apply map  Apply map   Notice how the codomain of each step matches the domain of the following step. Our composite map follows a path from , so it's domain is the \"source\" and codomain is the \"destination\" . Alternatively written, .  Moving on to (b), something interesting happens when we attempt to list out the steps of :   Apply map  Apply map  Apply map   Notice how the codomain for step 2 of is not the same as the domain of in step 3. This map composition is not well defined because the map will not have a valid input to work with.  Having already identified the one that \"doesn't make sense\", let's move directly onto identifying the domain and codomain of the final composition (c) . Applied from right to left, this gives us:   As expected, the domains and codomains link up correctly at each step. This means that the domain of is (same as the domain of the first map applied, ) and the codomain is (same as the codomain of the last map applied, ).   "
},
{
  "id": "example-15",
  "level": "2",
  "url": "sec-session3.html#example-15",
  "type": "Example",
  "number": "2.3.2",
  "title": "Exercise 2.",
  "body": " Exercise 2   ...follow the arrows in the diagram with your finger...    Let's start by recreating the source diagram:   Recreation of diagram used in L&S Session 3 Exercise 2      For composition (a), the path would look like this:   Recreation of finger tracing steps for L&S Session 3 Exercise 2 Part (a)      For composition (b) we can only trace out the first two steps. The final map fails because the arrow is pointing the wrong direction.   Recreation of finger tracing steps for L&S Session 3 Exercise 2 Part (b)      Our final composition is interesting in that takes us through map twice.   Recreation of finger tracing steps for L&S Session 3 Exercise 2 Part (c)       "
},
{
  "id": "article2",
  "level": "1",
  "url": "article2.html",
  "type": "Section",
  "number": "3.1",
  "title": "Article 2: Isomorphisms, Part 1",
  "body": " Article 2: Isomorphisms, Part 1  Time to undo things! I think I'm coming into this section with a decent grasp of what an isomorphism is already, but this idea that there are two inverses instead of just one still feels a little weird to me. I find myself reminding myself that this something I already do, but now I'm just being more specific with my language.  If teaching has taught me anything, it's that people sometimes have very different ideas about what is meant by seemingly simple phrases like \"the opposite of two\". It's often too easy to fall into a trap in assuming that since I'm thinking of two as a position on the number line and the opposite of that is defined relative to the origin, but \"negative two\" is really only one possible answer. If the question \"what's the oppositve of two?\" had beem asked in the kitchen instead of a math class, there's a case to be made that \"one half\" is actually the more appropriate response. The opposite of doubling a recipe is halving one. There might even be situations where it may be helpful to think of \"opposite\" as both the reciprocal and negation, as you would with slopes of perpendicular lines.  For now, I think I need to be paying attention to the domains and codomains of the maps because that's where I was getting tripped up earlier.   Exercise 1   Show that...is an isomorphism.    For the reflexive property (R), we can note that acts as it's own inverse. Since it leaves every object in place, applying it a second time would also do nothing so . If we define and , then the statements and hold true and is an isomorphism.  For the symmetric property (S), we're given that is an isomorphism with inverse . By the definition of inverse, we know and . These are precisely the two statements that define as the inverse of , just with the order reversed. By including both possible composition orders in the definition, it guarantees that is the inverse of if and only if is the inverse of .  For the transitive property, we're given that and are both isomorphisms. Let be the inverse of such that and , and let be the inverse of such that and . Consider the composition :   Consider . By the associative property, we have . Since , it follows that .  Consider . By the associative property, we have . Since , it follows that   Given and , we can then conclude that is an isomorphism with an inverse of .      Exercise 2   Suppose and are both inverses...    By definition, being an inverse implies and . Likewise, being an inverse implies and .  Suppose that . There would need to exist some with . Denote these values and for some with .  Consider the point: . Since , we must have . However, since we can also write this as . By the associative property, . Having shown that and , this contradicts our earlier assumption that and completes our proof that by contradiction.     Exercise 3   If has an inverse, then satistfies the two cancellation laws...    Part (a) is given in the text, so lets focus on (b). If , it follows that .  By the associative property, and . Thus, . By similar reasoning, .  It follows that if and only if which completes our proof.     Exercise 4   For each of the five maps above, decide whether it is invertable...    Let's break it down one map at time.    with has a well-defined inverse of .   with has a well-defined inverse of .   with does not have a well-defined inverse. We can't ever recover the negative values after squaring them.   with also does not have a well-defined inverse. Limiting the codomain to the produced outputs doesn't change the fact that we're losing sign information through the map.   with feels like a trick question. For most intents and purposes, we should have but the domain and codomain don't look right here. Specifically, we have a problem where is undefined and another problem where for . Based on these observations, I'd have to conclude that is not invertable.   Having still not entirely convinced myself these are correct, I thought it might be helpful to look at the graphs. I started with the first pair to make sure its what I expected.   Comparison of graphs for Article II, Exercise 4.1      One of the way's I think of my inverse function is as \"a reflection over the line \". This works nicely for a visual confirmation because I can tell that this relationship will hold for the rest of the lines. My confidence in being invertible is very high.  Now let's take a look at the relation between and :   Comparison of graphs for Article II, Exercise 4.2-4.4      Notice how the inverse function only replicates half of the parabola when reflected over the diagonal. My justification for thinking that (2) is an isomorphism but (3) and (4) are not is that every point in the domain needs to have an inverse that these can be matched up with a point in the codomain (both \"onto\" and \"one-to-one\"). By including negative numbers in our domain, we're essentially allowing un-invertable points to be passed in.  Now let's take a look at the final functions:   Comparison of graphs for Article II, Exercise 4.5      On the surface, this looks like precisely the function we're looking for. It looks like a pretty good \"mirror image\". The problem comes when consider the domain and codomain. The map is only valid for positive values, so let's crop and zoom in our previous graph.   Cropped and zoomed graph for Article II, Exercise 4.5      Notice how the graph of seemingly has an asymptote at and gets \"cut-off\" when it hits the x-axis. For us to consider this as an inverse map, the domain of the inverse should match the codomain of the map and vice versa. Even though these maps meet my reflection criteria, the fact that is undefined for and when domain and codomain are supposed to both be disqualifies it from being considered an inverse to the map .  Perhaps what I should really be doing is looking at the compositions. We can express as or we can express as . These expressions both simplify to just , but the holes left in the map when we divide by zero at or don't just disappear.    While I'm in the process of undo-ing things, I need to work on undo-ing my tendancy to rush things like this. I need to remind myself that learing this stuff isn't a race. I'm going to use the subdivisions in Article II to break this up into smaller sections so I can give it more time to sink in.  "
},
{
  "id": "example-16",
  "level": "2",
  "url": "article2.html#example-16",
  "type": "Example",
  "number": "3.1.1",
  "title": "Exercise 1.",
  "body": " Exercise 1   Show that...is an isomorphism.    For the reflexive property (R), we can note that acts as it's own inverse. Since it leaves every object in place, applying it a second time would also do nothing so . If we define and , then the statements and hold true and is an isomorphism.  For the symmetric property (S), we're given that is an isomorphism with inverse . By the definition of inverse, we know and . These are precisely the two statements that define as the inverse of , just with the order reversed. By including both possible composition orders in the definition, it guarantees that is the inverse of if and only if is the inverse of .  For the transitive property, we're given that and are both isomorphisms. Let be the inverse of such that and , and let be the inverse of such that and . Consider the composition :   Consider . By the associative property, we have . Since , it follows that .  Consider . By the associative property, we have . Since , it follows that   Given and , we can then conclude that is an isomorphism with an inverse of .    "
},
{
  "id": "example-17",
  "level": "2",
  "url": "article2.html#example-17",
  "type": "Example",
  "number": "3.1.2",
  "title": "Exercise 2.",
  "body": " Exercise 2   Suppose and are both inverses...    By definition, being an inverse implies and . Likewise, being an inverse implies and .  Suppose that . There would need to exist some with . Denote these values and for some with .  Consider the point: . Since , we must have . However, since we can also write this as . By the associative property, . Having shown that and , this contradicts our earlier assumption that and completes our proof that by contradiction.   "
},
{
  "id": "example-18",
  "level": "2",
  "url": "article2.html#example-18",
  "type": "Example",
  "number": "3.1.3",
  "title": "Exercise 3.",
  "body": " Exercise 3   If has an inverse, then satistfies the two cancellation laws...    Part (a) is given in the text, so lets focus on (b). If , it follows that .  By the associative property, and . Thus, . By similar reasoning, .  It follows that if and only if which completes our proof.   "
},
{
  "id": "example-19",
  "level": "2",
  "url": "article2.html#example-19",
  "type": "Example",
  "number": "3.1.4",
  "title": "Exercise 4.",
  "body": " Exercise 4   For each of the five maps above, decide whether it is invertable...    Let's break it down one map at time.    with has a well-defined inverse of .   with has a well-defined inverse of .   with does not have a well-defined inverse. We can't ever recover the negative values after squaring them.   with also does not have a well-defined inverse. Limiting the codomain to the produced outputs doesn't change the fact that we're losing sign information through the map.   with feels like a trick question. For most intents and purposes, we should have but the domain and codomain don't look right here. Specifically, we have a problem where is undefined and another problem where for . Based on these observations, I'd have to conclude that is not invertable.   Having still not entirely convinced myself these are correct, I thought it might be helpful to look at the graphs. I started with the first pair to make sure its what I expected.   Comparison of graphs for Article II, Exercise 4.1      One of the way's I think of my inverse function is as \"a reflection over the line \". This works nicely for a visual confirmation because I can tell that this relationship will hold for the rest of the lines. My confidence in being invertible is very high.  Now let's take a look at the relation between and :   Comparison of graphs for Article II, Exercise 4.2-4.4      Notice how the inverse function only replicates half of the parabola when reflected over the diagonal. My justification for thinking that (2) is an isomorphism but (3) and (4) are not is that every point in the domain needs to have an inverse that these can be matched up with a point in the codomain (both \"onto\" and \"one-to-one\"). By including negative numbers in our domain, we're essentially allowing un-invertable points to be passed in.  Now let's take a look at the final functions:   Comparison of graphs for Article II, Exercise 4.5      On the surface, this looks like precisely the function we're looking for. It looks like a pretty good \"mirror image\". The problem comes when consider the domain and codomain. The map is only valid for positive values, so let's crop and zoom in our previous graph.   Cropped and zoomed graph for Article II, Exercise 4.5      Notice how the graph of seemingly has an asymptote at and gets \"cut-off\" when it hits the x-axis. For us to consider this as an inverse map, the domain of the inverse should match the codomain of the map and vice versa. Even though these maps meet my reflection criteria, the fact that is undefined for and when domain and codomain are supposed to both be disqualifies it from being considered an inverse to the map .  Perhaps what I should really be doing is looking at the compositions. We can express as or we can express as . These expressions both simplify to just , but the holes left in the map when we divide by zero at or don't just disappear.   "
},
{
  "id": "article2-p2",
  "level": "1",
  "url": "article2-p2.html",
  "type": "Section",
  "number": "3.2",
  "title": "Article 2: Isomorphisms, Part 2",
  "body": " Article 2: Isomorphisms, Part 2  Choosing to break this article into subsections means that I can take my time with the only excercise. With that in mind, I'm going to use the opportunity to work on improving my latex skills by attempting to enumerate the diagrams of these solutions instead of just counting them. Sounds like fun, huh?   Exercise 5   ...how many maps are there with ?...    Let's begin by reproducing the internal diagram of :   Recreation of diagram from Article II, Exercise 5      Since I want , I know that needs to send each element of to something that will return to that value after applying . It seems reasonable to assume that the \"possible arrows\" for must come from the reversed arrows of as shown here:   Diagram from Article II, Exercise 5 but with reversed arrows      Since there are three options for where sends , two options for where it sends , and these choices are independent of each other, the total number of possibilities is the product: . This lends them nicely to a 3x2 grid where the column is the choice of where to send and row is the choice of where to send .   Grid of potential solutions for in Article II, Exercise 5      Now, that we've drawn all possible choices for , let's choose one and see how many options we might have for with the same property . I'll start by taking a single one:   One possible solution to from Article II, Exercise 5      Like before, I know my map must contain the reverse of the arrows from my chosen map , but fixing those arrows still leaves 3 points that are unaccounted for in the map. For each of those 3 possible sources, there are two possible destinations.   Possible choices for given a choice of      Since those choices are independent of each other, that means the total number of combinations is .   Grid of potential maps for given my chosen      With that, we've completed the exercise (and then some).    "
},
{
  "id": "example-20",
  "level": "2",
  "url": "article2-p2.html#example-20",
  "type": "Example",
  "number": "3.2.1",
  "title": "Exercise 5.",
  "body": " Exercise 5   ...how many maps are there with ?...    Let's begin by reproducing the internal diagram of :   Recreation of diagram from Article II, Exercise 5      Since I want , I know that needs to send each element of to something that will return to that value after applying . It seems reasonable to assume that the \"possible arrows\" for must come from the reversed arrows of as shown here:   Diagram from Article II, Exercise 5 but with reversed arrows      Since there are three options for where sends , two options for where it sends , and these choices are independent of each other, the total number of possibilities is the product: . This lends them nicely to a 3x2 grid where the column is the choice of where to send and row is the choice of where to send .   Grid of potential solutions for in Article II, Exercise 5      Now, that we've drawn all possible choices for , let's choose one and see how many options we might have for with the same property . I'll start by taking a single one:   One possible solution to from Article II, Exercise 5      Like before, I know my map must contain the reverse of the arrows from my chosen map , but fixing those arrows still leaves 3 points that are unaccounted for in the map. For each of those 3 possible sources, there are two possible destinations.   Possible choices for given a choice of      Since those choices are independent of each other, that means the total number of combinations is .   Grid of potential maps for given my chosen      With that, we've completed the exercise (and then some).   "
},
{
  "id": "article2-p3",
  "level": "1",
  "url": "article2-p3.html",
  "type": "Section",
  "number": "3.3",
  "title": "Article 2: Isomorphisms, Part 3",
  "body": " Article 2: Isomorphisms, Part 3  As I wrap up Article 2, I keep thinking back to the last expression in Exercise 4 and wonder if there's a better way of articulating what I saw. I'm starting to see more of the connection with the injective (one-to-one) and surjective (onto) properties I typically associate with isomorphisms are effectively guaranteed by the definitions of retraction and section.  I also find the symbol choice of in this part of Article 2 somewhat curious. The programmer in me wants to associate with a \"type\" or \"template\", while the mathematician in me is quietly screaming \"TOPOLOGY!\". I suppose I'll have to keep going to find out who's right-er.   Exercise 6   If the map has a retraction, ...    Essentially the argument is the same as the preceeding proof with minor substitutions. We're given that has a retraction, so we have some with the property .   Possible compositions given has a retraction.      This external diagram implies that we can define a map by using the composition . All that remains is to verify that it satistfies the required equation:   And that completes the proof.     Exercise 7   Suppose the map has a section, ...    Let's get our bearings straight with a diagram. We know has a section satisfying . We also have a set with a pair of maps and .   External diagram of given information in Article 2 Exercise 7.      Now lets further assume that , so that we have some such that . Consider the point defined by . If , then it must also hold true that for all . If we expand this, we get the following:       This contradicts our earlier assumption that and completes the proof. It's a little easier to see what's going on if we rearrange the diagram some:   Diagram of compositions induced by assumptions of Article 2 Exercise 7.      As long as , then . Since we've defined as a section of , it means that . Therefore, holds if and only if .     Exercise 8   ...the composite of two maps, each having sections, ...    Suppose we have composable maps and with respective sections and . By definition, and .  Based on this information, the composition has a section determined by the reversed composition of the sections . All we need to do is to show that .       It's easy to see why this order reversal is necessary by examining a diagram:   External diagram of given information in Article 2 Exercise 8.         Exercise 9   Suppose is a retraction of ...    Knowing that is a retraction of tells us that . If we define the map , we can prove that through the use of the associative property.      That completes the proof that is idempotent.  If we further assume that is an isomorphism, then we have some inverse function such that and . Since this inverse is unique, it follows that . Consequently, .     Exercise 10   If are both isomorphisms...    I think this one is a little easier to see with a diagram.   External diagram of given information in Article 2 Exercise 10.      Basically, to go backward to from , the order of inverses needs to also be reversed. We can prove this algebraically also.  Since is an isomorphism, it follows that and . Likewise, being an isomorphism implies and . The composition can be shown to sasify the conditions for being the inverse of .  First, we must demonstrate that :     Second, we must demonstrate that :     This complete our proof that      Exercise 11   If ...    Any that maps each element in to a unique element in should do the trick here.   Hypothetical for Article 2 Exercise 11      This has a unique inverse that reverses each of these arrows:   Corresponding for Article 2 Exercise 11      If we have , we'd be unable to define an isomorphism from because we don't have enough points to match them up one by one. One of those points in will have two arrows leading in and cause us to lose information about where we came from in the process:   Illustration of invertability problem with         Exercise 12   How many isomorphisms are there...    Essentially, the number of isomorphisms is a permutation problem. If we decide on a fixed order of elements in , each choice uses up the respective point in that it gets matched to. Therefore, we have 3 choices for Fatima, 2 choices for Omer, and 1 choice for Alysia, or possible choices all together.  The number of automorphisms should be the same, namely 6. It doesn't matter if we're assigning Fatima to or , it's precisely the same number of choices.  The number 27 in this context is the total number of possible maps from a set of 3 elements to another set of 3 elements: . This is the formula we arrived at after Article 1. Clearly \"the number of invertable maps\" should be less than \"the total number of maps\" because not every map will be invertable.    "
},
{
  "id": "example-21",
  "level": "2",
  "url": "article2-p3.html#example-21",
  "type": "Example",
  "number": "3.3.1",
  "title": "Exercise 6.",
  "body": " Exercise 6   If the map has a retraction, ...    Essentially the argument is the same as the preceeding proof with minor substitutions. We're given that has a retraction, so we have some with the property .   Possible compositions given has a retraction.      This external diagram implies that we can define a map by using the composition . All that remains is to verify that it satistfies the required equation:   And that completes the proof.   "
},
{
  "id": "example-22",
  "level": "2",
  "url": "article2-p3.html#example-22",
  "type": "Example",
  "number": "3.3.3",
  "title": "Exercise 7.",
  "body": " Exercise 7   Suppose the map has a section, ...    Let's get our bearings straight with a diagram. We know has a section satisfying . We also have a set with a pair of maps and .   External diagram of given information in Article 2 Exercise 7.      Now lets further assume that , so that we have some such that . Consider the point defined by . If , then it must also hold true that for all . If we expand this, we get the following:       This contradicts our earlier assumption that and completes the proof. It's a little easier to see what's going on if we rearrange the diagram some:   Diagram of compositions induced by assumptions of Article 2 Exercise 7.      As long as , then . Since we've defined as a section of , it means that . Therefore, holds if and only if .   "
},
{
  "id": "example-23",
  "level": "2",
  "url": "article2-p3.html#example-23",
  "type": "Example",
  "number": "3.3.6",
  "title": "Exercise 8.",
  "body": " Exercise 8   ...the composite of two maps, each having sections, ...    Suppose we have composable maps and with respective sections and . By definition, and .  Based on this information, the composition has a section determined by the reversed composition of the sections . All we need to do is to show that .       It's easy to see why this order reversal is necessary by examining a diagram:   External diagram of given information in Article 2 Exercise 8.       "
},
{
  "id": "example-24",
  "level": "2",
  "url": "article2-p3.html#example-24",
  "type": "Example",
  "number": "3.3.8",
  "title": "Exercise 9.",
  "body": " Exercise 9   Suppose is a retraction of ...    Knowing that is a retraction of tells us that . If we define the map , we can prove that through the use of the associative property.      That completes the proof that is idempotent.  If we further assume that is an isomorphism, then we have some inverse function such that and . Since this inverse is unique, it follows that . Consequently, .   "
},
{
  "id": "example-25",
  "level": "2",
  "url": "article2-p3.html#example-25",
  "type": "Example",
  "number": "3.3.9",
  "title": "Exercise 10.",
  "body": " Exercise 10   If are both isomorphisms...    I think this one is a little easier to see with a diagram.   External diagram of given information in Article 2 Exercise 10.      Basically, to go backward to from , the order of inverses needs to also be reversed. We can prove this algebraically also.  Since is an isomorphism, it follows that and . Likewise, being an isomorphism implies and . The composition can be shown to sasify the conditions for being the inverse of .  First, we must demonstrate that :     Second, we must demonstrate that :     This complete our proof that    "
},
{
  "id": "example-26",
  "level": "2",
  "url": "article2-p3.html#example-26",
  "type": "Example",
  "number": "3.3.11",
  "title": "Exercise 11.",
  "body": " Exercise 11   If ...    Any that maps each element in to a unique element in should do the trick here.   Hypothetical for Article 2 Exercise 11      This has a unique inverse that reverses each of these arrows:   Corresponding for Article 2 Exercise 11      If we have , we'd be unable to define an isomorphism from because we don't have enough points to match them up one by one. One of those points in will have two arrows leading in and cause us to lose information about where we came from in the process:   Illustration of invertability problem with       "
},
{
  "id": "example-27",
  "level": "2",
  "url": "article2-p3.html#example-27",
  "type": "Example",
  "number": "3.3.15",
  "title": "Exercise 12.",
  "body": " Exercise 12   How many isomorphisms are there...    Essentially, the number of isomorphisms is a permutation problem. If we decide on a fixed order of elements in , each choice uses up the respective point in that it gets matched to. Therefore, we have 3 choices for Fatima, 2 choices for Omer, and 1 choice for Alysia, or possible choices all together.  The number of automorphisms should be the same, namely 6. It doesn't matter if we're assigning Fatima to or , it's precisely the same number of choices.  The number 27 in this context is the total number of possible maps from a set of 3 elements to another set of 3 elements: . This is the formula we arrived at after Article 1. Clearly \"the number of invertable maps\" should be less than \"the total number of maps\" because not every map will be invertable.   "
},
{
  "id": "session4",
  "level": "1",
  "url": "session4.html",
  "type": "Section",
  "number": "3.4",
  "title": "Session 4: Division of maps: Isomorphisms",
  "body": " Session 4: Division of maps: Isomorphisms  While reading this section, I appreciated the fact that \"just reverse the arrows\" was the official description of isomorphisms on sets. It makes me feel like my answers to Article 2 are at least on the right track. I think my main goal for this week is to better understand what \"respects the combining-rules\" really means.   Exercise 1   Finish checking that is an isomorphism...    Let's start with first. The composition is applied from right to left, which means we double first then halve.   Next we check , where we halve first and double after:   This proof seems kind of trivial since multiplication on is commutative.     Exercise 2   Find an isomorphism ...    Let's start by organizing some data. Perhaps a table of each map will reveal some insight into the structure.   Function table for     even  odd    even  even  odd    odd  odd  even      Function table for     positive  negative    positive  positive  negative    negative  negative  positive     These two tables mirror each other quite nicely, which suggests that ordering of options shown here is probably the correct choice of . Let's go ahead and define as follows:   Internal diagram of our potential isomorphism      In order for us to show that this respects the combining rules, we need to verify that for all .   Combining rule validation table for    For even, even:      Confirmed ✓    For odd, even:      Confirmed ✓      For even, odd:      Confirmed ✓    For odd, odd:      Confirmed ✓      Suppose instead we had used the map given by the alternative assignment:   Internal diagram of alternative map choice      When and are both even, but . Thus, this map fails to preserve the combining rule .     Exercise 3   ...Unmask the imposters...    Let's start with (a): given by .  While it seems like \"subtract one\" would be a reasonable inverse, this is not an isomorphism because it fails to respect the combining-rule . Consider the case where and . We have and so . However, this is not the same as , which evaluates to instead.  The map in (b) and the map in (c) are both closely related because they share a common definition of , but differ in the domain and codomain.  Again there's an obvious inverse function of \"square root\", but the domains and codomains are what concern me. Notable about (b) is that it fails to map \"onto\" the entire codomain, because the map never produces any negative numbers as an output. The map in (c) resolves this by limiting the codomain to non-negative values, but it still fails to \"one-to-one\" because both 1 and -1 produce an output of 1.  The map in (d) and (e) likewise have similar definitions.  The map defined by the given expression acts as its own inverse: . Where (d) and (e) differ is in the \"combining-rule\". If we have , then a little algebra can show that . This means that both the identity rules and the combining-rules are satisfied for (d), making it the only genuine isomorphism in the list. The map in (e) fails to uphold the combining rule because . In the case where and , we have but .  Finally we have the map (f), which isn't even a map with the specified domain and codomain because the cube of a negative number is still negative. Had the map been defined with the correct codomain, , then we'd potentially be able to define an inverse map by using the \"cube root\" function.    As I was proof reading this session, I noticed a couple small errors in the 3rd exercise. One of these was a misread problem, but the other was a little more subtle. In an effort to get the most out of this as a learning experience, I thought it might be valuable to talk about what I learned from my mistakes.   Meta-Exercise   As I was proof reading, I noticed an error in Exercise 3 Part (e). It was a simple case of me not reading the question as precisely as needed. I think I was so excited to show (d) was an isomorphism that I didn't give (e) the amount of skepticism it deserved. I mistakely read the domain as instead of which made finding a counter-example trivial relative to the actual problem.  As I was looking over my solution to fix this, I noticed something else kind of odd. My solution began with \"Let's go one at a time\" but I had addressed some of the problems in pairs. There's something that felt natural about approaching them this way, but it also seemed kind of ironic that I had failed to produce a isomorphism between my problems and solutions in a section that was all about matching things up.  All of this started to get my thinking about the solutions to these problems as a map . Obviously this map is not invertable, but it made me wonder if the \"Hints\" to this section provided sufficient information about the functions to identify each one. Is there some set of descriptions that would establish a one-to-one relationship with these problems?    The first hint tells us that only one of these maps is a \"genuine isomorphism\", which I concluded was (d). The last hint says that one is \"not even a map\", which I concluded is (f). The hint that \"[s]ome... dont respect the combining rules\" explains why I rejected (a) and (e). It also seems natural to ask \"does it have a section?\" and \"does it have a retraction?\".   Table of selected map properties for Exercise 3    Item  is a map?  has a section?  has a retraction?  respects combining rules?    (a)  Yes  Yes  Yes  No    (b)  Yes  No  No  N\/A    (c)  Yes  Yes  No  N\/A    (d)  Yes  Yes  Yes  Yes    (e)  Yes  Yes  Yes  No    (f)  No  N\/A  N\/A  N\/A     These four questions are almost enough to identify every problem except for distinguishing between (a) and (e). The best description of the difference is that (a) fails to preserve the combining-rules in every case while (e) might pass or fail the combining-rules depending on its input. This is a very subtle difference that I probably would have overlooked had I not made the mistake that I did.    "
},
{
  "id": "example-28",
  "level": "2",
  "url": "session4.html#example-28",
  "type": "Example",
  "number": "3.4.1",
  "title": "Exercise 1.",
  "body": " Exercise 1   Finish checking that is an isomorphism...    Let's start with first. The composition is applied from right to left, which means we double first then halve.   Next we check , where we halve first and double after:   This proof seems kind of trivial since multiplication on is commutative.   "
},
{
  "id": "example-29",
  "level": "2",
  "url": "session4.html#example-29",
  "type": "Example",
  "number": "3.4.2",
  "title": "Exercise 2.",
  "body": " Exercise 2   Find an isomorphism ...    Let's start by organizing some data. Perhaps a table of each map will reveal some insight into the structure.   Function table for     even  odd    even  even  odd    odd  odd  even      Function table for     positive  negative    positive  positive  negative    negative  negative  positive     These two tables mirror each other quite nicely, which suggests that ordering of options shown here is probably the correct choice of . Let's go ahead and define as follows:   Internal diagram of our potential isomorphism      In order for us to show that this respects the combining rules, we need to verify that for all .   Combining rule validation table for    For even, even:      Confirmed ✓    For odd, even:      Confirmed ✓      For even, odd:      Confirmed ✓    For odd, odd:      Confirmed ✓      Suppose instead we had used the map given by the alternative assignment:   Internal diagram of alternative map choice      When and are both even, but . Thus, this map fails to preserve the combining rule .   "
},
{
  "id": "example-30",
  "level": "2",
  "url": "session4.html#example-30",
  "type": "Example",
  "number": "3.4.8",
  "title": "Exercise 3.",
  "body": " Exercise 3   ...Unmask the imposters...    Let's start with (a): given by .  While it seems like \"subtract one\" would be a reasonable inverse, this is not an isomorphism because it fails to respect the combining-rule . Consider the case where and . We have and so . However, this is not the same as , which evaluates to instead.  The map in (b) and the map in (c) are both closely related because they share a common definition of , but differ in the domain and codomain.  Again there's an obvious inverse function of \"square root\", but the domains and codomains are what concern me. Notable about (b) is that it fails to map \"onto\" the entire codomain, because the map never produces any negative numbers as an output. The map in (c) resolves this by limiting the codomain to non-negative values, but it still fails to \"one-to-one\" because both 1 and -1 produce an output of 1.  The map in (d) and (e) likewise have similar definitions.  The map defined by the given expression acts as its own inverse: . Where (d) and (e) differ is in the \"combining-rule\". If we have , then a little algebra can show that . This means that both the identity rules and the combining-rules are satisfied for (d), making it the only genuine isomorphism in the list. The map in (e) fails to uphold the combining rule because . In the case where and , we have but .  Finally we have the map (f), which isn't even a map with the specified domain and codomain because the cube of a negative number is still negative. Had the map been defined with the correct codomain, , then we'd potentially be able to define an inverse map by using the \"cube root\" function.   "
},
{
  "id": "example-31",
  "level": "2",
  "url": "session4.html#example-31",
  "type": "Example",
  "number": "3.4.9",
  "title": "Meta-Exercise.",
  "body": " Meta-Exercise   As I was proof reading, I noticed an error in Exercise 3 Part (e). It was a simple case of me not reading the question as precisely as needed. I think I was so excited to show (d) was an isomorphism that I didn't give (e) the amount of skepticism it deserved. I mistakely read the domain as instead of which made finding a counter-example trivial relative to the actual problem.  As I was looking over my solution to fix this, I noticed something else kind of odd. My solution began with \"Let's go one at a time\" but I had addressed some of the problems in pairs. There's something that felt natural about approaching them this way, but it also seemed kind of ironic that I had failed to produce a isomorphism between my problems and solutions in a section that was all about matching things up.  All of this started to get my thinking about the solutions to these problems as a map . Obviously this map is not invertable, but it made me wonder if the \"Hints\" to this section provided sufficient information about the functions to identify each one. Is there some set of descriptions that would establish a one-to-one relationship with these problems?    The first hint tells us that only one of these maps is a \"genuine isomorphism\", which I concluded was (d). The last hint says that one is \"not even a map\", which I concluded is (f). The hint that \"[s]ome... dont respect the combining rules\" explains why I rejected (a) and (e). It also seems natural to ask \"does it have a section?\" and \"does it have a retraction?\".   Table of selected map properties for Exercise 3    Item  is a map?  has a section?  has a retraction?  respects combining rules?    (a)  Yes  Yes  Yes  No    (b)  Yes  No  No  N\/A    (c)  Yes  Yes  No  N\/A    (d)  Yes  Yes  Yes  Yes    (e)  Yes  Yes  Yes  No    (f)  No  N\/A  N\/A  N\/A     These four questions are almost enough to identify every problem except for distinguishing between (a) and (e). The best description of the difference is that (a) fails to preserve the combining-rules in every case while (e) might pass or fail the combining-rules depending on its input. This is a very subtle difference that I probably would have overlooked had I not made the mistake that I did.   "
},
{
  "id": "session5",
  "level": "1",
  "url": "session5.html",
  "type": "Section",
  "number": "3.5",
  "title": "Session 5: Division of maps: Sections and retractions",
  "body": " Session 5: Division of maps: Sections and retractions  Determine some witty remark to put here later.   Exercise 1   Show that... if then ...    For part (a), the hint suggests contradiction might be a good approach. Let's assume that and there exists some pair of points such that but .   Diagram of determination problem (a) in Session 5 Exercise 1      In this situation, there's no possible map here with because can't send possibly send to two different destinations ( and ).  Now let's consider the converse relationship in (b) where we know that for all .   Diagram of determination problem (b) in Session 5 Exercise 1      In this situation, we can construct a map that has our desired property . I'd imagine it like taking an image of the maps and over the set and defining as by the collection of arrows that have an origin at and destination .  Obviously defining in this way will potentially leave the possibility of arrows having duplicates, but the property ensures that if any two arrows share the same origin they must share the same destination.  From a meta-perspective, it makes sense that the converse holds true for use to this practically as a definition. When we say \" is determined by \", we want it to be true if and only if it satisfies the properties we've defined it to have.     Exercise 2   Show that... there is at least one in for which ...    I think the key idea in part (a) here is that the point precisely satisfies the properties we want for establishing the existence of . As long as there is some map with then we can define and it follows directly that .  Proving the converse in (b) seems a little trickier. I think I'd want to approach this like I did with \"Exercise 1\" and consider making an image by applying to each element .  If we already know that for each there is at least one such that , we can begin to construct a map by creating a collection of arrows with origin and destination .   Diagram of problem in Session 5 Exercise 2      The above definition of given by should satisfy the property since . We can rest assured we're not missing any origin points in because we've already assumed that each each corresponds to at least one , and we can safely assume that no has more than one destination in because we found them by iterating over to begin with.     Exercise 3   Draw... all the sections of .    Let's start here by reproducing the diagram of :   Internal diagram of map in Session 5 Exercise 3      Since there's only two points in , we're need to have two arrows with one originating at each. The left arrow needs to have one of four possible destinations, since there are four points in A that get mapped there by . The right arrow needs to have one of two possible destination from the points stacked above it. Since these choices are independent, we're looking for a total of maps.   Possible sections of in Session 5 Exercise 3        Upon finishing the exercises, I've chosen to not to retract my sarcastic pun above.  Okay, yeah, that's partly because I'm lazy, but I think it's also a good metaphor for what I learned about this week. Writing these posts is a multi-stage process that resembles a sequence of map compositions. I read (at least some of) the section, work out the exercises, then come back and revise. What you see at the end is the composition, but not necessarily each step along the way. At the same time, some qualities of the end product itself may restrict the process leading to it but others leave flexibility.  This week's reading seemed to be about exactly how flexible these maps could be before they start to lose information.  I could have removed the remark at the start of this and replaced it with something else. Yet, the fact that I'm now discussing it means it must be there.  This seems exceptionally well fitting to how my proofs this week worked. I'm essentially arguing that these maps exists because I can describe a set of rules to construct them. Whether you believe me or not, well, that's another story...  "
},
{
  "id": "example-32",
  "level": "2",
  "url": "session5.html#example-32",
  "type": "Example",
  "number": "3.5.1",
  "title": "Exercise 1.",
  "body": " Exercise 1   Show that... if then ...    For part (a), the hint suggests contradiction might be a good approach. Let's assume that and there exists some pair of points such that but .   Diagram of determination problem (a) in Session 5 Exercise 1      In this situation, there's no possible map here with because can't send possibly send to two different destinations ( and ).  Now let's consider the converse relationship in (b) where we know that for all .   Diagram of determination problem (b) in Session 5 Exercise 1      In this situation, we can construct a map that has our desired property . I'd imagine it like taking an image of the maps and over the set and defining as by the collection of arrows that have an origin at and destination .  Obviously defining in this way will potentially leave the possibility of arrows having duplicates, but the property ensures that if any two arrows share the same origin they must share the same destination.  From a meta-perspective, it makes sense that the converse holds true for use to this practically as a definition. When we say \" is determined by \", we want it to be true if and only if it satisfies the properties we've defined it to have.   "
},
{
  "id": "example-33",
  "level": "2",
  "url": "session5.html#example-33",
  "type": "Example",
  "number": "3.5.4",
  "title": "Exercise 2.",
  "body": " Exercise 2   Show that... there is at least one in for which ...    I think the key idea in part (a) here is that the point precisely satisfies the properties we want for establishing the existence of . As long as there is some map with then we can define and it follows directly that .  Proving the converse in (b) seems a little trickier. I think I'd want to approach this like I did with \"Exercise 1\" and consider making an image by applying to each element .  If we already know that for each there is at least one such that , we can begin to construct a map by creating a collection of arrows with origin and destination .   Diagram of problem in Session 5 Exercise 2      The above definition of given by should satisfy the property since . We can rest assured we're not missing any origin points in because we've already assumed that each each corresponds to at least one , and we can safely assume that no has more than one destination in because we found them by iterating over to begin with.   "
},
{
  "id": "example-34",
  "level": "2",
  "url": "session5.html#example-34",
  "type": "Example",
  "number": "3.5.6",
  "title": "Exercise 3.",
  "body": " Exercise 3   Draw... all the sections of .    Let's start here by reproducing the diagram of :   Internal diagram of map in Session 5 Exercise 3      Since there's only two points in , we're need to have two arrows with one originating at each. The left arrow needs to have one of four possible destinations, since there are four points in A that get mapped there by . The right arrow needs to have one of two possible destination from the points stacked above it. Since these choices are independent, we're looking for a total of maps.   Possible sections of in Session 5 Exercise 3       "
},
{
  "id": "session6",
  "level": "1",
  "url": "session6.html",
  "type": "Section",
  "number": "3.6",
  "title": "Session 6: Two general aspects or uses of maps",
  "body": " Session 6: Two general aspects or uses of maps  This week's reading didn't have any official exercises in it, but it also seemed important so I wanted to make sure I gave it the same level of attention as the others. I find that I need to continually reminding myself that math is not a race and that I should take advantage of current privilege to truly take things slow here. My purpose isn't to get through the excercises in this book; it's to understand the deeper ideas behind it.  This session is filled with beautiful mathematical writing.  I think math courses need more content like this. At the same time, both the student and teacher in me recognize that this is one of the first things that would be cut from the syllabus if the class ran short on time. It makes me sad that our system's focus on measurable learning objectives means that philosophical discussions are treated as dispensible.  In much the same way as the authors describe science as maps being used to understand reality, the education system uses assessments to understand what's going on inside a student's head. Since we can't observe someone's state of mind, we alter their environment stimuli and see how they respond. This presents problems when we're using map composition to turn one of many complex mental models down to a multiple choice question for the exam. As long as a student could distinguish between \"sort\" and \"partition\" by the end of this unit, we don't really care how it impacted their broader understanding of world around them.  I think there's a hidden exercise in this session. I'll mark it as an example here so you can avoid spoilers if desired.   Session 6 Hidden Exercise   What do you notice? What do you wonder?    After reading through this session, I noticed something very interesting about the last diagram. I'll recreate it here for reference.   The last diagram in L&S Session 6      What struck me as interesting about this map was how closely it described a book . There's only a finite number of \"words\" in the \"language\" that the book is written using, and we can index them with positive integers describing their sequence in the book.  This observation struck me as interesting because my reading of this book works the same as the sampling process. You could generate a map from time to the index of the word that I'm reading at the time, and compose this map with the book map to find out what word I'm reading. This would reveal my non-linear path through the book, rereading sections as needed to answer the problems I'm working on.  It makes me wonder if this session is actually an exercise in meta-mathematics . Maybe the reason the authors intended to sow seeds of curiousity about their ommission and for me look at the book as a system that can be studied using category theory itself. The chapters of the book act as a sort for the exercises, but the fact that this chapter doesn't exercises have any means it's not a partition .  I think it's kind of funny that this section of the book about sections would be a counter-example to the book's exercises having a section.    "
},
{
  "id": "example-35",
  "level": "2",
  "url": "session6.html#example-35",
  "type": "Example",
  "number": "3.6.1",
  "title": "Session 6 Hidden Exercise.",
  "body": " Session 6 Hidden Exercise   What do you notice? What do you wonder?    After reading through this session, I noticed something very interesting about the last diagram. I'll recreate it here for reference.   The last diagram in L&S Session 6      What struck me as interesting about this map was how closely it described a book . There's only a finite number of \"words\" in the \"language\" that the book is written using, and we can index them with positive integers describing their sequence in the book.  This observation struck me as interesting because my reading of this book works the same as the sampling process. You could generate a map from time to the index of the word that I'm reading at the time, and compose this map with the book map to find out what word I'm reading. This would reveal my non-linear path through the book, rereading sections as needed to answer the problems I'm working on.  It makes me wonder if this session is actually an exercise in meta-mathematics . Maybe the reason the authors intended to sow seeds of curiousity about their ommission and for me look at the book as a system that can be studied using category theory itself. The chapters of the book act as a sort for the exercises, but the fact that this chapter doesn't exercises have any means it's not a partition .  I think it's kind of funny that this section of the book about sections would be a counter-example to the book's exercises having a section.   "
},
{
  "id": "session7",
  "level": "1",
  "url": "session7.html",
  "type": "Section",
  "number": "3.7",
  "title": "Session 7: Isomorphisms and coordinates",
  "body": " Session 7: Isomorphisms and coordinates  It turns out that last week's lack of exercises wasn't as much of an anomaly as I thought it was. After realizing that this week's session didn't have any exercises either, I scanned ahead and noticed that there are several sessions like this before eventually reaching a \"Quiz\" and \"Test\". I'm not sure how I plan to handle those yet, but I think I'm going to keep with my chill pace for now. This session did include several side questions throughout that I can treat as I would the exercises.   Aside 1   What, approximately, is for the point in the picture?    I took a modern approach and used technology to provide a more accurate estimation.    I began by holding the page as flat as I could while taking a photo with my phone and uploaded to the cloud.    I downloaded this photo from my PC and opened it in GIMP .    I used the cursor to identify the following coordinates in pixels: , , , .    Next I calculated the distances from to and from to . Specifically, and .    With this information in hand, I can set up a ratio to determine . Solving results in a solution of .    This seems like a reasonable estimate based on the diagram.     Aside 2   What are the choice of origin, positive direction, and unit of 'distance' involved in specifying this isomorphism?...    Oooh this is a fun one! Let's presume we meet some alien species and are trying to sync up our timelines. We're going to need both space and time coordinates if we really want to do this right. One possibility is for both parties to use \"the big bang\" as a point of origin and \"the light cone\" for a direction and magnitude. This choice makes converting easy, but potentially imprecise because of the sheer size of those values.  A much more practical approach would be to use the meeting time and location as a point of origin, use physical constants to communicate SI units, then work backwards to calculate the local time for each party using a Lorentz transformation. We'd just need to where they came from and how fast they traveled to convert their home civilization's time to their current time.  I think the point that the authors were trying to communicate was that our choice of units and magnitude for \"time\" are very specific to our origin on planet Earth. If we're talking about units of \"years\" as being \"one orbit around the Sun\" and the origin as a socially defined \"common era\", then an alien race from another plant would likely have totally different system of dating then us. However, most SI units are based on physical properties of our universe. Even if this species chose a different set of base units than us, we could match up measurements of certain elements to develop an isomorphism between our two systems.     Aside 3   ...rational explanation for the curious bracketing...    The first thing that jumps out at me about the bracket is that the sums of the adjacent ranks are constant:   8 Player Bracket from L&S Session 7      In other words, the best player is alway paired with the worst player, the next best with the next worst, and so on until all pairs have been assigned. However, the fun doesn't stop there.  The bracket also appears to balance \"skill gap\" between the top half and the bottom half. The winner of the match-up with the highest rank differential goes on to face the winner of the match with the lowest differential in the next round. Those differentials sum to a constant much like the ranks did.   8 player bracket with rank differentials      Between those two conditions, that should be enough to determine the 4 and 16 player brackets. The four player one is easy, since it's essentially embeeded in the original.   4 player bracket      To make the 16 player bracket, I'm going to start by pairing off players based on rank: The player in rank 1 should be paired with the player in rank 16, rank 2 with rank 15, rank 3 with rank 14, and so on until all 8 pairs have been assigned. Since these pairings go from largest score differential to smallest, we can assign the pairs to each of the \"ranks\" in the 8 player bracket to extend it further.   16 player bracket      This works out nicely because if the top 8 players all win their match-ups in the first round of the 16-player bracket, they'd wind up in a bracket that is basically identical to their placement in the 8-player bracket. Likewise, if the top four players continue to win then we end up in a situation identical to the 4-player bracket. It has a nice recursively defined structure.    "
},
{
  "id": "example-36",
  "level": "2",
  "url": "session7.html#example-36",
  "type": "Example",
  "number": "3.7.1",
  "title": "Aside 1.",
  "body": " Aside 1   What, approximately, is for the point in the picture?    I took a modern approach and used technology to provide a more accurate estimation.    I began by holding the page as flat as I could while taking a photo with my phone and uploaded to the cloud.    I downloaded this photo from my PC and opened it in GIMP .    I used the cursor to identify the following coordinates in pixels: , , , .    Next I calculated the distances from to and from to . Specifically, and .    With this information in hand, I can set up a ratio to determine . Solving results in a solution of .    This seems like a reasonable estimate based on the diagram.   "
},
{
  "id": "example-37",
  "level": "2",
  "url": "session7.html#example-37",
  "type": "Example",
  "number": "3.7.2",
  "title": "Aside 2.",
  "body": " Aside 2   What are the choice of origin, positive direction, and unit of 'distance' involved in specifying this isomorphism?...    Oooh this is a fun one! Let's presume we meet some alien species and are trying to sync up our timelines. We're going to need both space and time coordinates if we really want to do this right. One possibility is for both parties to use \"the big bang\" as a point of origin and \"the light cone\" for a direction and magnitude. This choice makes converting easy, but potentially imprecise because of the sheer size of those values.  A much more practical approach would be to use the meeting time and location as a point of origin, use physical constants to communicate SI units, then work backwards to calculate the local time for each party using a Lorentz transformation. We'd just need to where they came from and how fast they traveled to convert their home civilization's time to their current time.  I think the point that the authors were trying to communicate was that our choice of units and magnitude for \"time\" are very specific to our origin on planet Earth. If we're talking about units of \"years\" as being \"one orbit around the Sun\" and the origin as a socially defined \"common era\", then an alien race from another plant would likely have totally different system of dating then us. However, most SI units are based on physical properties of our universe. Even if this species chose a different set of base units than us, we could match up measurements of certain elements to develop an isomorphism between our two systems.   "
},
{
  "id": "example-38",
  "level": "2",
  "url": "session7.html#example-38",
  "type": "Example",
  "number": "3.7.3",
  "title": "Aside 3.",
  "body": " Aside 3   ...rational explanation for the curious bracketing...    The first thing that jumps out at me about the bracket is that the sums of the adjacent ranks are constant:   8 Player Bracket from L&S Session 7      In other words, the best player is alway paired with the worst player, the next best with the next worst, and so on until all pairs have been assigned. However, the fun doesn't stop there.  The bracket also appears to balance \"skill gap\" between the top half and the bottom half. The winner of the match-up with the highest rank differential goes on to face the winner of the match with the lowest differential in the next round. Those differentials sum to a constant much like the ranks did.   8 player bracket with rank differentials      Between those two conditions, that should be enough to determine the 4 and 16 player brackets. The four player one is easy, since it's essentially embeeded in the original.   4 player bracket      To make the 16 player bracket, I'm going to start by pairing off players based on rank: The player in rank 1 should be paired with the player in rank 16, rank 2 with rank 15, rank 3 with rank 14, and so on until all 8 pairs have been assigned. Since these pairings go from largest score differential to smallest, we can assign the pairs to each of the \"ranks\" in the 8 player bracket to extend it further.   16 player bracket      This works out nicely because if the top 8 players all win their match-ups in the first round of the 16-player bracket, they'd wind up in a bracket that is basically identical to their placement in the 8-player bracket. Likewise, if the top four players continue to win then we end up in a situation identical to the 4-player bracket. It has a nice recursively defined structure.   "
},
{
  "id": "session8",
  "level": "1",
  "url": "session8.html",
  "type": "Section",
  "number": "3.8",
  "title": "Session 8: Pictures of a map",
  "body": " Session 8: Pictures of a map  Rather than having exercises of its own, this session was focused on solving the exercises from Article II. Since I'd already worked out these problems, all that remains for this week is to proofread.   Article II, Exercise 5 Proofreading  (Add the rest of the arrows yourself.)   My diagram of all 6 sections from earlier matchs up with this incomplete diagram perfectly:   Likewise, I correctly arrived at a count of 8 retractions and drew those too:   If there's something to be critical about myself here, it would be that I was perhaps a little lax in assuming the domains and codomains of my maps were the same. I jumped right into diagrams of without specifying what it was. In my defense, this information was implicit in the diagrams themselves but the authors took an extra effort to explicitly articulate the qualities they were checking for in the map.     Article II, Exercise 8 Proofreading  Prove that the composite of two maps that have sections has a section.   I must admit, it took me several attempts to verify that my solution was equivalent to the book's with direct substitutions. I had used instead of the respective .   I think I actually prefer my notation here over the authors because it makes the connection between the functions and sections more clear. I kept forgetting whether or matched up with or . Using the notation makes the reversed composition ordering of the sections more readily apparent.    Based on what I saw in this session, I think I was on the right track with my solutions to the exercises from Article II. It's nice to have this little checkpoint to validate my earlier work. I'm usually the type that likes to try to solve the exercises in my head just to see if I can, but then I miss out on moments for reflection like this.  "
},
{
  "id": "example-39",
  "level": "2",
  "url": "session8.html#example-39",
  "type": "Example",
  "number": "3.8.1",
  "title": "Article II, Exercise 5 Proofreading.",
  "body": " Article II, Exercise 5 Proofreading  (Add the rest of the arrows yourself.)   My diagram of all 6 sections from earlier matchs up with this incomplete diagram perfectly:   Likewise, I correctly arrived at a count of 8 retractions and drew those too:   If there's something to be critical about myself here, it would be that I was perhaps a little lax in assuming the domains and codomains of my maps were the same. I jumped right into diagrams of without specifying what it was. In my defense, this information was implicit in the diagrams themselves but the authors took an extra effort to explicitly articulate the qualities they were checking for in the map.   "
},
{
  "id": "example-40",
  "level": "2",
  "url": "session8.html#example-40",
  "type": "Example",
  "number": "3.8.2",
  "title": "Article II, Exercise 8 Proofreading.",
  "body": " Article II, Exercise 8 Proofreading  Prove that the composite of two maps that have sections has a section.   I must admit, it took me several attempts to verify that my solution was equivalent to the book's with direct substitutions. I had used instead of the respective .   I think I actually prefer my notation here over the authors because it makes the connection between the functions and sections more clear. I kept forgetting whether or matched up with or . Using the notation makes the reversed composition ordering of the sections more readily apparent.   "
},
{
  "id": "session9",
  "level": "1",
  "url": "session9.html",
  "type": "Section",
  "number": "3.9",
  "title": "Session 9: Retracts and idempotents",
  "body": " Session 9: Retracts and idempotents  At last! The exercises have returned!  The reading this week was interesting in how it approached the relationship between \"size of sets\" and \"properties of maps\". The art of counting without counting seemed to be a recurring theme.   Exercise 1:   ...unless the set has a point and has none...    So means that there exists some map . In the category of sets, we know that the number of possible maps from is related to the size of the sets by a formula we arrived at in Session 2: . The only time when this expression for number of maps evaluates to 0 is when and .  Another way of looking at this might to consider the contrapositive of this statement. If we know that there does not exist a map from to , that means there must be some origin point in for the map to act on but no destination point in to send it to. Not having a place to send the point to directly implies . If we also had then we'd have a \"null map\", so the non-existance of a map also implies must be non-empty.     Exercise 2:   ...Show that (R) ... [and] (T) ...    Let's start with the reflexive property (R): . This notation indicates that there exist maps such that with . Clearly the map already mets both these conditions since .  To prove the transitive property (T), we can construct a retraction for the composition of the functions using a composition of their retractions. If , then there exist maps such that with . Likewise, , then there exist maps such that with .  Given these , we can define and define . Note that can be evaluated as follows using the associative property:     This completes the proof that .     Exercise 3:   ... Use these maps to construct an isomorphism .    So we're given that both and \"split the same idempotent\" .  The definition of \"splitting an idempotent\" tells us that with and . Given these maps, we're trying to establish a composition that goes from to using as a step in between. To get from to we can use map , and then to get from to we can use map .  Let us define by . This map should be a well-defined isomorphism with the inverse map given by . To prove this, we must show that and .  By the associative property, the first expression can be simplified as follows:        Likewise, the second expression can be similarly simplified:        These two conditions are sufficient to demonstrate that is an isomorphism.    "
},
{
  "id": "example-41",
  "level": "2",
  "url": "session9.html#example-41",
  "type": "Example",
  "number": "3.9.1",
  "title": "Exercise 1:.",
  "body": " Exercise 1:   ...unless the set has a point and has none...    So means that there exists some map . In the category of sets, we know that the number of possible maps from is related to the size of the sets by a formula we arrived at in Session 2: . The only time when this expression for number of maps evaluates to 0 is when and .  Another way of looking at this might to consider the contrapositive of this statement. If we know that there does not exist a map from to , that means there must be some origin point in for the map to act on but no destination point in to send it to. Not having a place to send the point to directly implies . If we also had then we'd have a \"null map\", so the non-existance of a map also implies must be non-empty.   "
},
{
  "id": "example-42",
  "level": "2",
  "url": "session9.html#example-42",
  "type": "Example",
  "number": "3.9.2",
  "title": "Exercise 2:.",
  "body": " Exercise 2:   ...Show that (R) ... [and] (T) ...    Let's start with the reflexive property (R): . This notation indicates that there exist maps such that with . Clearly the map already mets both these conditions since .  To prove the transitive property (T), we can construct a retraction for the composition of the functions using a composition of their retractions. If , then there exist maps such that with . Likewise, , then there exist maps such that with .  Given these , we can define and define . Note that can be evaluated as follows using the associative property:     This completes the proof that .   "
},
{
  "id": "example-43",
  "level": "2",
  "url": "session9.html#example-43",
  "type": "Example",
  "number": "3.9.3",
  "title": "Exercise 3:.",
  "body": " Exercise 3:   ... Use these maps to construct an isomorphism .    So we're given that both and \"split the same idempotent\" .  The definition of \"splitting an idempotent\" tells us that with and . Given these maps, we're trying to establish a composition that goes from to using as a step in between. To get from to we can use map , and then to get from to we can use map .  Let us define by . This map should be a well-defined isomorphism with the inverse map given by . To prove this, we must show that and .  By the associative property, the first expression can be simplified as follows:        Likewise, the second expression can be similarly simplified:        These two conditions are sufficient to demonstrate that is an isomorphism.   "
},
{
  "id": "quiz1",
  "level": "1",
  "url": "quiz1.html",
  "type": "Section",
  "number": "3.10",
  "title": "Quiz",
  "body": " Quiz  Since the following section is entitled \"How to solve the quiz problems\", I'm interpreting that as a sign that answering these problems publicly like this is acceptable use. My time as a teacher has taught me that the primary distinction betweeen formatitve and summative assessments lies in how you use them, and this quiz seems to be treated like the former. The goal is to provide students with a self-check on important concepts before the first \"test\".  As I'm still trying to force myself to slow down, my plan for time being is to take the quiz this week and self-grade my own work next week before attempting the \"test\" the week after. I feel as though posting test solutions online would be poor form, so I think I'm going to put my test solutions in a separate PretextBook that can be shared on a per person basis to anyone that's willing to help determine the correctness of my work. We'll see how that goes in the future, but for now we focus on the problems at hand.   Problem 1   Give an example of two explicit sets...    I know this may be a little regressive of me, but I found it easier to think of this problems in terms of \"onto\" and \"one-to-one\". Since I'm looking for a map that \"has a section but not a retraction\", that effectively means the map is \"one-to-one but not onto\". My insticts about functions tell me that this occurs when my \"output space\" is bigger than my \"input space\".  Consider the sets and , and define by the following internal diagram:   Internal diagram of our potential map      To demonstrate that this map has the required properties, let's start by identifying the retraction :   Internal diagram of retraction to our potential map      Proving this is a retraction requires that we show . Fortunately this proof is trivial since there's only one element in for us to test. Since is the only possible input, the fact that is sufficient to satisfy the condition . Thus, is a retraction of .  Note that this map does not function as a section because . This can be easily observed by applying the composition to point : . In order for a map to be a section of , it needs to send point to something other than , but there isn't anywhere else for it to go!   Internal diagram demonstrating the lack of section for our potential map      Since we lose an element when mapping from , there's no way to reconstruct it afterwards. It follows that cannot possibly have a section satisfying . This completes the proof that satistfies the desired properties.     Problem 2   If satisfy ...    Recall that a map is \"idempotent\" if . Thus, we'll take the maps defined in (a) and (b) and see how they might be simplified after being applied twice.  Let's start with (a): . Composing this map with itself gives us , which can be simplified using the associative property:     Having demonstrated that , we can safely conlude that the map in part (a) is idempotent.  We can apply the same strategy in (b) with the expression :     Since , we can conclude that the map in (b) is idempotent as well.     Problem 2*   ...use the given maps and to devise a map satisfying both...    My gut instict tells me because that's the simpliest map I can construct that will have the requisite domain and codomain. Let's check to see if it has the desired properties.  First, we'll look at (a) by seeing if . Using only the associative property, we can simplify the left hand side as follows:      That confirms property (a). We can use a similar method to demonstrate property (b): .        Thus, our choice of has both of the required properties.     Problem 1*   Same as Problem 1 at top of page, except...    Upon reading this problem, it sounded very similar to one of the situations in the \"zoo\" from Session 4. Specifically, I was thinking of the map in Exercise 3 Item (c) where is given by . On closer inspection, my notes from that section indicate that this had a section but no retraction -- which is the reverse of what I'm looking for here. I played around with item (a) from the zoo for a bit, but I wasn't quite happy with how the domains and codomains weren't aligning. This got me thinking about a clue at the end of Session 9. Specifically, the authors mention \"Georg Cantor\" by name.  With the realization that I could use infinite sets of varying sizes, I decided that I could combine this notion with the ideas behind the set sizes in Problem 1 by making a map from a \"countably infinite set\" to an \"uncountably infinite set\". In this situation, I could theoretically use Cantor's diagonalization argument to prove the non-existance of my section.  I decided to use a \"binary representation\" map that takes each positive integer and turns it into a binary representation of a real number between 0 and 1 by prepending \"0.\" to the reversed binary representation of the integer. Like so:     x in base 10  x in base 2  f(x) in base 2    1  1  0.1    2  10  0.01    3  11  0.11    4  100  0.001    ...  ...  ...     We can construct a map that iterates along the digits of the input and sums up the product of that digit with the respective powers of 2. For example, could be evaluated as follows:    Assuming we started with some positive integer and applied to it, it would be in the table above and this map will return the number we started with. Thus we have a well defined retraction becaues . However, Cantor's diagonal argument suggest that there still exists at least one real number in the interval (0,1) for which there is no inverse. Consider the real number constructed by taking a single \"bit\" from each line of the table following the diagonal and flipping it while adding trailing zeroes to the right as needed:     x in base 10  x in base 2  f(x) in base 2  \"flipped\" bit    1  1  0. 1  0    2  10  0.0 1  0    3  11  0.11 0  1    4  100  0.001 0  1    ...  ...  ...     By concatenating all these flipped bits together we can constuct a number given by the binary expansion \"0.0011...\" as defined above. This number doesn't have a corresponding value in the table for because it differs from every output by at least one bit. Since is undefined, we have . The uniqueness of the inverses we proved in Article 2 implies that the section couldn't be anything other than the retraction , so we must conlude that does not have section.    "
},
{
  "id": "example-44",
  "level": "2",
  "url": "quiz1.html#example-44",
  "type": "Example",
  "number": "3.10.1",
  "title": "Problem 1.",
  "body": " Problem 1   Give an example of two explicit sets...    I know this may be a little regressive of me, but I found it easier to think of this problems in terms of \"onto\" and \"one-to-one\". Since I'm looking for a map that \"has a section but not a retraction\", that effectively means the map is \"one-to-one but not onto\". My insticts about functions tell me that this occurs when my \"output space\" is bigger than my \"input space\".  Consider the sets and , and define by the following internal diagram:   Internal diagram of our potential map      To demonstrate that this map has the required properties, let's start by identifying the retraction :   Internal diagram of retraction to our potential map      Proving this is a retraction requires that we show . Fortunately this proof is trivial since there's only one element in for us to test. Since is the only possible input, the fact that is sufficient to satisfy the condition . Thus, is a retraction of .  Note that this map does not function as a section because . This can be easily observed by applying the composition to point : . In order for a map to be a section of , it needs to send point to something other than , but there isn't anywhere else for it to go!   Internal diagram demonstrating the lack of section for our potential map      Since we lose an element when mapping from , there's no way to reconstruct it afterwards. It follows that cannot possibly have a section satisfying . This completes the proof that satistfies the desired properties.   "
},
{
  "id": "example-45",
  "level": "2",
  "url": "quiz1.html#example-45",
  "type": "Example",
  "number": "3.10.5",
  "title": "Problem 2.",
  "body": " Problem 2   If satisfy ...    Recall that a map is \"idempotent\" if . Thus, we'll take the maps defined in (a) and (b) and see how they might be simplified after being applied twice.  Let's start with (a): . Composing this map with itself gives us , which can be simplified using the associative property:     Having demonstrated that , we can safely conlude that the map in part (a) is idempotent.  We can apply the same strategy in (b) with the expression :     Since , we can conclude that the map in (b) is idempotent as well.   "
},
{
  "id": "example-46",
  "level": "2",
  "url": "quiz1.html#example-46",
  "type": "Example",
  "number": "3.10.6",
  "title": "Problem 2*.",
  "body": " Problem 2*   ...use the given maps and to devise a map satisfying both...    My gut instict tells me because that's the simpliest map I can construct that will have the requisite domain and codomain. Let's check to see if it has the desired properties.  First, we'll look at (a) by seeing if . Using only the associative property, we can simplify the left hand side as follows:      That confirms property (a). We can use a similar method to demonstrate property (b): .        Thus, our choice of has both of the required properties.   "
},
{
  "id": "example-47",
  "level": "2",
  "url": "quiz1.html#example-47",
  "type": "Example",
  "number": "3.10.7",
  "title": "Problem 1*.",
  "body": " Problem 1*   Same as Problem 1 at top of page, except...    Upon reading this problem, it sounded very similar to one of the situations in the \"zoo\" from Session 4. Specifically, I was thinking of the map in Exercise 3 Item (c) where is given by . On closer inspection, my notes from that section indicate that this had a section but no retraction -- which is the reverse of what I'm looking for here. I played around with item (a) from the zoo for a bit, but I wasn't quite happy with how the domains and codomains weren't aligning. This got me thinking about a clue at the end of Session 9. Specifically, the authors mention \"Georg Cantor\" by name.  With the realization that I could use infinite sets of varying sizes, I decided that I could combine this notion with the ideas behind the set sizes in Problem 1 by making a map from a \"countably infinite set\" to an \"uncountably infinite set\". In this situation, I could theoretically use Cantor's diagonalization argument to prove the non-existance of my section.  I decided to use a \"binary representation\" map that takes each positive integer and turns it into a binary representation of a real number between 0 and 1 by prepending \"0.\" to the reversed binary representation of the integer. Like so:     x in base 10  x in base 2  f(x) in base 2    1  1  0.1    2  10  0.01    3  11  0.11    4  100  0.001    ...  ...  ...     We can construct a map that iterates along the digits of the input and sums up the product of that digit with the respective powers of 2. For example, could be evaluated as follows:    Assuming we started with some positive integer and applied to it, it would be in the table above and this map will return the number we started with. Thus we have a well defined retraction becaues . However, Cantor's diagonal argument suggest that there still exists at least one real number in the interval (0,1) for which there is no inverse. Consider the real number constructed by taking a single \"bit\" from each line of the table following the diagonal and flipping it while adding trailing zeroes to the right as needed:     x in base 10  x in base 2  f(x) in base 2  \"flipped\" bit    1  1  0. 1  0    2  10  0.0 1  0    3  11  0.11 0  1    4  100  0.001 0  1    ...  ...  ...     By concatenating all these flipped bits together we can constuct a number given by the binary expansion \"0.0011...\" as defined above. This number doesn't have a corresponding value in the table for because it differs from every output by at least one bit. Since is undefined, we have . The uniqueness of the inverses we proved in Article 2 implies that the section couldn't be anything other than the retraction , so we must conlude that does not have section.   "
},
{
  "id": "quiz2",
  "level": "1",
  "url": "quiz2.html",
  "type": "Section",
  "number": "3.11",
  "title": "Summary\/Quiz on Opposed Maps",
  "body": " Summary\/Quiz on Opposed Maps  After reading over the How to solve the quiz problems section, I think I was mostly on track. A \"fussy professor\" might have taken issue with me, but since I worked through these last two sections on crowded 8-hour flights I deserve to cut myself a little slack.  The authors included one more \"quiz\" before the \"test\" and I think I'm about ready for it. It seemed like the answers to this quiz were meant as more of a study-guide than anything else.   Problem 1   Given two maps...    I went with always and endomap . As long as the domain and codomain of the maps match up, there's no reason why we shouldn't be able to compose them. Once we do compose them, the resulting maps have the property that the codomain and domain are the same: and . This definition was repeated just a few pages prior.     Problem 2   If we know that ...    I went with , endomap , idempotent , and . I don't know how many times I referred back to Article II for the definitions of retraction and section on page 49 but I think it's finally starting to sink in. The notion that \"only endomaps have a chance to be idempotent \" was emphasized in the quiz solution to 2(a).     Problem 3   If we even know that ...    I went with and . One of the big results from Article II Exercise 2 was that if an inverse map exists then it must be unique. Stating that is an isomorphism is equivalent to saying that the section and retraction are uniquely defined by the inverse .     Problem 4   Going back to 0...    I chose could be different from in both cases. In the \"Composition of opposed maps\" on the previous page they use the maps and as an example. With those definitions, would be \"the father of my paternal grandmother\" which is clearly a different person than \"my father\" so . Likewise, the map would be like a relation of \"maternal grandfather\". Clearly the \"maternal grandfather of my maternal grandfather\" described by would be a different person than \"my maternal grandfather\" . Since we only need one counter-example to prove maps different, QED .    "
},
{
  "id": "example-48",
  "level": "2",
  "url": "quiz2.html#example-48",
  "type": "Example",
  "number": "3.11.1",
  "title": "Problem 1.",
  "body": " Problem 1   Given two maps...    I went with always and endomap . As long as the domain and codomain of the maps match up, there's no reason why we shouldn't be able to compose them. Once we do compose them, the resulting maps have the property that the codomain and domain are the same: and . This definition was repeated just a few pages prior.   "
},
{
  "id": "example-49",
  "level": "2",
  "url": "quiz2.html#example-49",
  "type": "Example",
  "number": "3.11.2",
  "title": "Problem 2.",
  "body": " Problem 2   If we know that ...    I went with , endomap , idempotent , and . I don't know how many times I referred back to Article II for the definitions of retraction and section on page 49 but I think it's finally starting to sink in. The notion that \"only endomaps have a chance to be idempotent \" was emphasized in the quiz solution to 2(a).   "
},
{
  "id": "example-50",
  "level": "2",
  "url": "quiz2.html#example-50",
  "type": "Example",
  "number": "3.11.3",
  "title": "Problem 3.",
  "body": " Problem 3   If we even know that ...    I went with and . One of the big results from Article II Exercise 2 was that if an inverse map exists then it must be unique. Stating that is an isomorphism is equivalent to saying that the section and retraction are uniquely defined by the inverse .   "
},
{
  "id": "example-51",
  "level": "2",
  "url": "quiz2.html#example-51",
  "type": "Example",
  "number": "3.11.4",
  "title": "Problem 4.",
  "body": " Problem 4   Going back to 0...    I chose could be different from in both cases. In the \"Composition of opposed maps\" on the previous page they use the maps and as an example. With those definitions, would be \"the father of my paternal grandmother\" which is clearly a different person than \"my father\" so . Likewise, the map would be like a relation of \"maternal grandfather\". Clearly the \"maternal grandfather of my maternal grandfather\" described by would be a different person than \"my maternal grandfather\" . Since we only need one counter-example to prove maps different, QED .   "
},
{
  "id": "test1",
  "level": "1",
  "url": "test1.html",
  "type": "Section",
  "number": "3.12",
  "title": "Test 1",
  "body": " Test 1  This week I worked through Test 1, and honestly, it wasn't half as hard as I remembered it being the first time I attempted it. I even managed to dig out my original attempt for comparison and I'm much more confident in my new solutions than the old ones. Even though it was easier than expected, I feel uneasy about sharing \"test solutions\" too widely. I do think it's fair to reflect on the mistake I made though.   Test 1 Reflection   What I learned from comparing my attempts.    I think the first time I attempted this I made a mistake in problem 1(b). Looking over my notes, it seems like I was still confused about the definition of idempotent . Rather than coming up with a endomap that satisfied , I seem to have constructed one where . As a result of using an involution instead, I was justifiably having a hard time showing the properties in part (c). This defintion actually appears on the page adjacent to the test with a note to \"see Article III\", so I'd expect that this was a common mistake made by students while in development.    I really would like some feedback on my test solutions anyway. Just as a sanity check for myself. If you're an experienced enough mathematician to look over it, connect with me on Mathstodon and I'd be happy to direct message you a link! I even figured out how to add raster images this week so it includes a bonus cat pic!  "
},
{
  "id": "example-52",
  "level": "2",
  "url": "test1.html#example-52",
  "type": "Example",
  "number": "3.12.1",
  "title": "Test 1 Reflection.",
  "body": " Test 1 Reflection   What I learned from comparing my attempts.    I think the first time I attempted this I made a mistake in problem 1(b). Looking over my notes, it seems like I was still confused about the definition of idempotent . Rather than coming up with a endomap that satisfied , I seem to have constructed one where . As a result of using an involution instead, I was justifiably having a hard time showing the properties in part (c). This defintion actually appears on the page adjacent to the test with a note to \"see Article III\", so I'd expect that this was a common mistake made by students while in development.   "
},
{
  "id": "session10",
  "level": "1",
  "url": "session10.html",
  "type": "Section",
  "number": "3.13",
  "title": "Brouwer’s theorems",
  "body": " Brouwer's theorems  It felt like there was a lot of new information introduce here for the session that concludes \"Part II\". This reminds me of my undergraduate research study where I had my first crash course in topology. In fact, flipping back to the start of book reveals the following warning: \"Exceptionally, Session 10 is intended to give the reader a taste of more sophisticated applications; mastery of it is not essential for the rest of the book.\"  As I was reading this week, I also felt reminded of Problem 1* from the Quiz. This idea that we can compare the size of infinite sets like and using the language of retractions seems analagous to the formalation of Brouwer's theorems. I'm expecting the proofs in this section to follow a similar format, even though this notion of a \"continuous maps\" seems a little informal at the moment.   Exercise 1:   Let be, as before, the inclusion of the circle into the disk...    We're given that we have two continuous maps and that . We want to show that there's some point such that We're also told to use the retraction theorem , and the revelevant one states that \"there is no continuous map which is a retraction for j\".  Let's suppose for a second that the opposite were true: for every . Since these two points are different, we can construct an arrow using one of them as the \"tail\" and one as the \"head\". We can define a map that follows this arrow until it reaches the boundary point on the circle like so:   Construction diagram for our map      Since we're guaranteed to have , let's see what happens when we compose with it. If we could prove , we'd have a contradiction and be done, but it's not clear that's the case quite yet. I think the key to this lies in the fact that . In the text, they proved the special case where . This is a slightly more relaxation condition to show that doesn't need to be the identity everywhere it just needs to be the identity on the edge of the disk where it meets the circle.  I'm thinking of like taking a sample from the embedding of rather than from at large. The text used the notation to show this operation. Once we've chosen that , we can apply the map to aquire our point on the edge of the disk.  Since , the rule that still applies, but if we force to be the \"head\" of the arrow then we'll have an arrow whose \"head\" lies on the boundary, which also happens to be the same point we originated from.   Construction diagram for our map      Being able to follow the points back to their origins like this essentially gives us a retraction for . However, we already know such retraction can't exist! This means that our assumption that is false, which is logically equivalent to the assertion that . QED.  I must admint, this all feels a little \"hand wavy\" still. I'm not really sure how much of Euclidean geometry I'm projecting onto the situation. I think this is also a good spot to point out the \"antipodal\" map that we'd get by swapping the head and tail of our arrow between and :   Construction diagram for our antipodal map      I'd expect this map to have some fun properties. The one situation where we'd have an endomap on the circle with no fixed points is the one that maps each point to the one opposite it, but this needs a fixed point for us to reflect over. I think this is going to be important later.     Exercise 2:   Suppose is a 'retract' of ...    Let's sort through our givens here. We know we have with . We also know that has a fixed point property: for every endomap there exists some with . We want to show that has the same property for maps from .  Let's start by having a look at the class of endomaps . Each map must have some corresponding map given by . We can apply on the left and on the right to get an equivalent expresson for in terms of :      Since this map has some fixed point such that , there must be some corresponding point in given by that has this property for . It should then follow that is a fixed point of satisfying.         Having proven that , we've established our fixed point property and I think we're done.     Exercise 3:   Use the result of the preceeding exercise, ...    Let's recap the last exercise: Given \"A is a retract of X\" ( ) and \"X has the fixed point property for maps from T\" ( such that ), it follows that \"A also has the fixed point property\" ( such that ).  In the case of theorem (1), we can assume the premise \"Let be a line segment including its endpoints ( for Interval) and suppose is a continuous endomap. Then must have a fixed point: a point in for which .\"  We're attempting to show that this is sufficient to imply the corresponding retraction theorem: \"Consider the inclusion map of the two-point set as boundary of the interval . There is no continuous map which is a retraction for j.\"  Since is a two-point set, perhaps we can use the fact that there are only four possible endomaps that can exist in that space. These are illustrated below:   Possible endomaps on two point space      Of these four maps, precisely one has the property of \"having no fixed point\". This antipodal map sends each of the points in to the \"opposite\" point. For the sake of convenience, let's can name these points . The antipodal map is equivalent to the operation , with the other maps being given by , , . This is the unique endomap on satisfying .  I'm thinking the easiest way to approach this is to assume we have some map that acts like our \"antipodal\" map sending each point to it's mirror on the other half of the interval. For us to have any notion of continuity on this interval, we'd need to be able to take an arbitrarily small step to one side of each endpoint so we should be able to take the opposite step from the other. In other words, for any , we can pair with . Using the interval and as this operation, it's easy to see that produces a fixed point in the middle at where it's equidistantant from the endpoints .  If any map on this interval was going to \"have no fixed point\", it would have needed to be an antipodal map. In order for any map to possibly satisfy , it needs to divide the points into two sections. Our map either needs to map \"0.5\" to itself or to leave it undefined altogther. If we have arrows going from 0 to 1 and arrows from 1 to 0, at some point along the way the \"heads\" of our arrows need to go past the \"tails\" coming from the opposite direction.  Perhaps this makes more sense if I step back a bit and state something \"obvious\": There is no retraction from to .  has two points while has one.  might have a section, in which case we have one of the two bottom diagrams in the possible endomaps figure above. This would be our map that takes the fixed point and sends it to itself. We can go from , but we make by going from because there simply aren't enough points to work with.  It sounds like a variation of the intermediate value theorem. If there's a path of arrows leading from 0 to 1, then we should be able to reverse it and follow the arrows from 1 to 0. When we do, either there needs to be some fixed point that connects the heads from one path to the tails from the other or we don't have a continuous path we jump!  In summary:    The only endomap on with no fixed point is the antipodal map.    The only endomap on that could potentially not have a fixed point would be the antipodal map.    The antipodal map on has a fixed point.    There is no endomap on without fixed point.    Any retract preserves fixed points.    There is no retract from to     If it sounds like I'm unsure at this point, that's because I am. Maybe attempting the second theorem will provide more insight.  For (2) we're given that any continuous endomap on the closed disk, must have a fixed point. We want to prove that there is no continuous map which is a retraction for the inclusion map of the circle into the disk.  I think we can develop a similar definition of an \"antipodal map\" on the circle by reflecting across the center of the disk. This map is a unique endomap on . It has no fixed points for the circle   and acts as it's own inverse  . We can extend this map to the disk, but it fails to provide an inverse for the point at the center which we reflected over. Our antipodal map is the only possible section of the disk's boundary, but it fails to be a retraction due to this \"missing\" point in the middle.  A similar line of reasoning should hold true for the sphere. The antipodal map reflects each point on the sphere across the center to the opposite side. It's the only possible section that doesn't fix any points on the sphere, but then any corresponding retraction on the ball would be missing the center or have a fixed point there.  After all that, I'm still a little uncertain about this. I'm not convinced my proof is correct, but I also won't find out one way or the other unless I keep moving. So, on we go.     Exercise 4:   Express the restrictions given above on my travel and yours...    Story time! I'm chilling in Buffalo on a Friday morning when I get a call from a friend and decide to take a road trip to Rochester to vist them. So at noon, I jump in the car and start heading there, but I remember I left my wallet! I bust a U and go back home to look for it. By the time I find it, my tummy is growling. I head over my favorite taqueria for a bite. It's a little out of my way, but the salsa is to die for. I finally get on the road again, but now everyone is getting out of work so I hit some nasty traffic on the way. After crawling along a snail's pace for a few hours I'm starting to get tired and need to use the restroom. I make a quick detour to a little cafe I just passed. By the time I'm back on the road again, traffic has cleared up and it's a straight shot to Rochester at 5:00pm. My trip might look something like this:   Sample map corresponding to \"my\" story      Okay, maybe I got carried away, but this is \"my\" story. It has a beginning, in Buffalo at noon and it has an end, in Rochester at 5:00pm. In the figure above, the horizontal axis is the time in hours since my departure, and the vertical axis in the distance in miles along the road. Note that in my story, I double back for tacos, which is why there's a section in the map with negative distance. \"Your\" story might be a little different, but what I do know is that you were \"somewhere on the road between Buffalo and Rochester\" for the entire duration. For now, let's suppose you just drive back a forth along some stretch of road in the middle like so:   Sample map corresponding to \"your\" story      It should be obvious in this case that our paths have to cross, but we're trying to generalize these maps as much as possible. For now, let's start giving some of these objects proper names.  Let be our start time and end time for \"endpoints\" of the trip in \"time\". Let be Buffalo and Rochester, our \"endpoints\" on the \"road\". Since both time and space are continuous, these endpoints can be included in the respective intervals and . Let's call the inclusion map on the \"time\"-line to be and the inclusion map on the \"position\"-line to be . Note that Brouwer's 1st Theorem says there can't exist any retractions for either of these maps.  My position at any given time is a map that needs to satisfy certain conditions. I know and : that at the start of my trip I'm in Buffalo and at the end I'm in Rochester. Note that since our endpoints are included: .  The premise of this thought experiment is based around the idea that if \"you\" also have a map we must necessarily meet somewhere in that \"space-time\". We're using some kind of \"freeway distance\", where my 'location' sticks to the exit I took off it when I needed to make a stop.  Maybe \"you\" lived your entire life in Buffalo such that your , our meeting place would be at the start of of my trip or some time prior! In the other extreme, maybe you've lived your entire life in Rochester and your . In this case, \"you meeting me\" is contigent on \"me deciding to make the trip\" and we \"meet\" at 5:00pm. It's also possible you've never been to either Buffalo nor Rochester but live some place along the way, or maybe have been to one but not the other. In any of these cases, we can can map your position to some sub-interval of for the entire time period .  What I'm going to argue is that if you have such a map and we never meet we can construct a continuous retraction from with no fixed point. Since Brouwer's theorem establishes that such a retraction can't exist, there must be some with the property .  First, let's rule out the \"easy maps\". Suppose I hadn't doubled back at all and moved steadily from Buffalo to Rochester so that my path is invertable I have a unique position for every time. We'd be able to use your map construct endomap on through the composition given by . Our fixed point theorem says any continuous endomap has a fixed point, so there's some with . Apply on the left side to get . We meet at time and position .  What if your map is invertable? Well, then we could use it to construct an endomap on . We compose . This implies there's some fixed point with . Note that our spaces are different, so here we meet at time and position .  There is however, one map that might have the property . Imagine my \"evil twin\". This twin starts in the opposite city and takes the opposite that I do along the way. If map is going to avoid coming into contact with me at every step in my journey, it would have to be him. He takes every step I do, but in the opposite direction! This is the composition of my map with the \"antipodal map\" on it takes every moment in my journey in reverse. If my map is continuous, so is my evil twin. If there's a sequence of arrows, we can reverse them.  We've already established that my journey is not invertable, so it stands to reason that my evil twin would also have that property. But check this out, even me and my evil twin need to meet!   My \"evil twin\" map    The composition of the antipodal map on followed my must be the same as followed by the antipodal map on . My trip needs to be reversable, but we've already shown that it can't be. The fixed point theorem says me and my evil twin have to either meet or jump over each other the map can't be continuous without the meet-up!  I'm thinking that we can use the meeting place of myself and my evil twin as an approximation for the midpoint of my journey. Your map needs to have some evil twin midpoint also. If we alternate \"halfway points\", we should be able to do something of a binary search to home in on each other's location in terms of whether we're closer in the front or back half of our respective trips. Essentially, we'd have an analogue for the mean value theorem .  I think this is about as close as I'm going to get for \"an answer\" to (a) and (b) for the week. I'm not really sure how I would generalize it further for (c) and (d). I feel like right now there's a glaring weak spot in my argument by even assuming is well-defined for the entire space. What if \"you\" were born or died sometime during my trip? Would I still necessarily \"meet\" you?  The thing that I'm left curious is about the connection between Brouwer's theorems and my notions about simplices. I'm used to this idea of going from a point , to a line segment , to a triangle , to a tetrahedra , and then generalizing to higher dimensional spaces from there. There seems like an obvious parallel to Brouwer's first theorem that says we can't have a retraction from to , or from any to with for that matter.    Having \"attempted\" all of the exercises in the session, I think I'll stop here. I feel like I could easily spend another week on this session, but since the authors explicitly state it's not important I'll take them for their word. They obviously have spent a lot more time on it than I have. I didn't even have time to proofread myself this week!  "
},
{
  "id": "example-53",
  "level": "2",
  "url": "session10.html#example-53",
  "type": "Example",
  "number": "3.13.1",
  "title": "Exercise 1:.",
  "body": " Exercise 1:   Let be, as before, the inclusion of the circle into the disk...    We're given that we have two continuous maps and that . We want to show that there's some point such that We're also told to use the retraction theorem , and the revelevant one states that \"there is no continuous map which is a retraction for j\".  Let's suppose for a second that the opposite were true: for every . Since these two points are different, we can construct an arrow using one of them as the \"tail\" and one as the \"head\". We can define a map that follows this arrow until it reaches the boundary point on the circle like so:   Construction diagram for our map      Since we're guaranteed to have , let's see what happens when we compose with it. If we could prove , we'd have a contradiction and be done, but it's not clear that's the case quite yet. I think the key to this lies in the fact that . In the text, they proved the special case where . This is a slightly more relaxation condition to show that doesn't need to be the identity everywhere it just needs to be the identity on the edge of the disk where it meets the circle.  I'm thinking of like taking a sample from the embedding of rather than from at large. The text used the notation to show this operation. Once we've chosen that , we can apply the map to aquire our point on the edge of the disk.  Since , the rule that still applies, but if we force to be the \"head\" of the arrow then we'll have an arrow whose \"head\" lies on the boundary, which also happens to be the same point we originated from.   Construction diagram for our map      Being able to follow the points back to their origins like this essentially gives us a retraction for . However, we already know such retraction can't exist! This means that our assumption that is false, which is logically equivalent to the assertion that . QED.  I must admint, this all feels a little \"hand wavy\" still. I'm not really sure how much of Euclidean geometry I'm projecting onto the situation. I think this is also a good spot to point out the \"antipodal\" map that we'd get by swapping the head and tail of our arrow between and :   Construction diagram for our antipodal map      I'd expect this map to have some fun properties. The one situation where we'd have an endomap on the circle with no fixed points is the one that maps each point to the one opposite it, but this needs a fixed point for us to reflect over. I think this is going to be important later.   "
},
{
  "id": "example-54",
  "level": "2",
  "url": "session10.html#example-54",
  "type": "Example",
  "number": "3.13.5",
  "title": "Exercise 2:.",
  "body": " Exercise 2:   Suppose is a 'retract' of ...    Let's sort through our givens here. We know we have with . We also know that has a fixed point property: for every endomap there exists some with . We want to show that has the same property for maps from .  Let's start by having a look at the class of endomaps . Each map must have some corresponding map given by . We can apply on the left and on the right to get an equivalent expresson for in terms of :      Since this map has some fixed point such that , there must be some corresponding point in given by that has this property for . It should then follow that is a fixed point of satisfying.         Having proven that , we've established our fixed point property and I think we're done.   "
},
{
  "id": "example-55",
  "level": "2",
  "url": "session10.html#example-55",
  "type": "Example",
  "number": "3.13.6",
  "title": "Exercise 3:.",
  "body": " Exercise 3:   Use the result of the preceeding exercise, ...    Let's recap the last exercise: Given \"A is a retract of X\" ( ) and \"X has the fixed point property for maps from T\" ( such that ), it follows that \"A also has the fixed point property\" ( such that ).  In the case of theorem (1), we can assume the premise \"Let be a line segment including its endpoints ( for Interval) and suppose is a continuous endomap. Then must have a fixed point: a point in for which .\"  We're attempting to show that this is sufficient to imply the corresponding retraction theorem: \"Consider the inclusion map of the two-point set as boundary of the interval . There is no continuous map which is a retraction for j.\"  Since is a two-point set, perhaps we can use the fact that there are only four possible endomaps that can exist in that space. These are illustrated below:   Possible endomaps on two point space      Of these four maps, precisely one has the property of \"having no fixed point\". This antipodal map sends each of the points in to the \"opposite\" point. For the sake of convenience, let's can name these points . The antipodal map is equivalent to the operation , with the other maps being given by , , . This is the unique endomap on satisfying .  I'm thinking the easiest way to approach this is to assume we have some map that acts like our \"antipodal\" map sending each point to it's mirror on the other half of the interval. For us to have any notion of continuity on this interval, we'd need to be able to take an arbitrarily small step to one side of each endpoint so we should be able to take the opposite step from the other. In other words, for any , we can pair with . Using the interval and as this operation, it's easy to see that produces a fixed point in the middle at where it's equidistantant from the endpoints .  If any map on this interval was going to \"have no fixed point\", it would have needed to be an antipodal map. In order for any map to possibly satisfy , it needs to divide the points into two sections. Our map either needs to map \"0.5\" to itself or to leave it undefined altogther. If we have arrows going from 0 to 1 and arrows from 1 to 0, at some point along the way the \"heads\" of our arrows need to go past the \"tails\" coming from the opposite direction.  Perhaps this makes more sense if I step back a bit and state something \"obvious\": There is no retraction from to .  has two points while has one.  might have a section, in which case we have one of the two bottom diagrams in the possible endomaps figure above. This would be our map that takes the fixed point and sends it to itself. We can go from , but we make by going from because there simply aren't enough points to work with.  It sounds like a variation of the intermediate value theorem. If there's a path of arrows leading from 0 to 1, then we should be able to reverse it and follow the arrows from 1 to 0. When we do, either there needs to be some fixed point that connects the heads from one path to the tails from the other or we don't have a continuous path we jump!  In summary:    The only endomap on with no fixed point is the antipodal map.    The only endomap on that could potentially not have a fixed point would be the antipodal map.    The antipodal map on has a fixed point.    There is no endomap on without fixed point.    Any retract preserves fixed points.    There is no retract from to     If it sounds like I'm unsure at this point, that's because I am. Maybe attempting the second theorem will provide more insight.  For (2) we're given that any continuous endomap on the closed disk, must have a fixed point. We want to prove that there is no continuous map which is a retraction for the inclusion map of the circle into the disk.  I think we can develop a similar definition of an \"antipodal map\" on the circle by reflecting across the center of the disk. This map is a unique endomap on . It has no fixed points for the circle   and acts as it's own inverse  . We can extend this map to the disk, but it fails to provide an inverse for the point at the center which we reflected over. Our antipodal map is the only possible section of the disk's boundary, but it fails to be a retraction due to this \"missing\" point in the middle.  A similar line of reasoning should hold true for the sphere. The antipodal map reflects each point on the sphere across the center to the opposite side. It's the only possible section that doesn't fix any points on the sphere, but then any corresponding retraction on the ball would be missing the center or have a fixed point there.  After all that, I'm still a little uncertain about this. I'm not convinced my proof is correct, but I also won't find out one way or the other unless I keep moving. So, on we go.   "
},
{
  "id": "example-56",
  "level": "2",
  "url": "session10.html#example-56",
  "type": "Example",
  "number": "3.13.8",
  "title": "Exercise 4:.",
  "body": " Exercise 4:   Express the restrictions given above on my travel and yours...    Story time! I'm chilling in Buffalo on a Friday morning when I get a call from a friend and decide to take a road trip to Rochester to vist them. So at noon, I jump in the car and start heading there, but I remember I left my wallet! I bust a U and go back home to look for it. By the time I find it, my tummy is growling. I head over my favorite taqueria for a bite. It's a little out of my way, but the salsa is to die for. I finally get on the road again, but now everyone is getting out of work so I hit some nasty traffic on the way. After crawling along a snail's pace for a few hours I'm starting to get tired and need to use the restroom. I make a quick detour to a little cafe I just passed. By the time I'm back on the road again, traffic has cleared up and it's a straight shot to Rochester at 5:00pm. My trip might look something like this:   Sample map corresponding to \"my\" story      Okay, maybe I got carried away, but this is \"my\" story. It has a beginning, in Buffalo at noon and it has an end, in Rochester at 5:00pm. In the figure above, the horizontal axis is the time in hours since my departure, and the vertical axis in the distance in miles along the road. Note that in my story, I double back for tacos, which is why there's a section in the map with negative distance. \"Your\" story might be a little different, but what I do know is that you were \"somewhere on the road between Buffalo and Rochester\" for the entire duration. For now, let's suppose you just drive back a forth along some stretch of road in the middle like so:   Sample map corresponding to \"your\" story      It should be obvious in this case that our paths have to cross, but we're trying to generalize these maps as much as possible. For now, let's start giving some of these objects proper names.  Let be our start time and end time for \"endpoints\" of the trip in \"time\". Let be Buffalo and Rochester, our \"endpoints\" on the \"road\". Since both time and space are continuous, these endpoints can be included in the respective intervals and . Let's call the inclusion map on the \"time\"-line to be and the inclusion map on the \"position\"-line to be . Note that Brouwer's 1st Theorem says there can't exist any retractions for either of these maps.  My position at any given time is a map that needs to satisfy certain conditions. I know and : that at the start of my trip I'm in Buffalo and at the end I'm in Rochester. Note that since our endpoints are included: .  The premise of this thought experiment is based around the idea that if \"you\" also have a map we must necessarily meet somewhere in that \"space-time\". We're using some kind of \"freeway distance\", where my 'location' sticks to the exit I took off it when I needed to make a stop.  Maybe \"you\" lived your entire life in Buffalo such that your , our meeting place would be at the start of of my trip or some time prior! In the other extreme, maybe you've lived your entire life in Rochester and your . In this case, \"you meeting me\" is contigent on \"me deciding to make the trip\" and we \"meet\" at 5:00pm. It's also possible you've never been to either Buffalo nor Rochester but live some place along the way, or maybe have been to one but not the other. In any of these cases, we can can map your position to some sub-interval of for the entire time period .  What I'm going to argue is that if you have such a map and we never meet we can construct a continuous retraction from with no fixed point. Since Brouwer's theorem establishes that such a retraction can't exist, there must be some with the property .  First, let's rule out the \"easy maps\". Suppose I hadn't doubled back at all and moved steadily from Buffalo to Rochester so that my path is invertable I have a unique position for every time. We'd be able to use your map construct endomap on through the composition given by . Our fixed point theorem says any continuous endomap has a fixed point, so there's some with . Apply on the left side to get . We meet at time and position .  What if your map is invertable? Well, then we could use it to construct an endomap on . We compose . This implies there's some fixed point with . Note that our spaces are different, so here we meet at time and position .  There is however, one map that might have the property . Imagine my \"evil twin\". This twin starts in the opposite city and takes the opposite that I do along the way. If map is going to avoid coming into contact with me at every step in my journey, it would have to be him. He takes every step I do, but in the opposite direction! This is the composition of my map with the \"antipodal map\" on it takes every moment in my journey in reverse. If my map is continuous, so is my evil twin. If there's a sequence of arrows, we can reverse them.  We've already established that my journey is not invertable, so it stands to reason that my evil twin would also have that property. But check this out, even me and my evil twin need to meet!   My \"evil twin\" map    The composition of the antipodal map on followed my must be the same as followed by the antipodal map on . My trip needs to be reversable, but we've already shown that it can't be. The fixed point theorem says me and my evil twin have to either meet or jump over each other the map can't be continuous without the meet-up!  I'm thinking that we can use the meeting place of myself and my evil twin as an approximation for the midpoint of my journey. Your map needs to have some evil twin midpoint also. If we alternate \"halfway points\", we should be able to do something of a binary search to home in on each other's location in terms of whether we're closer in the front or back half of our respective trips. Essentially, we'd have an analogue for the mean value theorem .  I think this is about as close as I'm going to get for \"an answer\" to (a) and (b) for the week. I'm not really sure how I would generalize it further for (c) and (d). I feel like right now there's a glaring weak spot in my argument by even assuming is well-defined for the entire space. What if \"you\" were born or died sometime during my trip? Would I still necessarily \"meet\" you?  The thing that I'm left curious is about the connection between Brouwer's theorems and my notions about simplices. I'm used to this idea of going from a point , to a line segment , to a triangle , to a tetrahedra , and then generalizing to higher dimensional spaces from there. There seems like an obvious parallel to Brouwer's first theorem that says we can't have a retraction from to , or from any to with for that matter.   "
},
{
  "id": "article3",
  "level": "1",
  "url": "article3.html",
  "type": "Section",
  "number": "4.1",
  "title": "Article 3: Examples of Categories, Part 1",
  "body": " Article 3: Examples of Categories, Part 1  I think this is about where I started getting lost the first time through this text, but I feel like I'm coming into it with a better foundation this time around. There's also 30 exercises over the course of Article 3, so I already anticipate a need to break it up into parts. I want to make sure I take my time here and really understand what's going on.   Exercise 1:   Show that if both as above and also...    Our basic idea here is that \"respects the structure\" of our category . That is:   Satisifies for all endomaps and .  Now suppose we have another map with    We can then compose these maps to produce a composition :   This map should preserve structure also if we can prove that . This should be fairly straight forward to show using the associative property and our previous assumptions:      And that completes the exercise.     Exercise 2:   What can you prove...    Recall that an endomap is \"idempotent\" if . If is a \"retraction\" for , that implies .  Watch what happens when if we apply on the right of both sides to :     Essentially, a retraction preserves the fixed point proprerty. Since fixes every point it touches and this retraction can restore each value afterwards, that can only happen if .     Exercise 3:   A finite set has an even number of elements iff...    I'm not really sure what the question is, so I'm assuming this is a \"prove it\" problem. I think this is essentially the approach I tried to take with Brouwer's theorems lasts.  If we define as set being \"even\" iff there is an involution with no fixed points. This is like the \"antipodal map\" I explored earlier that pairs up each point in a space with it's \"opposite\". When we're working with an antipodal map on the interval, we either we have a point in the middle that maps to itself or we \"jump\" over it. The fixed point property becomes a proxy for whether or not the map is continuous because we forced the interval to be \"odd\". The only problem with using this idea here is that the interval had a natural order to it while the set may not, so our involution isn't necessarily unique.  Maybe it might help to think of taking a map applying and taking an \"image\" of it for every . Either we find some point or we don't, but we can use this to classify each point as \"fixed\" or \"not\". Essentially this process defines map that returns if a point is fixed by or if it doesn't. However, since is known to be an involution with then there needs to be at least as many points in as there are in which ensures that .  Framing the problem like this allows us to ask if there exists a section of which permits a retraction on . More specifically, we're looking for a map with . If then , and consequently would be undefined. If has no fixed points then , and consequently would be undefined. In order for this map to exist, must have at least one fixed point and one non-fixed point. That is, for some we have and some such that with and .  The problem with this is that such a map can't exist without having at least three points: , , . It's impossible for a composition of the any form to ever produce an identity map. If a retraction for existed it would need to be the same as the section, so clearly the fixed point property on means that no map is a retraction from to .  I feel like I'm starting to talk in circles now, so I'll just add that I think there's some parallels to be made with the \"split idempotent\" exercise from Session 9.  If all points in are fixed, that implies a splitting of by . If no points in are fixed, that also implies a splitting of by . If has both fixed and non-fixed points, that implies a splitting of by . Since there is no isomorphism between and , we use the result of Session 9 Exercise 3 to infer that can't be split by both of them simultaneously. If our has both fixed and non-fixed points, the set of fixed points would preserve an isomorphism with  meaning that the point fixed by would necessarily be unique. Likewise, each non-fixed point needs to exists as part of a pair with some to preserve the isomorphism between and .  I'm not sure if I'm using this concept of \"splitting by \" correctly here, but it seems like it might be a reasonable analogy of \"division by two\" for generic maps.     Exercise 4:   If is considered as an endomap of ...    This would be characterized as an \"involution\" since implies . It has a fixed point at since . It's not idempotent since for any .     Exercise 5:   ..if instead ...    This would be characterized as an \"idempotent\" since implies . It has an infinite number of fixed points, since such that we have . It is not an involution since for any .     Exercise 6:   ...defined by the formula ...    The previous page defines \"automorphism\" as an \"endomap which is also an isomorphism\", so I'm going to have to say \"yes\". We can define the inverse by . It follows that and , satisfying the definition for an isomorphism. This map is neither idempotent nor an involution, and has no fixed points.     Exercise 7:   ... ...    Conceptually, we can loosely define an inverse by . However, this will not meet the definition for an automorphism. It mights the criteria for a \"section\" since , but it's not a \"retraction\" since for any which is not a multiple of 5. This map is neither idempotent nor an involution, but does have fixed point at 0.     Exercise 9:   In , consider the endomap ...    We're given an internal diagram for , and I took the liberty of naming our three points as follows:   Internal diagram of our map      Clearly the above diagram of is fully described by the relations , , and .  In order to demonstrate that , we just need to show it holds for all three points: that , , and . Let's verify these one at a time:     Having established that holds for all three values, let's next address idempotency by checking if . It's pretty clear that this fails for . but , so .  Finally, we need to check whether or not is an involution. Since an involution would imply , the case of serves as a counter-example to this expression.    Seeing that we move on to a new category after this exercise, I think this might be a good place to stop for the week. With the extra time, I managed to write a blog post about joining the Fediverse . Maybe my stream of cat pics will encourage others to have fun with cat theory.  "
},
{
  "id": "example-57",
  "level": "2",
  "url": "article3.html#example-57",
  "type": "Example",
  "number": "4.1.1",
  "title": "Exercise 1:.",
  "body": " Exercise 1:   Show that if both as above and also...    Our basic idea here is that \"respects the structure\" of our category . That is:   Satisifies for all endomaps and .  Now suppose we have another map with    We can then compose these maps to produce a composition :   This map should preserve structure also if we can prove that . This should be fairly straight forward to show using the associative property and our previous assumptions:      And that completes the exercise.   "
},
{
  "id": "example-58",
  "level": "2",
  "url": "article3.html#example-58",
  "type": "Example",
  "number": "4.1.2",
  "title": "Exercise 2:.",
  "body": " Exercise 2:   What can you prove...    Recall that an endomap is \"idempotent\" if . If is a \"retraction\" for , that implies .  Watch what happens when if we apply on the right of both sides to :     Essentially, a retraction preserves the fixed point proprerty. Since fixes every point it touches and this retraction can restore each value afterwards, that can only happen if .   "
},
{
  "id": "example-59",
  "level": "2",
  "url": "article3.html#example-59",
  "type": "Example",
  "number": "4.1.3",
  "title": "Exercise 3:.",
  "body": " Exercise 3:   A finite set has an even number of elements iff...    I'm not really sure what the question is, so I'm assuming this is a \"prove it\" problem. I think this is essentially the approach I tried to take with Brouwer's theorems lasts.  If we define as set being \"even\" iff there is an involution with no fixed points. This is like the \"antipodal map\" I explored earlier that pairs up each point in a space with it's \"opposite\". When we're working with an antipodal map on the interval, we either we have a point in the middle that maps to itself or we \"jump\" over it. The fixed point property becomes a proxy for whether or not the map is continuous because we forced the interval to be \"odd\". The only problem with using this idea here is that the interval had a natural order to it while the set may not, so our involution isn't necessarily unique.  Maybe it might help to think of taking a map applying and taking an \"image\" of it for every . Either we find some point or we don't, but we can use this to classify each point as \"fixed\" or \"not\". Essentially this process defines map that returns if a point is fixed by or if it doesn't. However, since is known to be an involution with then there needs to be at least as many points in as there are in which ensures that .  Framing the problem like this allows us to ask if there exists a section of which permits a retraction on . More specifically, we're looking for a map with . If then , and consequently would be undefined. If has no fixed points then , and consequently would be undefined. In order for this map to exist, must have at least one fixed point and one non-fixed point. That is, for some we have and some such that with and .  The problem with this is that such a map can't exist without having at least three points: , , . It's impossible for a composition of the any form to ever produce an identity map. If a retraction for existed it would need to be the same as the section, so clearly the fixed point property on means that no map is a retraction from to .  I feel like I'm starting to talk in circles now, so I'll just add that I think there's some parallels to be made with the \"split idempotent\" exercise from Session 9.  If all points in are fixed, that implies a splitting of by . If no points in are fixed, that also implies a splitting of by . If has both fixed and non-fixed points, that implies a splitting of by . Since there is no isomorphism between and , we use the result of Session 9 Exercise 3 to infer that can't be split by both of them simultaneously. If our has both fixed and non-fixed points, the set of fixed points would preserve an isomorphism with  meaning that the point fixed by would necessarily be unique. Likewise, each non-fixed point needs to exists as part of a pair with some to preserve the isomorphism between and .  I'm not sure if I'm using this concept of \"splitting by \" correctly here, but it seems like it might be a reasonable analogy of \"division by two\" for generic maps.   "
},
{
  "id": "example-60",
  "level": "2",
  "url": "article3.html#example-60",
  "type": "Example",
  "number": "4.1.4",
  "title": "Exercise 4:.",
  "body": " Exercise 4:   If is considered as an endomap of ...    This would be characterized as an \"involution\" since implies . It has a fixed point at since . It's not idempotent since for any .   "
},
{
  "id": "example-61",
  "level": "2",
  "url": "article3.html#example-61",
  "type": "Example",
  "number": "4.1.5",
  "title": "Exercise 5:.",
  "body": " Exercise 5:   ..if instead ...    This would be characterized as an \"idempotent\" since implies . It has an infinite number of fixed points, since such that we have . It is not an involution since for any .   "
},
{
  "id": "example-62",
  "level": "2",
  "url": "article3.html#example-62",
  "type": "Example",
  "number": "4.1.6",
  "title": "Exercise 6:.",
  "body": " Exercise 6:   ...defined by the formula ...    The previous page defines \"automorphism\" as an \"endomap which is also an isomorphism\", so I'm going to have to say \"yes\". We can define the inverse by . It follows that and , satisfying the definition for an isomorphism. This map is neither idempotent nor an involution, and has no fixed points.   "
},
{
  "id": "example-63",
  "level": "2",
  "url": "article3.html#example-63",
  "type": "Example",
  "number": "4.1.7",
  "title": "Exercise 7:.",
  "body": " Exercise 7:   ... ...    Conceptually, we can loosely define an inverse by . However, this will not meet the definition for an automorphism. It mights the criteria for a \"section\" since , but it's not a \"retraction\" since for any which is not a multiple of 5. This map is neither idempotent nor an involution, but does have fixed point at 0.   "
},
{
  "id": "example-64",
  "level": "2",
  "url": "article3.html#example-64",
  "type": "Example",
  "number": "4.1.8",
  "title": "Exercise 9:.",
  "body": " Exercise 9:   In , consider the endomap ...    We're given an internal diagram for , and I took the liberty of naming our three points as follows:   Internal diagram of our map      Clearly the above diagram of is fully described by the relations , , and .  In order to demonstrate that , we just need to show it holds for all three points: that , , and . Let's verify these one at a time:     Having established that holds for all three values, let's next address idempotency by checking if . It's pretty clear that this fails for . but , so .  Finally, we need to check whether or not is an involution. Since an involution would imply , the case of serves as a counter-example to this expression.   "
},
{
  "id": "article3-p2",
  "level": "1",
  "url": "article3-p2.html",
  "type": "Section",
  "number": "4.2",
  "title": "Article 3: Examples of Categories, Part 2",
  "body": " Article 3: Examples of Categories, Part 2  It's really interesting to the use of formalized abstraction here. We looked at some simple examples in and now we're embedding that in this broader category of directed graphs in a way that preserves the properties we used. It feels like we're \"stepping out of the box\" in a very deliberate fashion so what we can take what we know \"outside\" and apply it to solve problems \"inside\".   Exercise 10:   Complete the specification...    Okay my first step here is to reproduce our diagram:   Directed graph for Article 3 Exercise 10      While creating the diagram, there's some obvious structural patterns. In order to draw this, I started by placing the six points in . The other objects are the arrows, namely . Our maps and represent the source and target of each arrow. For me, it seemed natural to structure this information into a table:                                    Based on this table, the questions become fairly straight forward. The input has the same output points for and , specifically . There is no element with .  I'm thinking these sub-questions are important because they show that these arrow maps have neither \"retraction\" nor \"sections\". Unless we're very specific about the qualities of our maps, our source and target maps will likely be non-invertable. I find arrows and particularly interesting because they are two different arrows with the same source and same target . I feel like I'm fighting a natural tendancy to assume that \"having the same source and target\" makes them \"the same arrow\" but that equivalency may not necessarily hold true in a broader category.     Exercise 11:   If as above and...    Let's begin with a recap of what we know about :   Definition of for Article 3 Exercise 11      We're told that \"preserves source and target relations\", which is defined by having a pair of maps and satisfying and .  Consider another map with the same property:   Definition of for Article 3 Exercise 11      In order to preserve source and target relations, there would need to exist and with and .  We can form a composition of maps and as shown below:   Composition diagram for Article 3 Exercise 11      In order to show that the composition preserves source and target relations, we'd need to demonstrate that both and .  By the associative property, . Using the substition gives us , and allows us to the perform a subsitution using to show . It follows that .  We can apply a similar process on . The associative property gives us , which allows us to use the substition to get . Next we use our property that to perform another subsitution resulting in . It follows that .  Having established the source and target preservation properties, we can conclude that is an well defined -map:   Definition of for Article 3 Exercise 11         Exercise 12:   If we denote the result of the above process by ...    We want to show that . Or, \"the composition of embeddings is the same as the embedding of the composition\".  Our embedding of can be illustrated by the following diagram:   Diagram of for Article 3 Exercise 12      In order to preserve structure, the -map is required to preserve the relations and . The former is a trivial result of the identity map, while the later is a property inherits from being an object in .  Similarly, our embedding of can be illustrated as follows:   Diagram of for Article 3 Exercise 12      Like before, this preserves the properties and .  The embedding of our composition also should have similar structure:   Diagram of for Article 3 Exercise 12      This needs to satisfy and . The former is again a trivial result of the identity map. The latter is implied by the fact that since and are both objects in that we must also have . This establishes the relation .  Finally, let's compose these embeddings together and verify everything still holds:   Composition diagram of for Article 3 Exercise 12      It's easy to see how the embedding illustrations above are composed together together to produce an embedding of the compositions. The identity property ensures that . The structure inherited from the endomaps ensures that .  Having shown that these properties are preserved, I think we've sufficiently demonstrated that .     Exercise 13:   (Fullness) Show that...    We're given an -morphism that comes via the insertion that we used previously:   The source preservation property of implies that , but since and are identity maps we can just say . Since the target preservation property says , we can substitute to get . This property establishes that exists and is a valid -morphism: .     Exercise 14:   Give an example of of two endomaps...    To be honest, I wasn't quite sure how to start this one at first so I just started exploring small endomaps. I explored too many to review them all, but in the process I learned some things.  I think I had conceptually confused and at first. I was under the impression that \"produced an arrow\" and \"produced a dot\", but a closer reading of the book stated that \"operates on arrows\" and \"operates on dots\". Eventually I made a mental shift to the Spanish (before) and (after) because it helped me remember the relationship with the endomaps.  I found tables to be a nice way of organizing all the information about my \"arrows\" and \"dots\". Having my information organized reminded me of Exercise 10. Looking back over my notes, I had noticed earlier that the diagram included a pair of two different arrows with the same source and destination. I took this as a hint.  I also found myself repeatedly going back to the map in Example 9 as a reference. There was something about the way the endomap removes an element that seemed like it might be important. I labeled the arrows in addition to the points to help keep track of what I was working with:   Internal diagram of map from Exercise 9      I had a hunch that might help establish that . My idea revolved around the idea that if I could somehow make , , and by composing with itself multiple times that I could set up a situation where they balance out.  I think I also was confused about the inclusion and the property that the \"source and target structures are the same map\". I wasn't sure if I needed to enforce this restriction on that all arrows in my endomaps were loops or not. I started to wonder how much of this ambiguity was intentional, and if looser of a definition of \"loop\" might be in order.  A flash of insight came as I was trying to pick out a cat photo for the week and see Alphonse nuzzling Konshu:   Alphonse nuzzles a statuette of Konshu.   A brown tabby lays in a blue cat bed and nuzzles a small figure depicting the Egyptian deity Konshu.    I started to think about Moon Knight and the relation between the depiction of Konshu in the comic books versus the mythological depiction of the same character. I wondered how my mental model of Konshu might vary depending on which version I encountered first. To appease my \"fussy professor\", I'm going to define my set to be the set of \"Konshu Models\" and endomap to be the \"influences\" acting on those models.   Defining and on \"Konshu models\"      I reasoned that the Moon Knight from the comics used the mythology around Konshu to develop the character, but as more people read the comic they start to project qualities from the comic character back to the deity. Whether those projections align with the mythology will impact the design of later comics, forming a sort of feedback loop. Prior to seeing the Netflix show, my model of Konshu isn't really impacted by either I'm just off in my own little world.  Now let's denote to be a map describing how my metal model might change after exposure to new ideas. Maybe seeing the Netflix show prompts me to read a bunch of comics or mythology. In either case, it forms a feedback loop between my model of the comic Konshu and my model of the myth Konshu. Let's call this our set and endomap :   Defining and on mental models.      Now let's consider or maps and . Let's say that is the case where I learn about Konshu mythos before watching the Netflix show and to be the case where I'm exposed to the mythology after. For the sake of convenience, I'm going to relabel the points in the as and the points in as :   Defining and on \"Konshu models\"      Since and , clearly . However, we can also show that by evaluting them over the entire codomain:   Exploring outputs of compositions                                     In the table above, notice that the columns for and are equivalent for all three points. Thus, we have with .  I'm thinking that the moral of the story here is these endomaps contain more than self-loops, but our insertion fails to enforce that condition. If the endomap contains only self loops it has an insertion that makes a commutative diagram, but just because we have a commutative diagram like this doesn't mean it came from that insertion.    "
},
{
  "id": "example-65",
  "level": "2",
  "url": "article3-p2.html#example-65",
  "type": "Example",
  "number": "4.2.1",
  "title": "Exercise 10:.",
  "body": " Exercise 10:   Complete the specification...    Okay my first step here is to reproduce our diagram:   Directed graph for Article 3 Exercise 10      While creating the diagram, there's some obvious structural patterns. In order to draw this, I started by placing the six points in . The other objects are the arrows, namely . Our maps and represent the source and target of each arrow. For me, it seemed natural to structure this information into a table:                                    Based on this table, the questions become fairly straight forward. The input has the same output points for and , specifically . There is no element with .  I'm thinking these sub-questions are important because they show that these arrow maps have neither \"retraction\" nor \"sections\". Unless we're very specific about the qualities of our maps, our source and target maps will likely be non-invertable. I find arrows and particularly interesting because they are two different arrows with the same source and same target . I feel like I'm fighting a natural tendancy to assume that \"having the same source and target\" makes them \"the same arrow\" but that equivalency may not necessarily hold true in a broader category.   "
},
{
  "id": "example-66",
  "level": "2",
  "url": "article3-p2.html#example-66",
  "type": "Example",
  "number": "4.2.4",
  "title": "Exercise 11:.",
  "body": " Exercise 11:   If as above and...    Let's begin with a recap of what we know about :   Definition of for Article 3 Exercise 11      We're told that \"preserves source and target relations\", which is defined by having a pair of maps and satisfying and .  Consider another map with the same property:   Definition of for Article 3 Exercise 11      In order to preserve source and target relations, there would need to exist and with and .  We can form a composition of maps and as shown below:   Composition diagram for Article 3 Exercise 11      In order to show that the composition preserves source and target relations, we'd need to demonstrate that both and .  By the associative property, . Using the substition gives us , and allows us to the perform a subsitution using to show . It follows that .  We can apply a similar process on . The associative property gives us , which allows us to use the substition to get . Next we use our property that to perform another subsitution resulting in . It follows that .  Having established the source and target preservation properties, we can conclude that is an well defined -map:   Definition of for Article 3 Exercise 11       "
},
{
  "id": "example-67",
  "level": "2",
  "url": "article3-p2.html#example-67",
  "type": "Example",
  "number": "4.2.9",
  "title": "Exercise 12:.",
  "body": " Exercise 12:   If we denote the result of the above process by ...    We want to show that . Or, \"the composition of embeddings is the same as the embedding of the composition\".  Our embedding of can be illustrated by the following diagram:   Diagram of for Article 3 Exercise 12      In order to preserve structure, the -map is required to preserve the relations and . The former is a trivial result of the identity map, while the later is a property inherits from being an object in .  Similarly, our embedding of can be illustrated as follows:   Diagram of for Article 3 Exercise 12      Like before, this preserves the properties and .  The embedding of our composition also should have similar structure:   Diagram of for Article 3 Exercise 12      This needs to satisfy and . The former is again a trivial result of the identity map. The latter is implied by the fact that since and are both objects in that we must also have . This establishes the relation .  Finally, let's compose these embeddings together and verify everything still holds:   Composition diagram of for Article 3 Exercise 12      It's easy to see how the embedding illustrations above are composed together together to produce an embedding of the compositions. The identity property ensures that . The structure inherited from the endomaps ensures that .  Having shown that these properties are preserved, I think we've sufficiently demonstrated that .   "
},
{
  "id": "example-68",
  "level": "2",
  "url": "article3-p2.html#example-68",
  "type": "Example",
  "number": "4.2.14",
  "title": "Exercise 13:.",
  "body": " Exercise 13:   (Fullness) Show that...    We're given an -morphism that comes via the insertion that we used previously:   The source preservation property of implies that , but since and are identity maps we can just say . Since the target preservation property says , we can substitute to get . This property establishes that exists and is a valid -morphism: .   "
},
{
  "id": "example-69",
  "level": "2",
  "url": "article3-p2.html#example-69",
  "type": "Example",
  "number": "4.2.15",
  "title": "Exercise 14:.",
  "body": " Exercise 14:   Give an example of of two endomaps...    To be honest, I wasn't quite sure how to start this one at first so I just started exploring small endomaps. I explored too many to review them all, but in the process I learned some things.  I think I had conceptually confused and at first. I was under the impression that \"produced an arrow\" and \"produced a dot\", but a closer reading of the book stated that \"operates on arrows\" and \"operates on dots\". Eventually I made a mental shift to the Spanish (before) and (after) because it helped me remember the relationship with the endomaps.  I found tables to be a nice way of organizing all the information about my \"arrows\" and \"dots\". Having my information organized reminded me of Exercise 10. Looking back over my notes, I had noticed earlier that the diagram included a pair of two different arrows with the same source and destination. I took this as a hint.  I also found myself repeatedly going back to the map in Example 9 as a reference. There was something about the way the endomap removes an element that seemed like it might be important. I labeled the arrows in addition to the points to help keep track of what I was working with:   Internal diagram of map from Exercise 9      I had a hunch that might help establish that . My idea revolved around the idea that if I could somehow make , , and by composing with itself multiple times that I could set up a situation where they balance out.  I think I also was confused about the inclusion and the property that the \"source and target structures are the same map\". I wasn't sure if I needed to enforce this restriction on that all arrows in my endomaps were loops or not. I started to wonder how much of this ambiguity was intentional, and if looser of a definition of \"loop\" might be in order.  A flash of insight came as I was trying to pick out a cat photo for the week and see Alphonse nuzzling Konshu:   Alphonse nuzzles a statuette of Konshu.   A brown tabby lays in a blue cat bed and nuzzles a small figure depicting the Egyptian deity Konshu.    I started to think about Moon Knight and the relation between the depiction of Konshu in the comic books versus the mythological depiction of the same character. I wondered how my mental model of Konshu might vary depending on which version I encountered first. To appease my \"fussy professor\", I'm going to define my set to be the set of \"Konshu Models\" and endomap to be the \"influences\" acting on those models.   Defining and on \"Konshu models\"      I reasoned that the Moon Knight from the comics used the mythology around Konshu to develop the character, but as more people read the comic they start to project qualities from the comic character back to the deity. Whether those projections align with the mythology will impact the design of later comics, forming a sort of feedback loop. Prior to seeing the Netflix show, my model of Konshu isn't really impacted by either I'm just off in my own little world.  Now let's denote to be a map describing how my metal model might change after exposure to new ideas. Maybe seeing the Netflix show prompts me to read a bunch of comics or mythology. In either case, it forms a feedback loop between my model of the comic Konshu and my model of the myth Konshu. Let's call this our set and endomap :   Defining and on mental models.      Now let's consider or maps and . Let's say that is the case where I learn about Konshu mythos before watching the Netflix show and to be the case where I'm exposed to the mythology after. For the sake of convenience, I'm going to relabel the points in the as and the points in as :   Defining and on \"Konshu models\"      Since and , clearly . However, we can also show that by evaluting them over the entire codomain:   Exploring outputs of compositions                                     In the table above, notice that the columns for and are equivalent for all three points. Thus, we have with .  I'm thinking that the moral of the story here is these endomaps contain more than self-loops, but our insertion fails to enforce that condition. If the endomap contains only self loops it has an insertion that makes a commutative diagram, but just because we have a commutative diagram like this doesn't mean it came from that insertion.   "
},
{
  "id": "article3-p3",
  "level": "1",
  "url": "article3-p3.html",
  "type": "Section",
  "number": "4.3",
  "title": "Article 3: Examples of Categories, Part 3",
  "body": " Article 3: Examples of Categories, Part 3  Another week, another category. This time we're working with \"Reflexive Graphs\". Let's get to it!   Exercise 15   In a reflexive graph...    Let's start with our definition:   Definition of \"reflexive graph\"      Given this, we want to show and satisfy for . Since there's only four cases, it shouldn't be too much effort to list them all out:                        Conceptually, these properties would seem to imply that every point in serves as both source and target for some arrow in .     Exercise 16:   Show that... is determined by    First, let's formulate our definition with a diagram:   Structure preserving maps on reflexive graphs?      Where this gets interesting is when we look at all possible paths we can follow between and in addition to the ones between and . To follow the pattern of the previous categories, we'd need to enforce all 3 of the following:                   The order of that last one seems a little bit tricky since our retraction is heading in the opposite direction. At the same time, this map is presicely what allows us to \"solve\" for in terms of . In Exercise 15, we saw that this only works if there's an arrow forming a \"self-loop\" at each point. All our map needs to do is match up the self-looping arrows on each point in with the corresponding self-looping arrows on .  Let's suppose we use the common section on a point to produce some arrow . It follows that this arrow needs to form a self-loop such that , since and imply and respectively. We can then pair that point with a corresponding self-looping arrow with . We know such a loop needs to exist because and would need to satisfy . Finally, we can put this all together to define over all possible points in .  I feel like there's probably an easier way to demonstrate this using contradiction.  Suppose for a minute that there did exist some point which satistfies . You could use the structure preserving criteria of to establish that . Since we also know , that previous equation simplifies down to , which directly contradicts the identity property of . Our assumption must therefore be false and . QED .     Exercise 17:   Consider a structure...    Let's lay out the structure we're examining:   Map structure for Article 3 Exercise 17      If we're going to build a map between two such structures, we'll need to include a pair of maps like so:   Paired structures for Article 3 Exercise 17      At a glance, the structure of this combined diagram resembles a composition of two -morphisms with another yet-to-be named structure that's resembles our reflexive graph. I feel like it deserves some cool symbol like .  Let's start with the more familiar structures. I'd want this map to preserve the behavior of the endomaps and on each set. I'd want the maps to behave like -morphisms here. Specifically, means that I'd want and means that I'd want .  With the remaining four maps, , we can form multiple paths from to and to . We'd want this map to preserve those relations as well: and   Having a set of four equations to go with four pairs of maps seems consistent we what we saw for the other maps.     Exercise 18:   If has a retraction...    To prove is injective, we'll need the provided definition:   External diagram to define injectivity      We're given that has a retraction such that . To prove is injective, we need to demonstrate that for any and it follows that .  Let's approach this through contradiction. Suppose we had some that satisfy . Compose on the left of both sides:     This contradicts our assumption that , which means that no such exist. It follows that and is injective.     Exercise 19:   ... in .    Our maps here are defined by the following diagram:   Diagram showing definitions of      To show in , we'll need to demonstrate that over the entire domain . We're given both and , so these are fairly trivial:        Since those are the only points we have, we can safely conclude that .     Exercise 20:   ... is injective.    Since is only defined for two points, any and such that would directly imply that these two points are in fact the complete set . Since , it follows that so clearly .     Exercise 21:   ... exactly two retractions .    Essentially, the retractions must contain the reversed arrows of , but that leaves two possible places for it to send the third point which didn't already have an origin defined:   Diagram showing possible retractions      For any retraction , we'd be forced to have and in order to have . As a map , needs to do something with the point and there are only two choices. Let's call them such that and .     Exercise 22:   ... has no retraction in .    As in the previous exercise, our only possible retractions are and , depending on where they send . For to be a valid -map, it needs to have the property . We'll test each of our two possiblities for in turn.  For , we'd have and . Since , is not a valid -map.  For , we'd have and . Since , is not a valid -map.  Having exhausted both possible retractions of , we're forced to conlude that no retraction exists in .     Exercise 23:   How many of the eight maps...    I'm going to start by sketching out the eight possible maps :   Grid of possible maps      In order for to be an -map, it needs to satisfy . Let's go through those maps again, but this time produce tables of those values for each of    Grid of possible maps      It appears that there are precisely two possible -maps. The one that sends everything to 0 and the one that sends everything to 0 but which it instead sends to . These two maps make sense when considering the behavior of the endomap which always returns 0.     Exercise 24:   ...in the 'looser' category .    Let's diagram the insertion for our present maps:   Commutative square of maps for      Suppose is a retraction for in such that . We saw in Exercise 21 that there are precisely two possible maps could be. We know and . The only question was if or .  However, for to be a member of this category, it needs to satisfy the equation on the following commutative square:   Commutative square of maps for      In Exercise 23, our exhaustive search of maps revealed only two maps for which . However, neither of those maps match up with the only two possible retractions for . We're forced to conclude that can't exist a map meeting these conditions.    I think this is a good stopping point for the week. Despite being in the middle of \"Retractions and injectivity\", I want to be able to take my time with Exercise 25. Page breaks are breaks too!  "
},
{
  "id": "example-70",
  "level": "2",
  "url": "article3-p3.html#example-70",
  "type": "Example",
  "number": "4.3.1",
  "title": "Exercise 15.",
  "body": " Exercise 15   In a reflexive graph...    Let's start with our definition:   Definition of \"reflexive graph\"      Given this, we want to show and satisfy for . Since there's only four cases, it shouldn't be too much effort to list them all out:                        Conceptually, these properties would seem to imply that every point in serves as both source and target for some arrow in .   "
},
{
  "id": "example-71",
  "level": "2",
  "url": "article3-p3.html#example-71",
  "type": "Example",
  "number": "4.3.3",
  "title": "Exercise 16:.",
  "body": " Exercise 16:   Show that... is determined by    First, let's formulate our definition with a diagram:   Structure preserving maps on reflexive graphs?      Where this gets interesting is when we look at all possible paths we can follow between and in addition to the ones between and . To follow the pattern of the previous categories, we'd need to enforce all 3 of the following:                   The order of that last one seems a little bit tricky since our retraction is heading in the opposite direction. At the same time, this map is presicely what allows us to \"solve\" for in terms of . In Exercise 15, we saw that this only works if there's an arrow forming a \"self-loop\" at each point. All our map needs to do is match up the self-looping arrows on each point in with the corresponding self-looping arrows on .  Let's suppose we use the common section on a point to produce some arrow . It follows that this arrow needs to form a self-loop such that , since and imply and respectively. We can then pair that point with a corresponding self-looping arrow with . We know such a loop needs to exist because and would need to satisfy . Finally, we can put this all together to define over all possible points in .  I feel like there's probably an easier way to demonstrate this using contradiction.  Suppose for a minute that there did exist some point which satistfies . You could use the structure preserving criteria of to establish that . Since we also know , that previous equation simplifies down to , which directly contradicts the identity property of . Our assumption must therefore be false and . QED .   "
},
{
  "id": "example-72",
  "level": "2",
  "url": "article3-p3.html#example-72",
  "type": "Example",
  "number": "4.3.5",
  "title": "Exercise 17:.",
  "body": " Exercise 17:   Consider a structure...    Let's lay out the structure we're examining:   Map structure for Article 3 Exercise 17      If we're going to build a map between two such structures, we'll need to include a pair of maps like so:   Paired structures for Article 3 Exercise 17      At a glance, the structure of this combined diagram resembles a composition of two -morphisms with another yet-to-be named structure that's resembles our reflexive graph. I feel like it deserves some cool symbol like .  Let's start with the more familiar structures. I'd want this map to preserve the behavior of the endomaps and on each set. I'd want the maps to behave like -morphisms here. Specifically, means that I'd want and means that I'd want .  With the remaining four maps, , we can form multiple paths from to and to . We'd want this map to preserve those relations as well: and   Having a set of four equations to go with four pairs of maps seems consistent we what we saw for the other maps.   "
},
{
  "id": "example-73",
  "level": "2",
  "url": "article3-p3.html#example-73",
  "type": "Example",
  "number": "4.3.8",
  "title": "Exercise 18:.",
  "body": " Exercise 18:   If has a retraction...    To prove is injective, we'll need the provided definition:   External diagram to define injectivity      We're given that has a retraction such that . To prove is injective, we need to demonstrate that for any and it follows that .  Let's approach this through contradiction. Suppose we had some that satisfy . Compose on the left of both sides:     This contradicts our assumption that , which means that no such exist. It follows that and is injective.   "
},
{
  "id": "example-74",
  "level": "2",
  "url": "article3-p3.html#example-74",
  "type": "Example",
  "number": "4.3.10",
  "title": "Exercise 19:.",
  "body": " Exercise 19:   ... in .    Our maps here are defined by the following diagram:   Diagram showing definitions of      To show in , we'll need to demonstrate that over the entire domain . We're given both and , so these are fairly trivial:        Since those are the only points we have, we can safely conclude that .   "
},
{
  "id": "example-75",
  "level": "2",
  "url": "article3-p3.html#example-75",
  "type": "Example",
  "number": "4.3.12",
  "title": "Exercise 20:.",
  "body": " Exercise 20:   ... is injective.    Since is only defined for two points, any and such that would directly imply that these two points are in fact the complete set . Since , it follows that so clearly .   "
},
{
  "id": "example-76",
  "level": "2",
  "url": "article3-p3.html#example-76",
  "type": "Example",
  "number": "4.3.13",
  "title": "Exercise 21:.",
  "body": " Exercise 21:   ... exactly two retractions .    Essentially, the retractions must contain the reversed arrows of , but that leaves two possible places for it to send the third point which didn't already have an origin defined:   Diagram showing possible retractions      For any retraction , we'd be forced to have and in order to have . As a map , needs to do something with the point and there are only two choices. Let's call them such that and .   "
},
{
  "id": "example-77",
  "level": "2",
  "url": "article3-p3.html#example-77",
  "type": "Example",
  "number": "4.3.15",
  "title": "Exercise 22:.",
  "body": " Exercise 22:   ... has no retraction in .    As in the previous exercise, our only possible retractions are and , depending on where they send . For to be a valid -map, it needs to have the property . We'll test each of our two possiblities for in turn.  For , we'd have and . Since , is not a valid -map.  For , we'd have and . Since , is not a valid -map.  Having exhausted both possible retractions of , we're forced to conlude that no retraction exists in .   "
},
{
  "id": "example-78",
  "level": "2",
  "url": "article3-p3.html#example-78",
  "type": "Example",
  "number": "4.3.16",
  "title": "Exercise 23:.",
  "body": " Exercise 23:   How many of the eight maps...    I'm going to start by sketching out the eight possible maps :   Grid of possible maps      In order for to be an -map, it needs to satisfy . Let's go through those maps again, but this time produce tables of those values for each of    Grid of possible maps      It appears that there are precisely two possible -maps. The one that sends everything to 0 and the one that sends everything to 0 but which it instead sends to . These two maps make sense when considering the behavior of the endomap which always returns 0.   "
},
{
  "id": "example-79",
  "level": "2",
  "url": "article3-p3.html#example-79",
  "type": "Example",
  "number": "4.3.19",
  "title": "Exercise 24:.",
  "body": " Exercise 24:   ...in the 'looser' category .    Let's diagram the insertion for our present maps:   Commutative square of maps for      Suppose is a retraction for in such that . We saw in Exercise 21 that there are precisely two possible maps could be. We know and . The only question was if or .  However, for to be a member of this category, it needs to satisfy the equation on the following commutative square:   Commutative square of maps for      In Exercise 23, our exhaustive search of maps revealed only two maps for which . However, neither of those maps match up with the only two possible retractions for . We're forced to conclude that can't exist a map meeting these conditions.   "
},
{
  "id": "article3-p4",
  "level": "1",
  "url": "article3-p4.html",
  "type": "Section",
  "number": "4.4",
  "title": "Article 3: Examples of Categories, Part 4",
  "body": " Article 3: Examples of Categories, Part 4  The end of the Article 3 is within sight! I'm starting to feel a little bit better about my solution to Exercise 14 earlier and I'm glad I explored some small permutations in advance of Exercise 26. Let's see if we can formalize a notion of loops to wrap up this Article.   Exercise 25:   Show that for any two graphs...    Given a -map between two graphs, we want to show can only be true when maps every arrow in to a loop in . Our external diagram is reproduced below:   Definition of -map      Thinking back to Exercises 9, the looping behavior of our endomap was based on the property that . I'm going to suggest that we can define an n-loop by the existence of endomap such that over some subspace with that many elements. Then each 1-loop would be a fixed point for the endomap and a 2-loop would be an antipodal endomap on two points.  So what would these loops look like here? An n-loop in would need to be some sequence of where .  I think the key to is that the equation is essentially identifying a fixed point where both the source and target of an arrow from wind up at the same point in after the transformation. Our category enforces that and , so it follows that this equation is equivalent to the expression . In other words, any for which would directly correspond with a loop such that .  Clearly, any self-loop in must get matched up with a self-loop in . If for any we have , it follows naturally that both and .  Suppose we have some arrow in satisfying but for which . This needs to map to an arrow which would need to satisfy the condition that . It follows that which forms another self-loop. So whether or not we start with a self-loop in , we must wind up with one in .  This result seems almost too simple. I was expecting to need to work with loops of varying lengths, but it turns out the 1-loops were the only ones I needed. I may need to come back to this later.     Exercise 26:   There is an 'inclusion' map...    I'm thinking that the map is the same as the one we used in Exercise 7. Previously we showed that \"multiplying by 5\" was not an invertable operation on the integers because the reverse operation of \"dividing by 5\" is not defined on the same domain. Now it looks like we're planning to sidestep that issue by inserting our map in instead.  Let's consider a trivial insertion of where we simply define . I guess more specifically, we assign each integer to the rational number . In order for this to be a valid -map, then we'd need to satisfy the equation . This follows directly from commutative property of multiplication: .  Since we've already established that we're working with an endomap on , to show that is an \"automorphism\" we just need to show it has an inverse. The inverse function would be given by the map . For any , we have . It follows that since is both an endomap and invertable, it meets the definition of an automorphism.  All that's left is to prove our map is injective . For any pair and such that , our choice of implies this statement is equivalent to .  Another way to think of this would be that is injective when it has a retraction . In this case, the map given by meets this condition. For any , so .     Exercise 27   Consider our standard idempotent...    Given the standard idempotent   Definition of standard idempotent      and an automorphism , we want to show any -map must be non-injective. Our \"hint\" is that the map must send both elements of to the same fixed point in .  It follows from the definition of -map that . However, is given as an automorphism which means it must have some inverse map such that . Apply this map to the left sides of our earlier expression to get .  Since there's literally only two elements in , let's call them and denote the behavior of by for . It follows from that is a \"fixed point\" in since . It also follows that returns the same fixed point. Having shown that for some , we've demonstrated that is non-injective.     Exercise 28:   If is any object of ...    Given that we have an injective map , it must also have some retraction such that . We're also given that is an automorphism, which guarantees it has an inverse .  We want to prove that itself must be injective. It suffices to show there exists a retraction . I'm going to claim that the map should have this desired property.  We can use this definition to expand the expression :   As a -map, we know :     And there we have it!     Exercise 29:  Every map in ...   There's an awful lot to unpack here so lets start with a category . We know we have some sets of objects or and maps which obey the identity and associative properties over the domain and codomain.  Over the course of the article, we've seen that there's a natural insertion of this map into the category . For each pair of object and such that , we can think of the map as a collection of \"arrows\" with a source at which we indicate and a target object at which we indicate .  From what I gather, our supplements this insertion with an arbitrary number of additional properties . Each individual property gets a corresponding map that returns the value of the property with that name. For any property map , we can either access this property before we apply the map or after . This provides natural defintion of preserving the structure of each property so that as follows:   Definition of structure preservation in .      Our -figures must satisfy these conditions for every property. If that's the case, then we can embed our -map representation of by treating our maps and as \"just another property\" in an -figure. Perhaps this might be diagrammed as follows:   Insertion of -map into .      The -structure would preserves the the source and targets of our map . Essentially, each map can be expressed as an -structure with two components if we let be our \"source\" map and be our \"target\" map.  I'm not entirely sure, but I think the existence of such an embedding would reasonably demonstrate this notion of \"giving rise to a map in the category\".    I know there's only one problem left here, but it's already Caturday and I want to give it the time it deserves. Until next time!  "
},
{
  "id": "example-80",
  "level": "2",
  "url": "article3-p4.html#example-80",
  "type": "Example",
  "number": "4.4.1",
  "title": "Exercise 25:.",
  "body": " Exercise 25:   Show that for any two graphs...    Given a -map between two graphs, we want to show can only be true when maps every arrow in to a loop in . Our external diagram is reproduced below:   Definition of -map      Thinking back to Exercises 9, the looping behavior of our endomap was based on the property that . I'm going to suggest that we can define an n-loop by the existence of endomap such that over some subspace with that many elements. Then each 1-loop would be a fixed point for the endomap and a 2-loop would be an antipodal endomap on two points.  So what would these loops look like here? An n-loop in would need to be some sequence of where .  I think the key to is that the equation is essentially identifying a fixed point where both the source and target of an arrow from wind up at the same point in after the transformation. Our category enforces that and , so it follows that this equation is equivalent to the expression . In other words, any for which would directly correspond with a loop such that .  Clearly, any self-loop in must get matched up with a self-loop in . If for any we have , it follows naturally that both and .  Suppose we have some arrow in satisfying but for which . This needs to map to an arrow which would need to satisfy the condition that . It follows that which forms another self-loop. So whether or not we start with a self-loop in , we must wind up with one in .  This result seems almost too simple. I was expecting to need to work with loops of varying lengths, but it turns out the 1-loops were the only ones I needed. I may need to come back to this later.   "
},
{
  "id": "example-81",
  "level": "2",
  "url": "article3-p4.html#example-81",
  "type": "Example",
  "number": "4.4.3",
  "title": "Exercise 26:.",
  "body": " Exercise 26:   There is an 'inclusion' map...    I'm thinking that the map is the same as the one we used in Exercise 7. Previously we showed that \"multiplying by 5\" was not an invertable operation on the integers because the reverse operation of \"dividing by 5\" is not defined on the same domain. Now it looks like we're planning to sidestep that issue by inserting our map in instead.  Let's consider a trivial insertion of where we simply define . I guess more specifically, we assign each integer to the rational number . In order for this to be a valid -map, then we'd need to satisfy the equation . This follows directly from commutative property of multiplication: .  Since we've already established that we're working with an endomap on , to show that is an \"automorphism\" we just need to show it has an inverse. The inverse function would be given by the map . For any , we have . It follows that since is both an endomap and invertable, it meets the definition of an automorphism.  All that's left is to prove our map is injective . For any pair and such that , our choice of implies this statement is equivalent to .  Another way to think of this would be that is injective when it has a retraction . In this case, the map given by meets this condition. For any , so .   "
},
{
  "id": "example-82",
  "level": "2",
  "url": "article3-p4.html#example-82",
  "type": "Example",
  "number": "4.4.4",
  "title": "Exercise 27.",
  "body": " Exercise 27   Consider our standard idempotent...    Given the standard idempotent   Definition of standard idempotent      and an automorphism , we want to show any -map must be non-injective. Our \"hint\" is that the map must send both elements of to the same fixed point in .  It follows from the definition of -map that . However, is given as an automorphism which means it must have some inverse map such that . Apply this map to the left sides of our earlier expression to get .  Since there's literally only two elements in , let's call them and denote the behavior of by for . It follows from that is a \"fixed point\" in since . It also follows that returns the same fixed point. Having shown that for some , we've demonstrated that is non-injective.   "
},
{
  "id": "example-83",
  "level": "2",
  "url": "article3-p4.html#example-83",
  "type": "Example",
  "number": "4.4.6",
  "title": "Exercise 28:.",
  "body": " Exercise 28:   If is any object of ...    Given that we have an injective map , it must also have some retraction such that . We're also given that is an automorphism, which guarantees it has an inverse .  We want to prove that itself must be injective. It suffices to show there exists a retraction . I'm going to claim that the map should have this desired property.  We can use this definition to expand the expression :   As a -map, we know :     And there we have it!   "
},
{
  "id": "example-84",
  "level": "2",
  "url": "article3-p4.html#example-84",
  "type": "Example",
  "number": "4.4.7",
  "title": "Exercise 29:.",
  "body": " Exercise 29:  Every map in ...   There's an awful lot to unpack here so lets start with a category . We know we have some sets of objects or and maps which obey the identity and associative properties over the domain and codomain.  Over the course of the article, we've seen that there's a natural insertion of this map into the category . For each pair of object and such that , we can think of the map as a collection of \"arrows\" with a source at which we indicate and a target object at which we indicate .  From what I gather, our supplements this insertion with an arbitrary number of additional properties . Each individual property gets a corresponding map that returns the value of the property with that name. For any property map , we can either access this property before we apply the map or after . This provides natural defintion of preserving the structure of each property so that as follows:   Definition of structure preservation in .      Our -figures must satisfy these conditions for every property. If that's the case, then we can embed our -map representation of by treating our maps and as \"just another property\" in an -figure. Perhaps this might be diagrammed as follows:   Insertion of -map into .      The -structure would preserves the the source and targets of our map . Essentially, each map can be expressed as an -structure with two components if we let be our \"source\" map and be our \"target\" map.  I'm not entirely sure, but I think the existence of such an embedding would reasonably demonstrate this notion of \"giving rise to a map in the category\".   "
},
{
  "id": "article3-p5",
  "level": "1",
  "url": "article3-p5.html",
  "type": "Section",
  "number": "4.5",
  "title": "Article 3: Examples of Categories, Part 5",
  "body": " Article 3: Examples of Categories, Part 5  Alright, last problem of the Article.   Exercise 30:   If is a given bipointed object...    There's a lot to unpack here. Let's start with the \"bipointed object\" in a category :   Definition of bipointed object.      Our goal is to demonstrate that \"the graph of ' fields' on is actually a reflexive graph\". Before I get there, I think I want to try to break down the \"tempature field\" situation to get my bearings.  My conventual notion of a \"tempature field\" would be like a map from some 3D-space such as describing the position to a 1D-line such as describing the temperature at each point in Kelvins. Or at least that's the basic idea that I'm trying to generalize. Maybe my space is the 2D image of a camera and my temperature line is an interval of temperatures it can detect.  I think this notion of a \"heat map\" produced by a digital camera is my best lead to go on. Years of programming have taught me to think of this as \"an array of bytes\". My input space is confined by the height and width of my image and my output space is limited by the precision of the image. Let's consider a super simple camera that only samples a 4x4 region and has only a 4 temperature resolution.   Trivial thermal camera as map      The key feature that strikes me about this image is that despite this map being non-invertable we still must have a 1-1 correspondance between points in with the \"arrows\" of the map. If we were able to \"step out\" of the map and look at it from a higher dimensional space we could think about the map as a collection of points with 3 component properties defined by some maps which describe the position and temperature .  It's incredible unlikely that our temperature alone is going to have an inverse map because neighboring points are likely to have similar temperatures. However, if we have two objects which match for the whole map-triple  such that , , and  that would necessarily imply that they're the same object .  By looking at my \"camera\" in the higher dimensional space I can think of it as an \"endomap\". There's only one detail which needs to be worked out, and that's the fact that my original map had 16 arrows to go with each of the \"dots\", we've now added in the 4 additional dots from our temperature space . For us to have a well-defined endmap, these dots would need to have arrows also. It seems natural that I'd want these new arrows to \"loop\".   Trivial thermal camera as endomap      Maybe it's not so much a question of if these arrows \"should\" loop because the properties of our category imply they \"must\" loop. The fact that any must preserve source and target for our bipointed object can be expressed as the equations and as per the the following commutative diagram.   Commutative diagram of source and target preservation      Our \"bipointed object\" contains 3 arrows, which I'll call , and 3 dots, which I'll call . Let's further specify that sources of our arrows are given by and , while the destinations are and .   Labeled bipointed object      What strikes me as special about our bipointed object here is that it provides a one-to-one correspondence between \"dots\" and \"arrows\". We know we can't have a retraction from to because there's no retraction from a 2-point space to a 1-point space, but we can start building a common section. Let's call this map and define it such that . The existence of this common section establishes that we have a reflexive graph . In Exercise 16, we proved that in a reflexive graph is both determined by and implies that there's an arrow forming a \"self-loop\" at each point.  Conceptually this makes sense for finite sets. If I know I have at least one arrow at each point, then I should be able to follow them. If I have some set of arrows and some set of dots describing a map , then there can't be more dots in the image of than there were arrows in the source space.  There's precisely one possible endomap on the space and that's the identity map. In order for some to preserve the structure of this endomap, we'd necessarily need to have . As a result of our category's structure preservation, it follows that which our result in Exercise 25 showed to imply that maps every arrow in to a loop in .  At this point I feel like I'm starting to talk myself in circles, so I'll take that a clue to move on to the next Session and hope that it helps clear up some of the details. I feel like I can at least see how the the preceeding Exercises were leading up to this problem, which gives me a bit of encouragement moving forward.    "
},
{
  "id": "example-85",
  "level": "2",
  "url": "article3-p5.html#example-85",
  "type": "Example",
  "number": "4.5.1",
  "title": "Exercise 30:.",
  "body": " Exercise 30:   If is a given bipointed object...    There's a lot to unpack here. Let's start with the \"bipointed object\" in a category :   Definition of bipointed object.      Our goal is to demonstrate that \"the graph of ' fields' on is actually a reflexive graph\". Before I get there, I think I want to try to break down the \"tempature field\" situation to get my bearings.  My conventual notion of a \"tempature field\" would be like a map from some 3D-space such as describing the position to a 1D-line such as describing the temperature at each point in Kelvins. Or at least that's the basic idea that I'm trying to generalize. Maybe my space is the 2D image of a camera and my temperature line is an interval of temperatures it can detect.  I think this notion of a \"heat map\" produced by a digital camera is my best lead to go on. Years of programming have taught me to think of this as \"an array of bytes\". My input space is confined by the height and width of my image and my output space is limited by the precision of the image. Let's consider a super simple camera that only samples a 4x4 region and has only a 4 temperature resolution.   Trivial thermal camera as map      The key feature that strikes me about this image is that despite this map being non-invertable we still must have a 1-1 correspondance between points in with the \"arrows\" of the map. If we were able to \"step out\" of the map and look at it from a higher dimensional space we could think about the map as a collection of points with 3 component properties defined by some maps which describe the position and temperature .  It's incredible unlikely that our temperature alone is going to have an inverse map because neighboring points are likely to have similar temperatures. However, if we have two objects which match for the whole map-triple  such that , , and  that would necessarily imply that they're the same object .  By looking at my \"camera\" in the higher dimensional space I can think of it as an \"endomap\". There's only one detail which needs to be worked out, and that's the fact that my original map had 16 arrows to go with each of the \"dots\", we've now added in the 4 additional dots from our temperature space . For us to have a well-defined endmap, these dots would need to have arrows also. It seems natural that I'd want these new arrows to \"loop\".   Trivial thermal camera as endomap      Maybe it's not so much a question of if these arrows \"should\" loop because the properties of our category imply they \"must\" loop. The fact that any must preserve source and target for our bipointed object can be expressed as the equations and as per the the following commutative diagram.   Commutative diagram of source and target preservation      Our \"bipointed object\" contains 3 arrows, which I'll call , and 3 dots, which I'll call . Let's further specify that sources of our arrows are given by and , while the destinations are and .   Labeled bipointed object      What strikes me as special about our bipointed object here is that it provides a one-to-one correspondence between \"dots\" and \"arrows\". We know we can't have a retraction from to because there's no retraction from a 2-point space to a 1-point space, but we can start building a common section. Let's call this map and define it such that . The existence of this common section establishes that we have a reflexive graph . In Exercise 16, we proved that in a reflexive graph is both determined by and implies that there's an arrow forming a \"self-loop\" at each point.  Conceptually this makes sense for finite sets. If I know I have at least one arrow at each point, then I should be able to follow them. If I have some set of arrows and some set of dots describing a map , then there can't be more dots in the image of than there were arrows in the source space.  There's precisely one possible endomap on the space and that's the identity map. In order for some to preserve the structure of this endomap, we'd necessarily need to have . As a result of our category's structure preservation, it follows that which our result in Exercise 25 showed to imply that maps every arrow in to a loop in .  At this point I feel like I'm starting to talk myself in circles, so I'll take that a clue to move on to the next Session and hope that it helps clear up some of the details. I feel like I can at least see how the the preceeding Exercises were leading up to this problem, which gives me a bit of encouragement moving forward.   "
},
{
  "id": "session11",
  "level": "1",
  "url": "session11.html",
  "type": "Section",
  "number": "4.6",
  "title": "Session 11: Ascending to categories of richer structures",
  "body": " Session 11: Ascending to categories of richer structures  I've finally reached the point marked by my old bookmark! I can kind of see why I got stuck here before and I'm defininately finding it convenient to have all my solutions to the previous exercises nicely organized. I find myself referring back to earlier problems to use as steps increasingly often.  In particular, I found myself seeing a lot of connections between this Sesssion and Sessions 9 and 10. I think I'm still a little uncertain about how to use the split idempotent result and it's relation to the fixed point theorem. While I made it through the section, I get this sneaking suspicion that I'm overlooking a more obvious solution to Exercise 8.  I also had this idea about \"counting arrows in and out\" that seemed extremely helpful this week but also very informal. I wonder if there's a way to formalize that approach a little better to determine whether or not graphs are isomorphic.   Exercise 1:   How many maps...    Let's start by replicating our diagram.   Provided diagram for Session 11 Exercise 1      It's clear from the diagram that the loop of 3 points in the source on could be matched up with a similar loop of 3 in the destination.   Matched up loops shown in dashed arrows      If we include any of the points outside the loop or attempt to alter the order the resulting map would fail to preserve the structure of our endomap. That means there are a total of 3 possible maps, each being a permutation of the loop.     Exercise 2:   Find an isomorphism...    I think there's a typo in the diagram here and it should really say instead of as so:   Given diagram for Session 11 Exercise 2      As in Exercise 1, I think we have exactly 3 isomorphisms here. If we choose a point of origin (say ) and a target point (say ) then the remaining assignments are determined by our endomaps. Once we assign some to some , we're forced to map to and to .  Since we're mapping each point in to a unique point in our map is \"1-1\". Since every value in is covered by some input in our map is \"onto\". Being both, it would be an isomorphism. All that remains it to show it preserves the structure of .  Knowing that is invertable, we can apply to the left and right of . This gives us which can be simplified to which demonstrates that is a valid -map.     Exercise 3:   Prove that there is no isomorphism...    We're given the following structures of domain and codomain:   Given diagram for Session 11 Exercise 3      Suppose we did have some isomorphism preserving the relation . We provided in the previous exercise that the inverse must also preserve structure, namely that satisfies . I felt it was helpful to view the relations as an external diagram:   External diagram of endomaps in Session 11 Exercise 3      If our isomorphism existed, the structure preserving equations provide alternative representations of the endomaps and . Apply to both sides of from both sides. On the left we get and the right we get . However, there's a problem with this. The map is idempotent with while the map is an automorphism with .  Since we can express in terms of using , then we can also express as . The associative property allows us to regroup these terms as . Using the identity property this simplifies to , but since we can further simplify to . However, this is a contradiction to our observation eariler that . It follows that our assumption about the existence of is false and no such map exists.  I think the key here is that an isomorphism between endomaps must preserve the number of paths into and out of each point. Consider the following labeled diagram with the number of arrows in and out at each point:   Labeled version of diagram for Session 11 Exercise 3      Note that is invertable so it needs to have precisely one arrow in and one arrow at each point. The map is clearly not invertable. There is no arrow leading into so it's not \"onto\" and the two leading into implies it's also not one-to-one. Consider the table of values:   Table of values for and                                        Note that our might vary depending on how we choose our map , but there are 4 distict values in the column for and only 3 distinct values in the column for . Even if were allowed to be non-invertable, there will never be any map that could possibly makes those two columns equal.     Exercise 4:   ... Show is automatically a map in .    I think I actually used this as part of my solution to Exercise 2. We're given in and know that \"as sets\" . We can take the structure preserving property of to establish , then apply before and after to get . Use the identity property to get which establishes as a valid -map.     Exercise 5:   ... Is ismorphic to ?...    We're given in and in . We want to find out if there's an isomorphism .  In order for this to preserve structure, we'd need . This is equivalent to saying that . Expanding our definitions of gives us .  I'm going to claim the map has this desired property. Making this substitution to both sides of our previous experession gives us and . Since both sides are equivalent, this preserves structure.  To establish that is invertable, we can define . Since and it follows that this is a valid inverse for . As in the previous exercise, it follows that applying on the left and right of gives us which establishes structure preservation for .  Having shown that the inverse exists and preserves structure I think we're done here.     Exercise 6:   Each of the following graphs is isomorphic...    I think there's an obvious solution that matches the top row with the bottom row from left to right. To verify this, I'm going to label the \"in\" and \"out\" counts at each point like I did in Exercise 3:   Labeled version of diagram for Session 11 Exercise 6      It's pretty clear that this is the only possible pairing of points that keeps the number of arrows in and out the same. Thus, our graph pairs are (a) with (d), (b) with (e) and (c) with (f).     Exercise 7:   If these two graphs are isomorphic...    My strategy of labeling counts of arrows in and out seems to be working well so far, so I'll apply it here also:   Labeled diagram for Session 11 Exercise 7      Labeling my counts in this way makes it clear that this diagram has been flipped vertically and shuffled arround a bit. Any isomorphism will need to map to and to to preserve the in\/out arrow counts at each point.  The remaining 3 points all have 1 arrow in and 1 arrow out. However, the left diagram has 2 paths leading up and 1 leading down while the right diagram has 2 paths leading down and 1 leading up. Knowing that we've flipped the diagram vertically, we'd need to match the path down in the left diagram with the path up it the right diagram pairing point with . The remaining two points from each figure can be matched up either way without altering the structure.  It follows that there are precisely 2 isomorphisms from to . Both maps necessirly have , , and . Where they differ is how they handle and : and while and .     Exercise 8:   (Impossible journeys) ...    We're given any graph with two dots , and the graph as diagrammed below:   Graph for Session 11 Exercise 8      For (a), we're given a map of graphs with and . We want to show that there is no path in G that begins at and ends at .  Since produces both points in it must be surjective, having a section such that . This map is determined by and . We can then use this map to build an endomap by composing and in the reverse order: . Note that and so has at least two fixed points. Further note that is idempotent since .  Suppose there was such a path from to in . We could think of this path as another \"endomap\" on some subset of the dots on our graph forming our \"path\". We can identify some with the propery that each application of map takes us one step along that path from to until we arrive and stay there. In otherwords, we have a sequence of points where is the number of nodes we traverse. We can also use this to define a reverse path by swapping the source and target of each arrow to produce an inverse map that traverses these points in the opposite order: . However, note that the arrows of might not necessarily exist in the original graph .  Consider what happens when we apply to these points in the path. For to preserve structure, we need to have . But since , we have which implies for all points in our path. In otherwords, any point accessible from must get mapped to .  I imagine this process to be something like \"coloring the graph\". We can start at point and paint it \"blue\", then follow each arrow leading out of and paint those points \"blue\" as well. At the same time, we can start at point and paint it \"red\" but this time we take the arrows with a target of and paint the point at the source \"red\". If we repeating the process as many times as we're able we'll eventually get a \"purple\" point or arrow if the paths do in fact connect.  To get a feel for this, let's try it with the example graph on the same page:   Sample graph to illustrate path coloring      Coloring the figure like this is a lot of work, but having done so makes it clear that there is no possible path between and in this diagram. The dashed arrows show edges that were neither transversed forward from nor backwards from . Both of these paths formed closed loops. We're unable to connect the two loops without an arrow with a red source and blue destination.  Consider the commutative diagram of our endomap on the subset of points forming our path . Since must preserve structure, we want for any endomap .   Commutative diagram of endomaps determined by      In this situation, there are only two possible endomaps that can exist using the arrows and dots from . Our map can either be the identity map or the standard idempotented with for any . Knowing that , consider what happens in each situation. If then implies which contradicts our assumption that . If , then implies for all which contradicts .  I see a lot of similarity here with the Brouwer's Theorems indroduced earlier. Essentially, by thinking of the path as an endomap we need to have a \"fixed point\" or we can't have a \"retraction at the boundary\".  For (b) we need to prove the converse. Suppose we have some path from to in . If we think of that path as an endomap as described above, then that endomap must have a fixed point *somewhere*. That point obviously can't be because contradicts our notion of a path. Likewise, it couldn't fix any along the path either, so the only reasonable fixed point would be . As before, would need to preserve the structure of both possible endomaps on . If then implies which contradicts . If , then that contradicts our condition that since but .  In other words, the existence of an intermediate point in this path prevents us from having a retraction at the boundary because we know there's we can't possibly have retraction to a map from a 3-point space to a two point space. It follows that the endomap describing our path must have a fixed point, but we can't have a fixed point in the path or we'll never reach our destination.    "
},
{
  "id": "example-86",
  "level": "2",
  "url": "session11.html#example-86",
  "type": "Example",
  "number": "4.6.1",
  "title": "Exercise 1:.",
  "body": " Exercise 1:   How many maps...    Let's start by replicating our diagram.   Provided diagram for Session 11 Exercise 1      It's clear from the diagram that the loop of 3 points in the source on could be matched up with a similar loop of 3 in the destination.   Matched up loops shown in dashed arrows      If we include any of the points outside the loop or attempt to alter the order the resulting map would fail to preserve the structure of our endomap. That means there are a total of 3 possible maps, each being a permutation of the loop.   "
},
{
  "id": "example-87",
  "level": "2",
  "url": "session11.html#example-87",
  "type": "Example",
  "number": "4.6.4",
  "title": "Exercise 2:.",
  "body": " Exercise 2:   Find an isomorphism...    I think there's a typo in the diagram here and it should really say instead of as so:   Given diagram for Session 11 Exercise 2      As in Exercise 1, I think we have exactly 3 isomorphisms here. If we choose a point of origin (say ) and a target point (say ) then the remaining assignments are determined by our endomaps. Once we assign some to some , we're forced to map to and to .  Since we're mapping each point in to a unique point in our map is \"1-1\". Since every value in is covered by some input in our map is \"onto\". Being both, it would be an isomorphism. All that remains it to show it preserves the structure of .  Knowing that is invertable, we can apply to the left and right of . This gives us which can be simplified to which demonstrates that is a valid -map.   "
},
{
  "id": "example-88",
  "level": "2",
  "url": "session11.html#example-88",
  "type": "Example",
  "number": "4.6.6",
  "title": "Exercise 3:.",
  "body": " Exercise 3:   Prove that there is no isomorphism...    We're given the following structures of domain and codomain:   Given diagram for Session 11 Exercise 3      Suppose we did have some isomorphism preserving the relation . We provided in the previous exercise that the inverse must also preserve structure, namely that satisfies . I felt it was helpful to view the relations as an external diagram:   External diagram of endomaps in Session 11 Exercise 3      If our isomorphism existed, the structure preserving equations provide alternative representations of the endomaps and . Apply to both sides of from both sides. On the left we get and the right we get . However, there's a problem with this. The map is idempotent with while the map is an automorphism with .  Since we can express in terms of using , then we can also express as . The associative property allows us to regroup these terms as . Using the identity property this simplifies to , but since we can further simplify to . However, this is a contradiction to our observation eariler that . It follows that our assumption about the existence of is false and no such map exists.  I think the key here is that an isomorphism between endomaps must preserve the number of paths into and out of each point. Consider the following labeled diagram with the number of arrows in and out at each point:   Labeled version of diagram for Session 11 Exercise 3      Note that is invertable so it needs to have precisely one arrow in and one arrow at each point. The map is clearly not invertable. There is no arrow leading into so it's not \"onto\" and the two leading into implies it's also not one-to-one. Consider the table of values:   Table of values for and                                        Note that our might vary depending on how we choose our map , but there are 4 distict values in the column for and only 3 distinct values in the column for . Even if were allowed to be non-invertable, there will never be any map that could possibly makes those two columns equal.   "
},
{
  "id": "example-89",
  "level": "2",
  "url": "session11.html#example-89",
  "type": "Example",
  "number": "4.6.11",
  "title": "Exercise 4:.",
  "body": " Exercise 4:   ... Show is automatically a map in .    I think I actually used this as part of my solution to Exercise 2. We're given in and know that \"as sets\" . We can take the structure preserving property of to establish , then apply before and after to get . Use the identity property to get which establishes as a valid -map.   "
},
{
  "id": "example-90",
  "level": "2",
  "url": "session11.html#example-90",
  "type": "Example",
  "number": "4.6.12",
  "title": "Exercise 5:.",
  "body": " Exercise 5:   ... Is ismorphic to ?...    We're given in and in . We want to find out if there's an isomorphism .  In order for this to preserve structure, we'd need . This is equivalent to saying that . Expanding our definitions of gives us .  I'm going to claim the map has this desired property. Making this substitution to both sides of our previous experession gives us and . Since both sides are equivalent, this preserves structure.  To establish that is invertable, we can define . Since and it follows that this is a valid inverse for . As in the previous exercise, it follows that applying on the left and right of gives us which establishes structure preservation for .  Having shown that the inverse exists and preserves structure I think we're done here.   "
},
{
  "id": "example-91",
  "level": "2",
  "url": "session11.html#example-91",
  "type": "Example",
  "number": "4.6.13",
  "title": "Exercise 6:.",
  "body": " Exercise 6:   Each of the following graphs is isomorphic...    I think there's an obvious solution that matches the top row with the bottom row from left to right. To verify this, I'm going to label the \"in\" and \"out\" counts at each point like I did in Exercise 3:   Labeled version of diagram for Session 11 Exercise 6      It's pretty clear that this is the only possible pairing of points that keeps the number of arrows in and out the same. Thus, our graph pairs are (a) with (d), (b) with (e) and (c) with (f).   "
},
{
  "id": "example-92",
  "level": "2",
  "url": "session11.html#example-92",
  "type": "Example",
  "number": "4.6.15",
  "title": "Exercise 7:.",
  "body": " Exercise 7:   If these two graphs are isomorphic...    My strategy of labeling counts of arrows in and out seems to be working well so far, so I'll apply it here also:   Labeled diagram for Session 11 Exercise 7      Labeling my counts in this way makes it clear that this diagram has been flipped vertically and shuffled arround a bit. Any isomorphism will need to map to and to to preserve the in\/out arrow counts at each point.  The remaining 3 points all have 1 arrow in and 1 arrow out. However, the left diagram has 2 paths leading up and 1 leading down while the right diagram has 2 paths leading down and 1 leading up. Knowing that we've flipped the diagram vertically, we'd need to match the path down in the left diagram with the path up it the right diagram pairing point with . The remaining two points from each figure can be matched up either way without altering the structure.  It follows that there are precisely 2 isomorphisms from to . Both maps necessirly have , , and . Where they differ is how they handle and : and while and .   "
},
{
  "id": "example-93",
  "level": "2",
  "url": "session11.html#example-93",
  "type": "Example",
  "number": "4.6.17",
  "title": "Exercise 8:.",
  "body": " Exercise 8:   (Impossible journeys) ...    We're given any graph with two dots , and the graph as diagrammed below:   Graph for Session 11 Exercise 8      For (a), we're given a map of graphs with and . We want to show that there is no path in G that begins at and ends at .  Since produces both points in it must be surjective, having a section such that . This map is determined by and . We can then use this map to build an endomap by composing and in the reverse order: . Note that and so has at least two fixed points. Further note that is idempotent since .  Suppose there was such a path from to in . We could think of this path as another \"endomap\" on some subset of the dots on our graph forming our \"path\". We can identify some with the propery that each application of map takes us one step along that path from to until we arrive and stay there. In otherwords, we have a sequence of points where is the number of nodes we traverse. We can also use this to define a reverse path by swapping the source and target of each arrow to produce an inverse map that traverses these points in the opposite order: . However, note that the arrows of might not necessarily exist in the original graph .  Consider what happens when we apply to these points in the path. For to preserve structure, we need to have . But since , we have which implies for all points in our path. In otherwords, any point accessible from must get mapped to .  I imagine this process to be something like \"coloring the graph\". We can start at point and paint it \"blue\", then follow each arrow leading out of and paint those points \"blue\" as well. At the same time, we can start at point and paint it \"red\" but this time we take the arrows with a target of and paint the point at the source \"red\". If we repeating the process as many times as we're able we'll eventually get a \"purple\" point or arrow if the paths do in fact connect.  To get a feel for this, let's try it with the example graph on the same page:   Sample graph to illustrate path coloring      Coloring the figure like this is a lot of work, but having done so makes it clear that there is no possible path between and in this diagram. The dashed arrows show edges that were neither transversed forward from nor backwards from . Both of these paths formed closed loops. We're unable to connect the two loops without an arrow with a red source and blue destination.  Consider the commutative diagram of our endomap on the subset of points forming our path . Since must preserve structure, we want for any endomap .   Commutative diagram of endomaps determined by      In this situation, there are only two possible endomaps that can exist using the arrows and dots from . Our map can either be the identity map or the standard idempotented with for any . Knowing that , consider what happens in each situation. If then implies which contradicts our assumption that . If , then implies for all which contradicts .  I see a lot of similarity here with the Brouwer's Theorems indroduced earlier. Essentially, by thinking of the path as an endomap we need to have a \"fixed point\" or we can't have a \"retraction at the boundary\".  For (b) we need to prove the converse. Suppose we have some path from to in . If we think of that path as an endomap as described above, then that endomap must have a fixed point *somewhere*. That point obviously can't be because contradicts our notion of a path. Likewise, it couldn't fix any along the path either, so the only reasonable fixed point would be . As before, would need to preserve the structure of both possible endomaps on . If then implies which contradicts . If , then that contradicts our condition that since but .  In other words, the existence of an intermediate point in this path prevents us from having a retraction at the boundary because we know there's we can't possibly have retraction to a map from a 3-point space to a two point space. It follows that the endomap describing our path must have a fixed point, but we can't have a fixed point in the path or we'll never reach our destination.   "
},
{
  "id": "session12",
  "level": "1",
  "url": "session12.html",
  "type": "Section",
  "number": "4.7",
  "title": "Session 12: Categories of Diagrams",
  "body": " Session 12: Categories of Diagrams  I thought that the Session following my bookmark was going to be difficult, but this was actually a relatively easy reading this week. I'm enjoying the sessions written in this style where the association between the abstract representations and the practical uses are laid out in an imaginary classroom. It makes me feel like I'm a part of collective effort to understand this.   Exercise 1:   Suppose that ...    We're given that is a map in , which tells us that . If we know that we have some , we could sketch the external diagram as follows:   Commutative diagram of over      Knowing that and for some , we can establish that through the associative property:       Thus, .     Exercise 2:   'With age comes stability'...    Rather than just replicating the entire diagram here, I'll just focus on the relevant \"clusters\". Let's start with the set of points connected to . The pre-periodic behavior will be dashed while the periodic behavior solid black. Grey will denote paths not taken.   Observed behavior of      This endomap takes one step after then becomes periodic with a cycle length of 3 steps.  Next, let's isolate .   Observed behavior of      Beginning at point , we take 3 steps before reaching a fixed point.  Finally, let's sketch the hypthotical enodmap of a light switch that could only be lit four times.  I'm going to suggest that the first state be called . The first time we flip the switch, we'd get . Then we alternate between \"off\" and \"on\", until we have a set of 4 \"on\" states: . Following that final on, we reach a terminal state that is perpetually \"off\". Putting the whole thing together might look something like this:   Observed behavior of      The only thing that strikes me as being tricky about this was that my \"off\" and \"on\" states had to be different for each time the light was switched. Even though looking at the light buld you'd only see whether the light was on or off, there needs to be an internal state to the light bulb that tracks how many times it's been used.     Exercise 3:   ...Suppose ...    In part (a) our task is to \"[s]how that 'gender' is a map in the category from to the object [defined as below]\":   Object for Session 12 Exercise 3      Here the maps and are meant to represent \"father\" and \"mother\" relationships. Obviously \"real gender\" is more complex than this, but we'll roll with it.  We'll start by identifying our checklist for the category:    A category has objects .    A category has maps .    For each map, there is one object representing the domain and one object representing the codomain .    For any pair of maps we can form a composite map .    The category upholds the identity laws . If , then and .    The category upholds the associative law : if then .    Well, we have some objects. These include the people and properties we're looking at. We also have some maps that relate our people and and properties with each other. We're particularly concerned with a 'gender' map I'll call which takes a person and returns a gender.  We also have objects representing the domain and codomain of our map . The domain is the set of all people and the codomain is the set of genders . We'll also have two identity maps and which can satisfy .  For us to define a composition of maps, let's first identify the structures we want to preserve. Our \"people space\" came equipped with two endomaps and that take a person and return the person's \"mother\" or \"father\" respectively.  This object does something interesting here by defining it's own version of those endomaps . These maps operate on genders rather than people , but defining them this way allows us to preserve the structure. Perhaps it might be clearer if denote them separately. Let's call the endomaps on people and the endomaps on genders. We could compose maps to form the following commutative diagram:   Commutative diagram for      In order to maintain our structure, we'd want to have both and . Fortunately, and are basically constants in . For any given person (in this model), we could potentially have or , but if we compose with our endomaps we get fixed points. For any person , we can expect that their mother is female (both and ) and father is male (both and ).  I'm thinking that central idea of part (a) is to define a map in as a map satisfying the pair of equations and .  Given some other map in , with we'd need to show that our composition is also a valid -map. This should follow directly from the associative property and our structure preserving equations:    The last thing we need to verify is the associative property. Given a third map in , with , we want to show . I'm pretty sure we get this for free as being objects in the category of sets.  For part (b), we expand our structure with a \"clan\" object defined as follows:   Object for Session 12 Exercise 3      Like before, we'd want our structure to be preserved. Given a map , we'd want to enforce the conditions that and .  Since \"a child's clan is the same as that of [their] mother\", it follows that for any person we'd have . As a result, our condition that is satisfied by making .  Since \"[m]arriages with clans are forbidden\", it follows that for any person we'd have . However, we already know so it follows that . Since there's only two elements in it follows that needs the antipodal map so that .  In the last part (c), we attempt to combine \"gender\" and \"clan\" to make a cartesian product: . Essentially, there are four possible combinations of clan and gender: he-wolf, she-wolf, he-bear, and she-bear. We'll examine each in turn.  For a \"he-wolf\", his mother needs to be a \"she-wolf\" and father a \"he-bear\". For a \"she-wolf\", her mother needs to be a \"she-wolf and father a \"he-bear\". For a \"he-bear\", his mother needs to be a \"she-bear\" and father a \"he-wolf\". For a \"she-bear\", her mother needs to be a \"she-bear\" and father a \"he-wolf\".  Since we assign a \"mother arrow\" and a \"father arrow\" for each point, we can draw an endomap diagram representing the relations:   Endomaps and on       To verify that this is a valid -map, we'll examine if the structure preservation properties hold.   Break down of gender-clan compositions           he-wolf  she-wolf  he-bear  she-wolf  he-bear    she-wolf  she-wolf  he-bear  she-wolf  he-bear    he-bear  she-bear  he-wolf  she-bear  he-wolf    she-bear  she-bear  he-wolf  she-bear  he-wolf     I'm not sure if there's much else I need to do here since we inherent the rest of our needed properties from .    "
},
{
  "id": "example-94",
  "level": "2",
  "url": "session12.html#example-94",
  "type": "Example",
  "number": "4.7.1",
  "title": "Exercise 1:.",
  "body": " Exercise 1:   Suppose that ...    We're given that is a map in , which tells us that . If we know that we have some , we could sketch the external diagram as follows:   Commutative diagram of over      Knowing that and for some , we can establish that through the associative property:       Thus, .   "
},
{
  "id": "example-95",
  "level": "2",
  "url": "session12.html#example-95",
  "type": "Example",
  "number": "4.7.3",
  "title": "Exercise 2:.",
  "body": " Exercise 2:   'With age comes stability'...    Rather than just replicating the entire diagram here, I'll just focus on the relevant \"clusters\". Let's start with the set of points connected to . The pre-periodic behavior will be dashed while the periodic behavior solid black. Grey will denote paths not taken.   Observed behavior of      This endomap takes one step after then becomes periodic with a cycle length of 3 steps.  Next, let's isolate .   Observed behavior of      Beginning at point , we take 3 steps before reaching a fixed point.  Finally, let's sketch the hypthotical enodmap of a light switch that could only be lit four times.  I'm going to suggest that the first state be called . The first time we flip the switch, we'd get . Then we alternate between \"off\" and \"on\", until we have a set of 4 \"on\" states: . Following that final on, we reach a terminal state that is perpetually \"off\". Putting the whole thing together might look something like this:   Observed behavior of      The only thing that strikes me as being tricky about this was that my \"off\" and \"on\" states had to be different for each time the light was switched. Even though looking at the light buld you'd only see whether the light was on or off, there needs to be an internal state to the light bulb that tracks how many times it's been used.   "
},
{
  "id": "example-96",
  "level": "2",
  "url": "session12.html#example-96",
  "type": "Example",
  "number": "4.7.7",
  "title": "Exercise 3:.",
  "body": " Exercise 3:   ...Suppose ...    In part (a) our task is to \"[s]how that 'gender' is a map in the category from to the object [defined as below]\":   Object for Session 12 Exercise 3      Here the maps and are meant to represent \"father\" and \"mother\" relationships. Obviously \"real gender\" is more complex than this, but we'll roll with it.  We'll start by identifying our checklist for the category:    A category has objects .    A category has maps .    For each map, there is one object representing the domain and one object representing the codomain .    For any pair of maps we can form a composite map .    The category upholds the identity laws . If , then and .    The category upholds the associative law : if then .    Well, we have some objects. These include the people and properties we're looking at. We also have some maps that relate our people and and properties with each other. We're particularly concerned with a 'gender' map I'll call which takes a person and returns a gender.  We also have objects representing the domain and codomain of our map . The domain is the set of all people and the codomain is the set of genders . We'll also have two identity maps and which can satisfy .  For us to define a composition of maps, let's first identify the structures we want to preserve. Our \"people space\" came equipped with two endomaps and that take a person and return the person's \"mother\" or \"father\" respectively.  This object does something interesting here by defining it's own version of those endomaps . These maps operate on genders rather than people , but defining them this way allows us to preserve the structure. Perhaps it might be clearer if denote them separately. Let's call the endomaps on people and the endomaps on genders. We could compose maps to form the following commutative diagram:   Commutative diagram for      In order to maintain our structure, we'd want to have both and . Fortunately, and are basically constants in . For any given person (in this model), we could potentially have or , but if we compose with our endomaps we get fixed points. For any person , we can expect that their mother is female (both and ) and father is male (both and ).  I'm thinking that central idea of part (a) is to define a map in as a map satisfying the pair of equations and .  Given some other map in , with we'd need to show that our composition is also a valid -map. This should follow directly from the associative property and our structure preserving equations:    The last thing we need to verify is the associative property. Given a third map in , with , we want to show . I'm pretty sure we get this for free as being objects in the category of sets.  For part (b), we expand our structure with a \"clan\" object defined as follows:   Object for Session 12 Exercise 3      Like before, we'd want our structure to be preserved. Given a map , we'd want to enforce the conditions that and .  Since \"a child's clan is the same as that of [their] mother\", it follows that for any person we'd have . As a result, our condition that is satisfied by making .  Since \"[m]arriages with clans are forbidden\", it follows that for any person we'd have . However, we already know so it follows that . Since there's only two elements in it follows that needs the antipodal map so that .  In the last part (c), we attempt to combine \"gender\" and \"clan\" to make a cartesian product: . Essentially, there are four possible combinations of clan and gender: he-wolf, she-wolf, he-bear, and she-bear. We'll examine each in turn.  For a \"he-wolf\", his mother needs to be a \"she-wolf\" and father a \"he-bear\". For a \"she-wolf\", her mother needs to be a \"she-wolf and father a \"he-bear\". For a \"he-bear\", his mother needs to be a \"she-bear\" and father a \"he-wolf\". For a \"she-bear\", her mother needs to be a \"she-bear\" and father a \"he-wolf\".  Since we assign a \"mother arrow\" and a \"father arrow\" for each point, we can draw an endomap diagram representing the relations:   Endomaps and on       To verify that this is a valid -map, we'll examine if the structure preservation properties hold.   Break down of gender-clan compositions           he-wolf  she-wolf  he-bear  she-wolf  he-bear    she-wolf  she-wolf  he-bear  she-wolf  he-bear    he-bear  she-bear  he-wolf  she-bear  he-wolf    she-bear  she-bear  he-wolf  she-bear  he-wolf     I'm not sure if there's much else I need to do here since we inherent the rest of our needed properties from .   "
},
{
  "id": "session13",
  "level": "1",
  "url": "session13.html",
  "type": "Section",
  "number": "4.8",
  "title": "Session 13: Monoids",
  "body": " Session 13: Monoids  I finally learned what a monoid is! I feel like a whole new collection of math memes just opened up for me. As an added bonus, there were no exercises this week! Rather than coming up with something of my own to do, I'm planning to use this opportunity to just reflect on the definitions for a week. There seemed to be some close parallels betweeen this session and Peano's axioms, but I think I'm just going to wait to see how the authors decide to develop things further.  "
},
{
  "id": "session14",
  "level": "1",
  "url": "session14.html",
  "type": "Section",
  "number": "4.9",
  "title": "Session 14: Maps preserve positive properties",
  "body": " Session 14: Maps preserve positive properties  The authors include some of these solutions in the reading, but I'm going to try to work them all out on my own. Just because.    Exercise 1:   Let and be two points of ...    Given that and , we can apply on the left of both sides to get and . Since the structure preservation property enforces , we can subsitute into our expressions to get and . If , it follows directly that .     Exercise 2:   If instead we know that ...    Like before, if can apply on the left of and to get and . We can expand the whole thing out and apply a repeated subsitution using .        Thus and . If , then .     Exercise 3:   If ...    Knowing , just apply on the left of both sides to get . It follows that is also a 'fixed point'.     Exercise 4:   Give an example in which...    Since we're given a \"hint\" let's use it. Consider and . Our only possible map has the following diagram:   Only possible map      Here the point has the desired properties. Since , is not a fixed point in . However, and is a fixed point of . These fixed points are a \"one-way\" relationship. Since is fixed in then must be fixed in , but just because is fixed in doesn't mean is fixed in .     Exercise 5:   Show that if ...    Based on what we've seen so far, I'm thinking that these properties might be satisfied by the following map :   Map from a 4-cycle to a 2-cycle      Essentially, I'm taking the 4-cycle and splitting it in half. Perhaps the best way to illustrate that we get the desired properties is with a table:   Validation table for Session 14 Exercise 5                                        Since the last columns are equal, we know this is a valid -map. For each point in , . For each point in , . However, implies that .  I can imagine that this leads into some divisibility rules for cycles. I was only able to shrink the cycle here because 4 is evenly divisible by 2. If two cycles are relatively prime in lengths, the only cycle we'd be able to map them to (and still preserve our structure) is a \"fixed point\".    "
},
{
  "id": "example-97",
  "level": "2",
  "url": "session14.html#example-97",
  "type": "Example",
  "number": "4.9.1",
  "title": "Exercise 1:.",
  "body": " Exercise 1:   Let and be two points of ...    Given that and , we can apply on the left of both sides to get and . Since the structure preservation property enforces , we can subsitute into our expressions to get and . If , it follows directly that .   "
},
{
  "id": "example-98",
  "level": "2",
  "url": "session14.html#example-98",
  "type": "Example",
  "number": "4.9.2",
  "title": "Exercise 2:.",
  "body": " Exercise 2:   If instead we know that ...    Like before, if can apply on the left of and to get and . We can expand the whole thing out and apply a repeated subsitution using .        Thus and . If , then .   "
},
{
  "id": "example-99",
  "level": "2",
  "url": "session14.html#example-99",
  "type": "Example",
  "number": "4.9.3",
  "title": "Exercise 3:.",
  "body": " Exercise 3:   If ...    Knowing , just apply on the left of both sides to get . It follows that is also a 'fixed point'.   "
},
{
  "id": "example-100",
  "level": "2",
  "url": "session14.html#example-100",
  "type": "Example",
  "number": "4.9.4",
  "title": "Exercise 4:.",
  "body": " Exercise 4:   Give an example in which...    Since we're given a \"hint\" let's use it. Consider and . Our only possible map has the following diagram:   Only possible map      Here the point has the desired properties. Since , is not a fixed point in . However, and is a fixed point of . These fixed points are a \"one-way\" relationship. Since is fixed in then must be fixed in , but just because is fixed in doesn't mean is fixed in .   "
},
{
  "id": "example-101",
  "level": "2",
  "url": "session14.html#example-101",
  "type": "Example",
  "number": "4.9.6",
  "title": "Exercise 5:.",
  "body": " Exercise 5:   Show that if ...    Based on what we've seen so far, I'm thinking that these properties might be satisfied by the following map :   Map from a 4-cycle to a 2-cycle      Essentially, I'm taking the 4-cycle and splitting it in half. Perhaps the best way to illustrate that we get the desired properties is with a table:   Validation table for Session 14 Exercise 5                                        Since the last columns are equal, we know this is a valid -map. For each point in , . For each point in , . However, implies that .  I can imagine that this leads into some divisibility rules for cycles. I was only able to shrink the cycle here because 4 is evenly divisible by 2. If two cycles are relatively prime in lengths, the only cycle we'd be able to map them to (and still preserve our structure) is a \"fixed point\".   "
},
{
  "id": "session15",
  "level": "1",
  "url": "session15.html",
  "type": "Section",
  "number": "4.10",
  "title": "Session 15: Objectification of Properties",
  "body": " Session 15: Objectification of Properties  This week was an interesting development. Up until this point we've only been using numbers as a playground for exploring ideas. Now that monoids have allowed us to build a formalization of natural numbers in the category of endomaps, we've opened up a whole new means of analyzing maps.  My prediction about cycle lenths and divisibility was spot on. It was nice to have confirmation that I'm on the right track. I also found the definition of was rather intriguing. I can see this having applications to things like \"floating point\" numbers where treating infinity as a number has advantages. In fact, a lot of idea from throughout the text seem to be coming together. Slowly .   Exercise 1:   ...both period 5 and period 7...    Suppose we have some element with . Our associative property implies . However, is just so it follows that . And if that's the case, then we can also represent as either or .  In the former case, implies . In the latter, implies . Since both are equivalent to , we have established that which proves is a fixed point.     Exercise 2:   ...all maps from to ...    In order to preserve structure, the arrows need to flow in the same direction. Any map that preserve the structure of the loop. That is, whatever point we decide to send to in the cycle determines where we need to send . Once we hit we need to loop back to .  These 4 possible permutations are diagrammed below:   All maps from to         Exercise 3:   ... evaluation at 0 and iteration ...    I'm not exactly what this exercise is asking, so let's start by laying out the context.   Iteration and evaluation defined      We're told that \"'Iteration' assigns to each in the map given by \".  I think my confusion here is stemming from a little uncertainty about the domain and codomain of . The diagram I recreated above suggests that is a map , but part of me thinks I should treat as an abitrary map in the context of a broader category of . Part of me is wondering if our definition of as a monoid circumvents this question entirely by defining as an element of with the desired property in : a point that is the origin of an arrow but not a target.  In some of the earlier Sessions, I found it helpful to think about the \"image\" produced by a given map. Once we have a point we can ask whether or not produces a fixed point. This is a binary question for which the answer either needs to be \"true\" or \"false\". Let's call this space with the conventions if and if . Let's define this map as .  Obviously such map exists between sets, but the real question is whether or not  preserves structure within our category. There are precisely 4 possible endomaps on we could possibly have: an identity map, an antipodal map, and two idempotents resulting in respectively. This allows us to ask further questions, like if is has a retraction . Of the four possible endomaps on , only the identity map and the antipodal map would even qualify because we know there's no possible retraction from .  This is all still really fuzzy and I feel like I'm missing something, so I think I'm going to let this information stew for another week and come back to it..    "
},
{
  "id": "example-102",
  "level": "2",
  "url": "session15.html#example-102",
  "type": "Example",
  "number": "4.10.1",
  "title": "Exercise 1:.",
  "body": " Exercise 1:   ...both period 5 and period 7...    Suppose we have some element with . Our associative property implies . However, is just so it follows that . And if that's the case, then we can also represent as either or .  In the former case, implies . In the latter, implies . Since both are equivalent to , we have established that which proves is a fixed point.   "
},
{
  "id": "example-103",
  "level": "2",
  "url": "session15.html#example-103",
  "type": "Example",
  "number": "4.10.2",
  "title": "Exercise 2:.",
  "body": " Exercise 2:   ...all maps from to ...    In order to preserve structure, the arrows need to flow in the same direction. Any map that preserve the structure of the loop. That is, whatever point we decide to send to in the cycle determines where we need to send . Once we hit we need to loop back to .  These 4 possible permutations are diagrammed below:   All maps from to       "
},
{
  "id": "example-104",
  "level": "2",
  "url": "session15.html#example-104",
  "type": "Example",
  "number": "4.10.4",
  "title": "Exercise 3:.",
  "body": " Exercise 3:   ... evaluation at 0 and iteration ...    I'm not exactly what this exercise is asking, so let's start by laying out the context.   Iteration and evaluation defined      We're told that \"'Iteration' assigns to each in the map given by \".  I think my confusion here is stemming from a little uncertainty about the domain and codomain of . The diagram I recreated above suggests that is a map , but part of me thinks I should treat as an abitrary map in the context of a broader category of . Part of me is wondering if our definition of as a monoid circumvents this question entirely by defining as an element of with the desired property in : a point that is the origin of an arrow but not a target.  In some of the earlier Sessions, I found it helpful to think about the \"image\" produced by a given map. Once we have a point we can ask whether or not produces a fixed point. This is a binary question for which the answer either needs to be \"true\" or \"false\". Let's call this space with the conventions if and if . Let's define this map as .  Obviously such map exists between sets, but the real question is whether or not  preserves structure within our category. There are precisely 4 possible endomaps on we could possibly have: an identity map, an antipodal map, and two idempotents resulting in respectively. This allows us to ask further questions, like if is has a retraction . Of the four possible endomaps on , only the identity map and the antipodal map would even qualify because we know there's no possible retraction from .  This is all still really fuzzy and I feel like I'm missing something, so I think I'm going to let this information stew for another week and come back to it..   "
},
{
  "id": "session15-p2",
  "level": "1",
  "url": "session15-p2.html",
  "type": "Section",
  "number": "4.11",
  "title": "Session 15: Objectification of Properties, Part 2",
  "body": " Session 15: Objectification of Properties, Part 2  Okay, I spent a lot more time on Exercise 3 over the past week, but I think I'm starting to understand a little better. If I manage to make it through this problem this week, I'll take that as a win!   Exercise 3: (continued)   ... evaluation at 0 and iteration ...    I want to start this time by stepping back and look and assign some new names to the entities from the diagram I recreated last time.   Naming objects in \"Iteration and evaluation defined\"      My reasoning here is that labeling my objects like this will make it a little more clear on what exactly it would mean for our maps to be inverses. Given the naming used above, I'd need to prove and . What makes this tricky is that the objects in are -maps that preserve the structure from and the objects in are maps in from that don't necessarily preserve any structure.  Perhaps what I should be doing is thinking of the maps as a collection of arrows. Each arrow needs to have a source point in and a target point in . For to preserve structure, we'd need to have for every in .  Our map , basically takes advantage of the fact that any map in must be defined over the whole domain. This means that there must be an arrow originating at the point pointing to some target point in . We can then define such that for any we can define to be the map in which maps the only element in to the point in .  In contrast, our map takes a map and uses it to produce a map in . It does this by applying to zero or more times, such that for any . In the case where , the map is never applied at all. It follows that for any in , we're guaranteed to have .  These two maps both produce maps, but handle structure differently. The map takes a map which preserves the structure and uses it to produce a map which might not. The map takes a map which may not preserve structure and produces one that does. The identity basically establishes that in , but I think we still need to establish that the map is valid in .  For any given , the map needs to satisfy for every . At , and . Since holds true for , we can use induction to establish that they must be the same for every 'successor'.  Since each can be represented as , we can use that to make a subsitution. If follows that and . It also follows that and . Since we know that , we can combine these two results to establish that . Having established that and , follows by induction.  Next, let's compose these maps in the reverse order to produce the map . Suppose we have some in . It follows from our definitions that that which would imply that . Having now established that both and , it's safe to refer to these two maps as inverses.  Q.E.D.    "
},
{
  "id": "example-105",
  "level": "2",
  "url": "session15-p2.html#example-105",
  "type": "Example",
  "number": "4.11.1",
  "title": "Exercise 3: (continued).",
  "body": " Exercise 3: (continued)   ... evaluation at 0 and iteration ...    I want to start this time by stepping back and look and assign some new names to the entities from the diagram I recreated last time.   Naming objects in \"Iteration and evaluation defined\"      My reasoning here is that labeling my objects like this will make it a little more clear on what exactly it would mean for our maps to be inverses. Given the naming used above, I'd need to prove and . What makes this tricky is that the objects in are -maps that preserve the structure from and the objects in are maps in from that don't necessarily preserve any structure.  Perhaps what I should be doing is thinking of the maps as a collection of arrows. Each arrow needs to have a source point in and a target point in . For to preserve structure, we'd need to have for every in .  Our map , basically takes advantage of the fact that any map in must be defined over the whole domain. This means that there must be an arrow originating at the point pointing to some target point in . We can then define such that for any we can define to be the map in which maps the only element in to the point in .  In contrast, our map takes a map and uses it to produce a map in . It does this by applying to zero or more times, such that for any . In the case where , the map is never applied at all. It follows that for any in , we're guaranteed to have .  These two maps both produce maps, but handle structure differently. The map takes a map which preserves the structure and uses it to produce a map which might not. The map takes a map which may not preserve structure and produces one that does. The identity basically establishes that in , but I think we still need to establish that the map is valid in .  For any given , the map needs to satisfy for every . At , and . Since holds true for , we can use induction to establish that they must be the same for every 'successor'.  Since each can be represented as , we can use that to make a subsitution. If follows that and . It also follows that and . Since we know that , we can combine these two results to establish that . Having established that and , follows by induction.  Next, let's compose these maps in the reverse order to produce the map . Suppose we have some in . It follows from our definitions that that which would imply that . Having now established that both and , it's safe to refer to these two maps as inverses.  Q.E.D.   "
},
{
  "id": "session15-p3",
  "level": "1",
  "url": "session15-p3.html",
  "type": "Section",
  "number": "4.12",
  "title": "Session 15: Objectification of Properties, Part 3",
  "body": " Session 15: Objectification of Properties, Part 3  I made some more progess on Session 15 this week, but there's still much more work to be done. In some ways, my progress through the text seems to parallel the algorithm for finding a presentation of . Each section of the text is kind of like a 'generator' element. The only way for me to find out how many parts Session 15 will take is for me to keep working on it until it reaches a stable point.   Exercise 4:   ... is itself a map of dynamical systems...    We've defined the category of based on the quality of structure preservation such that for an arbitrary map we enforce the condition that . For this exercise, we're essentially considering the special case where and .  We know that is an endomap on , so we know is a valid map in . To prove that we have a well defined map we'll need to show our structure preservation property still holds. If we substitute into , we get which is obviously true.  It really feels like this is stating the obvious, but perhaps we never explicitly proved that -maps must satisfy this \"reflexive property\".     Exercise 5:   ..if corresponds to ...    I'm assuming we're using the same set-up as Exercise 3 here. Given , we know . In particular, this must be true for , establishing that . We then used induction to establish that for all .  In Exercise 4, we proved that for any , the map is itself a well defined map . It follows that defines a map . Since compositions of -maps produce -maps, our composition should be well defined map such that .  When they say \" corresponds to \", we mean that we can evaluate at 0 to get or iterate from to get using . For , we can easily evaluate to establish . However, we still need to show that .  As in Exercise 3, I think we can do this through induction. We've already established that , so we know that for . Consider the case of . Given , we can rewrite as . Subsitute to get which can be rewritten as by the associative property. This means that implies .  Having established that both and , we can use induction to establish that for the entire domain of .     Exercise 6:   ...gender map     We're provided the following diagram for :   Definition of      Here the set is the set of people, the operator is a map that returns the mother of specified person, and is the gender binary map specified above. In order to show is an , we need to establish that it is both a valid map in and upholds the structure of the endomap .  First of all, let's address the reality that this is toy model of gender. In this exercise we're implicitly assuming  is a valid -map. We're excluding the existence of non-binary people in this way. We're also assuming that we have a mother -map, , that's defined for all . This model breaks if we \"clone\" a male, effectively excluding Stormtroopers from our set of people.  There's also some ambiguity because we haven't yet named the endomap on yet. I think the reason is because the endomap on is induced by the maps and . For clarity's sake, let's define to be the corresponding endomap in the \"gender-binary space\". This map is based on an assumption that the answer to \"what gender is your mother?\" will always \"female\".  Under those contraints on , showing is an valid -map basically comes down to establishing the relation . Perhaps this is most easily shown in a table.   Table of values for gender map           \"son\"  male  \"mother\"  female  female    \"daughter\"  female  \"mother\"  female  female     Essentially, both and are constant maps. We know because we've defined them both so that they both always return \"female\". In order for us to have an \" objectification in the subjective of gender\", all we have to do is to start excluding the people that don't fit our model!  I guess the lesson here is that if you ask a \"yes\/no\" question you have to get a \"yes\/no\" response. In this case, our standard idempontent map on enables us to ask something to the effect of \"is this a yes\/no question?\" which is forced to converge to the value \"yes\".    "
},
{
  "id": "example-106",
  "level": "2",
  "url": "session15-p3.html#example-106",
  "type": "Example",
  "number": "4.12.1",
  "title": "Exercise 4:.",
  "body": " Exercise 4:   ... is itself a map of dynamical systems...    We've defined the category of based on the quality of structure preservation such that for an arbitrary map we enforce the condition that . For this exercise, we're essentially considering the special case where and .  We know that is an endomap on , so we know is a valid map in . To prove that we have a well defined map we'll need to show our structure preservation property still holds. If we substitute into , we get which is obviously true.  It really feels like this is stating the obvious, but perhaps we never explicitly proved that -maps must satisfy this \"reflexive property\".   "
},
{
  "id": "example-107",
  "level": "2",
  "url": "session15-p3.html#example-107",
  "type": "Example",
  "number": "4.12.2",
  "title": "Exercise 5:.",
  "body": " Exercise 5:   ..if corresponds to ...    I'm assuming we're using the same set-up as Exercise 3 here. Given , we know . In particular, this must be true for , establishing that . We then used induction to establish that for all .  In Exercise 4, we proved that for any , the map is itself a well defined map . It follows that defines a map . Since compositions of -maps produce -maps, our composition should be well defined map such that .  When they say \" corresponds to \", we mean that we can evaluate at 0 to get or iterate from to get using . For , we can easily evaluate to establish . However, we still need to show that .  As in Exercise 3, I think we can do this through induction. We've already established that , so we know that for . Consider the case of . Given , we can rewrite as . Subsitute to get which can be rewritten as by the associative property. This means that implies .  Having established that both and , we can use induction to establish that for the entire domain of .   "
},
{
  "id": "example-108",
  "level": "2",
  "url": "session15-p3.html#example-108",
  "type": "Example",
  "number": "4.12.3",
  "title": "Exercise 6:.",
  "body": " Exercise 6:   ...gender map     We're provided the following diagram for :   Definition of      Here the set is the set of people, the operator is a map that returns the mother of specified person, and is the gender binary map specified above. In order to show is an , we need to establish that it is both a valid map in and upholds the structure of the endomap .  First of all, let's address the reality that this is toy model of gender. In this exercise we're implicitly assuming  is a valid -map. We're excluding the existence of non-binary people in this way. We're also assuming that we have a mother -map, , that's defined for all . This model breaks if we \"clone\" a male, effectively excluding Stormtroopers from our set of people.  There's also some ambiguity because we haven't yet named the endomap on yet. I think the reason is because the endomap on is induced by the maps and . For clarity's sake, let's define to be the corresponding endomap in the \"gender-binary space\". This map is based on an assumption that the answer to \"what gender is your mother?\" will always \"female\".  Under those contraints on , showing is an valid -map basically comes down to establishing the relation . Perhaps this is most easily shown in a table.   Table of values for gender map           \"son\"  male  \"mother\"  female  female    \"daughter\"  female  \"mother\"  female  female     Essentially, both and are constant maps. We know because we've defined them both so that they both always return \"female\". In order for us to have an \" objectification in the subjective of gender\", all we have to do is to start excluding the people that don't fit our model!  I guess the lesson here is that if you ask a \"yes\/no\" question you have to get a \"yes\/no\" response. In this case, our standard idempontent map on enables us to ask something to the effect of \"is this a yes\/no question?\" which is forced to converge to the value \"yes\".   "
},
{
  "id": "session15-p4",
  "level": "1",
  "url": "session15-p4.html",
  "type": "Section",
  "number": "4.13",
  "title": "Session 15: Objectification of Properties, Part 4",
  "body": " Session 15: Objectification of Properties, Part 4  So... here's the deal. This week has been completely devoted to a single exercise. I might not even have a satisfactory solution by the end of this, but that's okay. Learning math is sometimes messy like this. Sometimes all you can do is just lay out the information you know and start asking questions, so that's what you do.   Exercise 7:    ... above to above...  Before we begin, I want to preface this with an additional spoiler. I got really stuck at 12\/14 maps. If you're stuck there also, I'd encourage you to take a break from it. I know I needed it.     Let's begin with some diagrams of our endomaps:   Definitions of and      I'm going to try to adhere to the text as closely as I can for now. Thus, has been labeled using it's presentation already with the generators given as . Our presention includes following 4 relations:                        We're looking for maps for which these generators from get assigned to points in such that for every . For now, we're not sure what assignments will make that happen so we'll just call these mystery points , , , and . Since we established that for all , we can match each of our relations on with a corresponding relation on :                        Beginning with the generator , we're going to look for a list potential points in that satisfy our first relation: . The textbook helps us out by pointing out that meet this condition but do not. Thus, we can make four possible assignments for : .  If we assign , we can apply the operator until we form a loop. If we do so, we find that , , and . Our second relation implies that , but we already know so that means that whatever we choose for must satisfy . In the diagram, the only arrows leading into point are the arrows originating at . Thus our only valid assignments for , given , are and .  Given these two choices of , we can start to narrow down our choices of as well. If we assume that implies that must have an arrow leading to point . Presicely one point has that property, namely .  Our final relation specifies that , and there's only one 2-cycle in that could satisfy this. This means that needs to be either or . Having exhausted all possibilities for maps such that , we're currently sitting on a list of 4 maps: , , , ,  Moving on, our next possible assignment is . Iterating from there gives us the following: , , and .  As before, our second relation limits our choice of . Knowing tell us that there must be an arrow from to , and the only arrow with a target of is the one originating at point . Thus, .  Testing our third relation places limits on . Since , the needs to be an arrow from point to and this is uniquely satisfied by point .  Our choices for are still independent of our choices for , specifically . This gives us two new maps, and , bringing our running total of maps to 6.  Our third option for is . If we assign , it follows that , , and . Since , it follows that must be because there's only one arrow leading into . With our third relation telling us , that tells us that our choice of must have an arrow leading to . Two such points satisfy this, namely . For each of those choices of , there are still two independent choices for . This gives us a total of 4 maps with bringing our running total to 10. Specifically, our new maps are , , , and .  Our final choice for is . Going through our algorithm again, we start be iterating to get , , and . Our must satisfy , so the only choice is . Our must satisfy , so the only choice is . Once again, our choice of is still independent with two options of . These two maps, and , bring our running total to 12.  And.... this is where I got stuck. I mean, really stuck.  After going through this algorithm 3 times and getting the same 12 maps, I decided to double check my work using Python. Both my implementation of the described algorithm and my exhaustive search both only found the same 12 maps seen here.  Once I kind of a way of quickly testing arbitrary maps for structure preservation, I was able to speed up my testing of different hypotheses about where my missing two maps could be. After several hours of unsuccessfully scouring the Internets for answers, I decided it was time for a break and cracked open a beer.  Yeah, I know that's not what you'd expect the solution to a math problem to be. But that's precisely what I needed at the time.  That beer was to my hand what the pillow was to Alphonse in Last week's #Caturday post:    A demonstration of parallels between the \"standard idempotent\" illustrated by photos of a cushion with and without a cat.    I think that I was so wrapped up in my own version of the problem. I wasn't actually reading what the authors said . The text does not state there are 14 maps, it was just \"heavily implied\".  This question is starting to feel self-referential in a way I hadn't been expecting. My current line of thinking is authors' use of the pronoun \"I\" instead of \"we\" here is done with intention, and that my two missing maps are somehow related to the way the \"null map\" and the \"identity map\" were handled in the bookkeeping rules of the broader category.  I think I'm going to let this stew for while to see if I can come up with a better solution that answers this and Exercise 9 simultaneously.  Stay tuned.    "
},
{
  "id": "example-109",
  "level": "2",
  "url": "session15-p4.html#example-109",
  "type": "Example",
  "number": "4.13.1",
  "title": "Exercise 7:.",
  "body": " Exercise 7:    ... above to above...  Before we begin, I want to preface this with an additional spoiler. I got really stuck at 12\/14 maps. If you're stuck there also, I'd encourage you to take a break from it. I know I needed it.     Let's begin with some diagrams of our endomaps:   Definitions of and      I'm going to try to adhere to the text as closely as I can for now. Thus, has been labeled using it's presentation already with the generators given as . Our presention includes following 4 relations:                        We're looking for maps for which these generators from get assigned to points in such that for every . For now, we're not sure what assignments will make that happen so we'll just call these mystery points , , , and . Since we established that for all , we can match each of our relations on with a corresponding relation on :                        Beginning with the generator , we're going to look for a list potential points in that satisfy our first relation: . The textbook helps us out by pointing out that meet this condition but do not. Thus, we can make four possible assignments for : .  If we assign , we can apply the operator until we form a loop. If we do so, we find that , , and . Our second relation implies that , but we already know so that means that whatever we choose for must satisfy . In the diagram, the only arrows leading into point are the arrows originating at . Thus our only valid assignments for , given , are and .  Given these two choices of , we can start to narrow down our choices of as well. If we assume that implies that must have an arrow leading to point . Presicely one point has that property, namely .  Our final relation specifies that , and there's only one 2-cycle in that could satisfy this. This means that needs to be either or . Having exhausted all possibilities for maps such that , we're currently sitting on a list of 4 maps: , , , ,  Moving on, our next possible assignment is . Iterating from there gives us the following: , , and .  As before, our second relation limits our choice of . Knowing tell us that there must be an arrow from to , and the only arrow with a target of is the one originating at point . Thus, .  Testing our third relation places limits on . Since , the needs to be an arrow from point to and this is uniquely satisfied by point .  Our choices for are still independent of our choices for , specifically . This gives us two new maps, and , bringing our running total of maps to 6.  Our third option for is . If we assign , it follows that , , and . Since , it follows that must be because there's only one arrow leading into . With our third relation telling us , that tells us that our choice of must have an arrow leading to . Two such points satisfy this, namely . For each of those choices of , there are still two independent choices for . This gives us a total of 4 maps with bringing our running total to 10. Specifically, our new maps are , , , and .  Our final choice for is . Going through our algorithm again, we start be iterating to get , , and . Our must satisfy , so the only choice is . Our must satisfy , so the only choice is . Once again, our choice of is still independent with two options of . These two maps, and , bring our running total to 12.  And.... this is where I got stuck. I mean, really stuck.  After going through this algorithm 3 times and getting the same 12 maps, I decided to double check my work using Python. Both my implementation of the described algorithm and my exhaustive search both only found the same 12 maps seen here.  Once I kind of a way of quickly testing arbitrary maps for structure preservation, I was able to speed up my testing of different hypotheses about where my missing two maps could be. After several hours of unsuccessfully scouring the Internets for answers, I decided it was time for a break and cracked open a beer.  Yeah, I know that's not what you'd expect the solution to a math problem to be. But that's precisely what I needed at the time.  That beer was to my hand what the pillow was to Alphonse in Last week's #Caturday post:    A demonstration of parallels between the \"standard idempotent\" illustrated by photos of a cushion with and without a cat.    I think that I was so wrapped up in my own version of the problem. I wasn't actually reading what the authors said . The text does not state there are 14 maps, it was just \"heavily implied\".  This question is starting to feel self-referential in a way I hadn't been expecting. My current line of thinking is authors' use of the pronoun \"I\" instead of \"we\" here is done with intention, and that my two missing maps are somehow related to the way the \"null map\" and the \"identity map\" were handled in the bookkeeping rules of the broader category.  I think I'm going to let this stew for while to see if I can come up with a better solution that answers this and Exercise 9 simultaneously.  Stay tuned.   "
},
{
  "id": "colophon-2",
  "level": "1",
  "url": "colophon-2.html",
  "type": "Colophon",
  "number": "",
  "title": "Colophon",
  "body": " This book was authored in PreTeXt .  "
}
]

var ptx_lunr_idx = lunr(function () {
  this.ref('id')
  this.field('title')
  this.field('body')
  this.metadataWhitelist = ['position']

  ptx_lunr_docs.forEach(function (doc) {
    this.add(doc)
  }, this)
})
